from header_common import *
from header_presentations import *
from header_mission_templates import *
from ID_meshes import *
from header_operations import *
from header_triggers import *
from module_constants import *
from module_info import *
from header_skills import * 
from header_items import *
from module_items import *

import string

from module_info import wb_compile_switch
from module_info import wb_compile_switch as is_a_wb_cutscene

####################################################################################################################
#  Each presentation record contains the following fields:
#  1) Presentation id: used for referencing presentations in other files. The prefix prsnt_ is automatically added before each presentation id.
#  2) Presentation flags. See header_presentations.py for a list of available flags
#  3) Presentation background mesh: See module_meshes.py for a list of available background meshes
#  4) Triggers: Simple triggers that are associated with the presentation
####################################################################################################################


# Shows coordinates on a presentation for easy development
# Set debug_show_presentation_coordinates on module_constants.py
coord_helper = [
  (ti_on_presentation_load, [
    ]+concatenate_scripts([[
      (eq, cheat_switch, 1),
      #(eq, debug_show_presentation_coordinates, 1),
      (create_text_overlay, "$mouse_coordinates", "str_empty_string"),
      (overlay_set_color, "$mouse_coordinates", 0xFF0000),
      (position_set_x, pos1, 10),
      (position_set_y, pos1, 700),
      (overlay_set_position, "$mouse_coordinates", pos1),
      ] for ct in range(cheat_switch)])+[ 
  ]),
  (ti_on_presentation_run, [
    ]+concatenate_scripts([[
      (eq, cheat_switch, 1),
      #(eq, debug_show_presentation_coordinates, 1),
      (set_fixed_point_multiplier, 1000),
      
      (mouse_get_position, pos1),
      (position_get_x, reg65, pos1),
      (position_get_y, reg66, pos1),
      (position_get_z, reg67, pos1),
      (overlay_set_text, "$mouse_coordinates", "@{reg65}, {reg66}, {reg67}"),
       ] for ct in range(cheat_switch)])+[ 
  ])
]

presentations = [
("game_credits",prsntf_read_only,mesh_load_window,[
      (ti_on_presentation_load,
       [(assign, "$g_presentation_credits_obj_1", -1),
        (assign, "$g_presentation_credits_obj_2", -1),
        (assign, "$g_presentation_credits_obj_3", -1),
        (assign, "$g_presentation_credits_obj_4", -1),
        (assign, "$g_presentation_credits_obj_5", -1),
        (assign, "$g_presentation_credits_obj_6", -1),
        (assign, "$g_presentation_credits_obj_7", -1),
        (assign, "$g_presentation_credits_obj_8", -1),
        (assign, "$g_presentation_credits_obj_9", -1),
        (assign, "$g_presentation_credits_obj_10", -1),
        (assign, "$g_presentation_credits_obj_11", -1),
        (assign, "$g_presentation_credits_obj_12", -1),
        (assign, "$g_presentation_credits_obj_1_alpha", 0),
        (assign, "$g_presentation_credits_obj_2_alpha", 0),
        (assign, "$g_presentation_credits_obj_3_alpha", 0),
        (assign, "$g_presentation_credits_obj_4_alpha", 0),
        (assign, "$g_presentation_credits_obj_5_alpha", 0),
        (assign, "$g_presentation_credits_obj_6_alpha", 0),
        (assign, "$g_presentation_credits_obj_7_alpha", 0),
        (assign, "$g_presentation_credits_obj_8_alpha", 0),
        (assign, "$g_presentation_credits_obj_9_alpha", 0),
        ]),
      (ti_on_presentation_run,
       [
        (store_trigger_param_1, ":cur_time"),
        (set_fixed_point_multiplier, 1000),
        (presentation_set_duration, 1000000),
        (try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (this_or_next|key_clicked, key_back_space),
          (this_or_next|key_clicked, key_left_mouse_button),
          (key_clicked, key_right_mouse_button),
          (presentation_set_duration, 0),
        (try_end),
        (try_begin),
          (lt, "$g_presentation_credits_obj_1", 0),
          (str_store_string, s1, "str_credits_1"),
          (create_text_overlay, "$g_presentation_credits_obj_1", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_1", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_1", 0),
          (position_set_x, pos1, 1500),
          (position_set_y, pos1, 1500),
          (overlay_set_size, "$g_presentation_credits_obj_1", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_1", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 2000),
          (eq, "$g_presentation_credits_obj_1_alpha", 0),
          (assign, "$g_presentation_credits_obj_1_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_1", 1000, 0x00),
        (else_try),
          (gt, ":cur_time", 3500),
          (lt, "$g_presentation_credits_obj_2", 0),
          (str_store_string, s1, "str_credits_2"),
          (create_text_overlay, "$g_presentation_credits_obj_2", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_2", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_2", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_2", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_2", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 5500),
          (eq, "$g_presentation_credits_obj_2_alpha", 0),
          (assign, "$g_presentation_credits_obj_2_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_2", 1000, 0x00),
        (else_try),
          (gt, ":cur_time", 7000),
          (lt, "$g_presentation_credits_obj_3", 0),
          (str_store_string, s1, "str_credits_3"),
          (create_text_overlay, "$g_presentation_credits_obj_3", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_3", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_3", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_3", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_3", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 9000),
          (eq, "$g_presentation_credits_obj_3_alpha", 0),
          (assign, "$g_presentation_credits_obj_3_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_3", 1000, 0),
        (else_try),
          (gt, ":cur_time", 10500),
          (lt, "$g_presentation_credits_obj_4", 0),
          (str_store_string, s1, "str_credits_4"),
          (create_text_overlay, "$g_presentation_credits_obj_4", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_4", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_4", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_4", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_4", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 12500),
          (eq, "$g_presentation_credits_obj_4_alpha", 0),
          (assign, "$g_presentation_credits_obj_4_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_4", 1000, 0),
        (else_try),
          (gt, ":cur_time", 14000),
          (lt, "$g_presentation_credits_obj_5", 0),
          (str_store_string, s1, "str_credits_8"),
          (create_text_overlay, "$g_presentation_credits_obj_5", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_5", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_5", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_5", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_5", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_5", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 16000),
          (eq, "$g_presentation_credits_obj_5_alpha", 0),
          (assign, "$g_presentation_credits_obj_5_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_5", 1000, 0),
        (else_try),
          (gt, ":cur_time", 17500),
          (lt, "$g_presentation_credits_obj_6", 0),
          (str_store_string, s1, "str_credits_5"),
          (create_text_overlay, "$g_presentation_credits_obj_6", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_6", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_6", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_6", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_6", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_6", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 19500),
          (eq, "$g_presentation_credits_obj_6_alpha", 0),
          (assign, "$g_presentation_credits_obj_6_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_6", 1000, 0),
        (else_try),
          (gt, ":cur_time", 21000),
          (lt, "$g_presentation_credits_obj_7", 0),
          (str_store_string, s1, "str_credits_6"),
          (create_text_overlay, "$g_presentation_credits_obj_7", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_7", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_7", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_7", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_7", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_7", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 23000),
          (eq, "$g_presentation_credits_obj_7_alpha", 0),
          (assign, "$g_presentation_credits_obj_7_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_7", 1000, 0),
        (else_try),
          (gt, ":cur_time", 24500),
          (lt, "$g_presentation_credits_obj_8", 0),
          (str_store_string, s1, "str_credits_9"),
          (create_text_overlay, "$g_presentation_credits_obj_8", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_8", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_8", 0),
          (position_set_x, pos1, 1750),
          (position_set_y, pos1, 1750),
          (overlay_set_size, "$g_presentation_credits_obj_8", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 375),
          (overlay_set_position, "$g_presentation_credits_obj_8", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_8", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 26500),
          (eq, "$g_presentation_credits_obj_8_alpha", 0),
          (assign, "$g_presentation_credits_obj_8_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_8", 1000, 0),
        (else_try),
          (gt, ":cur_time", 28000),
          (lt, "$g_presentation_credits_obj_9", 0),
          (str_store_string, s1, "str_credits_10"),
          (create_text_overlay, "$g_presentation_credits_obj_9", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_9", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_9", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_9", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 485),
          (overlay_set_position, "$g_presentation_credits_obj_9", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_9", 1000, 0xFF),

          (str_store_string, s1, "str_credits_11"),
          (create_text_overlay, "$g_presentation_credits_obj_10", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_10", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_10", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_10", pos1),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 470),
          (overlay_set_position, "$g_presentation_credits_obj_10", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_10", 1000, 0xFF),

          (str_store_string, s1, "str_credits_12"),
          (create_text_overlay, "$g_presentation_credits_obj_11", s1, tf_center_justify|tf_double_space|tf_vertical_align_center),
          (overlay_set_color, "$g_presentation_credits_obj_11", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_11", 0),
          (position_set_x, pos1, 750),
          (position_set_y, pos1, 750),
          (overlay_set_size, "$g_presentation_credits_obj_11", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 105),
          (overlay_set_position, "$g_presentation_credits_obj_11", pos1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_11", 1000, 0xFF),
        (else_try),
          (gt, ":cur_time", 34000),
          (eq, "$g_presentation_credits_obj_9_alpha", 0),
          (assign, "$g_presentation_credits_obj_9_alpha", 1),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_9", 1000, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_10", 1000, 0),
          (overlay_animate_to_alpha, "$g_presentation_credits_obj_11", 1000, 0),
        (else_try),
          (gt, ":cur_time", 35500),
          (lt, "$g_presentation_credits_obj_12", 0),
          (str_store_string, s1, "str_credits_7"),
          (create_text_overlay, "$g_presentation_credits_obj_12", s1, tf_center_justify|tf_double_space),
          (overlay_set_color, "$g_presentation_credits_obj_12", 0),
          (overlay_set_alpha, "$g_presentation_credits_obj_12", 0xFF),
          (position_set_x, pos1, 1000),
          (position_set_y, pos1, 1000),
          (overlay_set_size, "$g_presentation_credits_obj_12", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, -6100),
          (overlay_set_position, "$g_presentation_credits_obj_12", pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 760),
          (overlay_animate_to_position, "$g_presentation_credits_obj_12", 70000, pos1),
        (else_try),
          (gt, ":cur_time", 105500),
          (presentation_set_duration, 0),
        (try_end),
        ]),
]),

("banner_selection",0,mesh_load_window,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (str_store_string, s1, "str_banner_selection_text"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_button_overlay, "$g_presentation_obj_1", "@Next Page", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_1", pos1),

        (assign, ":x_pos", 150),
        (assign, ":y_pos", 575),
        (assign, ":try_end", banner_meshes_end_minus_one),
        (store_mul, ":begin_mesh", 16, "$g_presentation_page_no"),
        (val_add, ":begin_mesh", banner_meshes_begin),
        (store_add, ":try_end_2", ":begin_mesh", 16),
        (val_min, ":try_end", ":try_end_2"),
        (store_add, "$g_presentation_banner_start", "$g_presentation_obj_1", 1),
        (try_for_range, ":cur_banner_mesh", ":begin_mesh", ":try_end"),
          (create_image_button_overlay, reg1, ":cur_banner_mesh", ":cur_banner_mesh"),
          (position_set_x, pos1, ":x_pos"),
          (position_set_y, pos1, ":y_pos"),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (val_add, ":x_pos", 100),
          (ge, ":x_pos", 900),
          (assign, ":x_pos", 150),
          (val_sub, ":y_pos", 250),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (val_add, "$g_presentation_page_no", 1),
          (val_mod, "$g_presentation_page_no", 8),
          (start_presentation, "prsnt_banner_selection"),
        (else_try),
          (store_sub, ":selected_banner", ":object", "$g_presentation_banner_start"),
          (store_mul, ":page_adder", 16, "$g_presentation_page_no"),
          (val_add, ":selected_banner", ":page_adder"),
          (store_add, ":selected_banner_map_icon", ":selected_banner", banner_map_icons_begin),
          (party_set_banner_icon, "p_main_party", ":selected_banner_map_icon"),
          (store_add, ":selected_banner_spr", ":selected_banner", banner_scene_props_begin),
          (troop_set_slot, "trp_player", slot_troop_banner_scene_prop, ":selected_banner_spr"),
          (presentation_set_duration, 0),
          (assign, ":troop_to_change", 0),
          (assign, ":end_cond", kingdom_heroes_end),
          (try_for_range, ":cur_troop", kingdom_heroes_begin, ":end_cond"),
            (troop_slot_eq, ":cur_troop", slot_troop_banner_scene_prop, ":selected_banner_spr"),
            (assign, ":troop_to_change", ":cur_troop"),
            (assign, ":end_cond", 0),
            (troop_set_slot, ":cur_troop", slot_troop_banner_scene_prop, banner_scene_props_end_minus_one),
            (troop_get_slot, ":cur_party", ":cur_troop", slot_troop_leaded_party),
            (gt, ":cur_party", 0),
            (party_set_banner_icon, ":cur_party", banner_map_icons_end_minus_one),
          (try_end),
          (try_for_range, ":cur_center", centers_begin, centers_end),
            (try_begin),
              (party_slot_eq, ":cur_center", slot_town_lord, "trp_player"),
              (party_set_banner_icon, ":cur_center", ":selected_banner_map_icon"),
            (else_try),
              (party_slot_eq, ":cur_center", slot_town_lord, ":troop_to_change"),
	          (party_slot_eq, ":cur_center", slot_center_destroyed, 0), #TLD - not destroyed
              (party_set_banner_icon, ":cur_center", banner_map_icons_end_minus_one),
            (try_end),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_run,
       [(try_begin),
          (this_or_next|key_clicked, key_space),
          (this_or_next|key_clicked, key_enter),
          (this_or_next|key_clicked, key_escape),
          (key_clicked, key_back_space),
          (presentation_set_duration, 0),
        (try_end),

        ]),
]),
("custom_banner", 0, mesh_load_window, [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (troop_get_slot, ":flag_type", "trp_player", slot_troop_custom_banner_flag_type),
        (val_max, ":flag_type", 0),
        (val_add, ":flag_type", custom_banner_flag_types_begin),
        (troop_get_slot, ":map_flag_type", "trp_player", slot_troop_custom_banner_map_flag_type),
        (val_max, ":map_flag_type", 0),
        (val_add, ":map_flag_type", custom_banner_flag_map_types_begin),
##        (create_mesh_overlay_with_tableau_material, "$g_presentation_obj_1", ":flag_type", "tableau_custom_banner_square", "trp_player"),
        (troop_get_slot, ":bg_color_1", "trp_player", slot_troop_custom_banner_bg_color_1),
        (troop_get_slot, ":bg_color_2", "trp_player", slot_troop_custom_banner_bg_color_2),
        
        (create_text_overlay, reg1, "str_color_no_1", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "str_color_no_2", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),

        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_22", "mesh_color_picker", "tableau_color_picker", ":bg_color_1"),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_23", "mesh_color_picker", "tableau_color_picker", ":bg_color_2"),
        (position_set_x, pos1, 200),
        (position_set_y, pos1, 565),
        (overlay_set_position, "$g_presentation_obj_22", pos1),
        (position_set_y, pos1, 515),
        (overlay_set_position, "$g_presentation_obj_23", pos1),
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 250),
        (overlay_set_size, "$g_presentation_obj_22", pos1),
        (overlay_set_size, "$g_presentation_obj_23", pos1),
        
        (create_button_overlay, "$g_presentation_obj_2", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_3", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_4", "str_change_background", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_5", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_19", "str_change", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_20", "str_accept", tf_center_justify),
        (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
        (create_button_overlay, "$g_presentation_obj_16", "str_randomize", tf_center_justify),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_17", ":flag_type", "tableau_custom_banner_default", "trp_player"),
        (try_begin),
          (eq, ":map_flag_type", "mesh_custom_map_banner_01"),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_18", ":map_flag_type", "tableau_custom_banner_square", "trp_player"),
        (else_try),
          (eq, ":map_flag_type", "mesh_custom_map_banner_02"),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_18", ":map_flag_type", "tableau_custom_banner_short", "trp_player"),
        (else_try),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_18", ":map_flag_type", "tableau_custom_banner_tall", "trp_player"),
        (try_end),
        (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_1", -1, "tableau_custom_banner_square_no_mesh", "trp_player"),
        (create_text_overlay, reg1, "str_sample_banner", tf_center_justify),
        (position_set_x, pos1, 825),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "str_sample_map_banner", tf_center_justify),
        (position_set_y, pos1, 500),
        (overlay_set_position, reg1, pos1),

        (position_set_x, pos1, 800),
        (position_set_y, pos1, 640),
        (overlay_set_position, "$g_presentation_obj_17", pos1),
        (position_set_x, pos1, 780),
        (position_set_y, pos1, 315),
        (overlay_set_position, "$g_presentation_obj_18", pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, "$g_presentation_obj_17", pos1),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 50),
        (overlay_set_size, "$g_presentation_obj_18", pos1),
        

        (create_text_overlay, reg1, "str_number_of_charges", 0),
        (position_set_x, pos1, 40),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),

        (assign, reg1, ":num_charges"),
        (create_text_overlay, reg2, "str_reg1", tf_center_justify),
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg2, pos1),
        (try_begin),
          (lt, ":num_charges", 4),
          (create_button_overlay, "$g_presentation_obj_15", "str_plus", tf_center_justify),
          (position_set_x, pos1, 385),
          (position_set_y, pos1, 350),
          (overlay_set_position, "$g_presentation_obj_15", pos1),
        (else_try),
          (assign, "$g_presentation_obj_15", -1),
        (try_end),
        (try_begin),
          (gt, ":num_charges", 0),
          (create_button_overlay, "$g_presentation_obj_21", "str_minus", tf_center_justify),
          (position_set_x, pos1, 370),
          (position_set_y, pos1, 350),
          (overlay_set_position, "$g_presentation_obj_21", pos1),
        (else_try),
          (assign, "$g_presentation_obj_21", -1),
        (try_end),

        (try_begin),
          (ge, ":num_charges", 1),
          (create_text_overlay, reg1, "str_charge", tf_center_justify),
          (position_set_x, pos1, 300),
          (position_set_y, pos1, 300),
          (overlay_set_position, reg1, pos1),
          (create_text_overlay, reg1, "str_color", tf_center_justify),
          (position_set_x, pos1, 550),
          (position_set_y, pos1, 300),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_14", "str_change_charge_position", tf_center_justify),
          (position_set_y, pos1, 350),
          (position_set_x, pos1, 550),
          (overlay_set_position, "$g_presentation_obj_14", pos1),

          (create_text_overlay, reg1, "str_charge_no_1", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 240),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_6", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_6", pos1),
          (create_button_overlay, "$g_presentation_obj_7", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_7", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_1),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_24", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 255),
          (overlay_set_position, "$g_presentation_obj_24", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_24", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_1),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_28", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 255),
          (overlay_set_position, "$g_presentation_obj_28", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_28", pos1),

          (create_button_overlay, "$g_presentation_obj_32", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 240),
          (overlay_set_position, "$g_presentation_obj_32", pos1),
          (create_button_overlay, "$g_presentation_obj_33", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_33", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 2),
          (create_text_overlay, reg1, "str_charge_no_2", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 180),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_8", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_8", pos1),
          (create_button_overlay, "$g_presentation_obj_9", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_9", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_2),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_25", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 195),
          (overlay_set_position, "$g_presentation_obj_25", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_25", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_2),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_29", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 195),
          (overlay_set_position, "$g_presentation_obj_29", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_29", pos1),

          (create_button_overlay, "$g_presentation_obj_34", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 180),
          (overlay_set_position, "$g_presentation_obj_34", pos1),
          (create_button_overlay, "$g_presentation_obj_35", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_35", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 3),
          (create_text_overlay, reg1, "str_charge_no_3", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 120),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_10", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_10", pos1),
          (create_button_overlay, "$g_presentation_obj_11", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_11", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_3),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_26", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 135),
          (overlay_set_position, "$g_presentation_obj_26", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_26", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_3),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_30", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 135),
          (overlay_set_position, "$g_presentation_obj_30", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_30", pos1),

          (create_button_overlay, "$g_presentation_obj_36", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 120),
          (overlay_set_position, "$g_presentation_obj_36", pos1),
          (create_button_overlay, "$g_presentation_obj_37", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_37", pos1),
        (try_end),
        (try_begin),
          (ge, ":num_charges", 4),
          (create_text_overlay, reg1, "str_charge_no_4", 0),
          (position_set_x, pos1, 40),
          (position_set_y, pos1, 60),
          (overlay_set_position, reg1, pos1),
          (create_button_overlay, "$g_presentation_obj_12", "str_change", 0),
          (position_set_x, pos1, 310),
          (overlay_set_position, "$g_presentation_obj_12", pos1),
          (create_button_overlay, "$g_presentation_obj_13", "str_change", 0),
          (position_set_x, pos1, 560),
          (overlay_set_position, "$g_presentation_obj_13", pos1),
          (troop_get_slot, ":cur_charge", "trp_player", slot_troop_custom_banner_charge_type_4),
          (val_mod, ":cur_charge", 256),
          (val_add, ":cur_charge", custom_banner_charges_begin),
          (create_image_button_overlay, "$g_presentation_obj_27", ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, 260),
          (position_set_y, pos1, 75),
          (overlay_set_position, "$g_presentation_obj_27", pos1),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 50),
          (overlay_set_size, "$g_presentation_obj_27", pos1),
          (troop_get_slot, ":cur_charge_color", "trp_player", slot_troop_custom_banner_charge_color_4),
          (create_image_button_overlay_with_tableau_material, "$g_presentation_obj_31", "mesh_color_picker", "tableau_color_picker", ":cur_charge_color"),
          (position_set_x, pos1, 530),
          (position_set_y, pos1, 75),
          (overlay_set_position, "$g_presentation_obj_31", pos1),
          (position_set_x, pos1, 250),
          (position_set_y, pos1, 250),
          (overlay_set_size, "$g_presentation_obj_31", pos1),

          (create_button_overlay, "$g_presentation_obj_38", "str_flip_horizontal", 0),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 60),
          (overlay_set_position, "$g_presentation_obj_38", pos1),
          (create_button_overlay, "$g_presentation_obj_39", "str_flip_vertical", 0),
          (position_set_x, pos1, 800),
          (overlay_set_position, "$g_presentation_obj_39", pos1),
        (try_end),
        
        (position_set_x, pos1, 350),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_x, pos1, 275),
        (position_set_y, pos1, 550),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (position_set_x, pos1, 175),
        (position_set_y, pos1, 600),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        (position_set_x, pos1, 880),
        (position_set_y, pos1, 575),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_19", pos1),
        (position_set_y, pos1, 650),
        (position_set_x, pos1, 175),
        (overlay_set_position, "$g_presentation_obj_16", pos1),
        (position_set_y, pos1, 150),
        (position_set_x, pos1, 850),
        (overlay_set_position, "$g_presentation_obj_20", pos1),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
        (try_begin),
          (this_or_next|eq, ":object", "$g_presentation_obj_2"),
          (eq, ":object", "$g_presentation_obj_22"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_bg_color_1),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_3"),
          (eq, ":object", "$g_presentation_obj_23"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_bg_color_2),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (this_or_next|eq, ":object", "$g_presentation_obj_4"),
          (eq, ":object", "$g_presentation_obj_1"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_background_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_type_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (this_or_next|eq, ":object", "$g_presentation_obj_6"),
          (eq, ":object", "$g_presentation_obj_24"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_1),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (this_or_next|eq, ":object", "$g_presentation_obj_7"),
          (eq, ":object", "$g_presentation_obj_28"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_1),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 2),
          (this_or_next|eq, ":object", "$g_presentation_obj_8"),
          (eq, ":object", "$g_presentation_obj_25"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_2),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 2),
          (this_or_next|eq, ":object", "$g_presentation_obj_9"),
          (eq, ":object", "$g_presentation_obj_29"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_2),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 3),
          (this_or_next|eq, ":object", "$g_presentation_obj_10"),
          (eq, ":object", "$g_presentation_obj_26"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_3),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 3),
          (this_or_next|eq, ":object", "$g_presentation_obj_11"),
          (eq, ":object", "$g_presentation_obj_30"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_3),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 4),
          (this_or_next|eq, ":object", "$g_presentation_obj_12"),
          (eq, ":object", "$g_presentation_obj_27"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_type_4),
          (start_presentation, "prsnt_banner_charge_selection"),
        (else_try),
          (ge, ":num_charges", 4),
          (this_or_next|eq, ":object", "$g_presentation_obj_13"),
          (eq, ":object", "$g_presentation_obj_31"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (assign, "$g_presentation_output_slot", slot_troop_custom_banner_charge_color_4),
          (start_presentation, "prsnt_color_selection"),
        (else_try),
          (ge, ":num_charges", 1),
          (eq, ":object", "$g_presentation_obj_14"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_charge_positioning"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_15"),
          (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
          (val_add, ":num_charges", 1),
          (val_clamp, ":num_charges", 0, 5),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_num_charges, ":num_charges"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_21"),
          (troop_get_slot, ":num_charges", "trp_player", slot_troop_custom_banner_num_charges),
          (val_sub, ":num_charges", 1),
          (val_clamp, ":num_charges", 0, 5),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_num_charges, ":num_charges"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_16"),
          (call_script, "script_get_random_custom_banner", "trp_player"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_17"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_18"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_map_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_19"),
          (assign, "$g_presentation_next_presentation", "prsnt_custom_banner"),
          (start_presentation, "prsnt_banner_flag_map_type_selection"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_32"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_1),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_1, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_34"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_2),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_2, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_36"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_3),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_3, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_38"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_4),
          (store_mod, ":charge_type_base", ":charge_type", 256),
          (val_div, ":charge_type", 256),
          (store_mod, ":flag", ":charge_type", 2),
          (val_div, ":charge_type", 2), #remove flag
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":charge_type", 2),
          (val_add, ":charge_type", ":flag"),
          (val_mul, ":charge_type", 256),
          (val_add, ":charge_type", ":charge_type_base"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_4, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_33"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_1),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_1, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_35"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_2),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_2, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_37"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_3),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_3, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_39"),
          (troop_get_slot, ":charge_type", "trp_player", slot_troop_custom_banner_charge_type_4),
          (store_div, ":flag", ":charge_type", 512),
          (val_add, ":flag", 1),
          (val_mod, ":flag", 2), #switch flag
          (val_mul, ":flag", 512),
          (val_mod, ":charge_type", 512), #remove flag
          (val_add, ":charge_type", ":flag"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_charge_type_4, ":charge_type"),
          (start_presentation, "prsnt_custom_banner"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_20"),
          (troop_get_slot, ":flag_icon", "trp_player", slot_troop_custom_banner_map_flag_type),
          (try_begin),
            (ge, ":flag_icon", 0),
            (val_add, ":flag_icon", custom_banner_map_icons_begin),
            (party_set_banner_icon, "p_main_party", ":flag_icon"),
          (try_end),
          (presentation_set_duration, 0),
        (try_end),
        ]),
##     (ti_on_presentation_run,
##      [(try_begin),
##         (this_or_next|key_clicked, key_space),
##         (this_or_next|key_clicked, key_enter),
##         (this_or_next|key_clicked, key_escape),
##         (key_clicked, key_back_space),
##         (presentation_set_duration, 0),
##       (try_end),
##       ]),
]),
("banner_charge_positioning", 0, mesh_load_window,  [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_position", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 125),
        (assign, ":pos_y", 400),
        (call_script, "script_get_troop_custom_banner_num_positionings", "trp_player"),
        (assign, ":num_positionings", reg0),
        (store_mul, ":x_needed", ":num_positionings", 125),
        (val_sub, ":x_needed", 25),
        (store_div, ":pos_x", ":x_needed", 2),
        (store_sub, ":pos_x", 500, ":pos_x"),
        (try_for_range, ":cur_positioning", 0, ":num_positionings"),
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_positioning_selection", ":cur_positioning"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 125),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":cur_positioning", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (call_script, "script_get_troop_custom_banner_num_positionings", "trp_player"),
        (assign, ":num_positionings", reg0),
        (try_for_range, ":trp_slot_index", 0, ":num_positionings"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_positioning, ":trp_slot_index"),
          (assign, ":num_positionings", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
]),
("banner_charge_selection", 0, mesh_load_window, [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_charge", tf_center_justify),

        (position_set_x, pos1, 500),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 100),
        (assign, ":pos_y", 600),
        (try_for_range, ":cur_charge", custom_banner_charges_begin, custom_banner_charges_end),
          (create_image_button_overlay, reg1, ":cur_charge", ":cur_charge"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 100),
          (try_begin),
            (gt, ":pos_x", 900),
            (assign, ":pos_x", 100),
            (val_sub, ":pos_y", 100),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 80),
          (position_set_y, pos1, 80),
          (overlay_set_size, reg1, pos1),
          (store_sub, ":slot_index", ":cur_charge", custom_banner_charges_begin),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_charges_end),
        (val_sub, ":end_cond", custom_banner_charges_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", "$g_presentation_output_slot", ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
]),
("banner_background_selection", 0, mesh_load_window, [
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_background", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (assign, ":pos_x", 75),
        (assign, ":pos_y", 450),
        (try_for_range, ":cur_banner", custom_banner_backgrounds_begin, custom_banner_backgrounds_end),
          (store_sub, ":slot_index", ":cur_banner", custom_banner_backgrounds_begin),
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_background_selection", ":slot_index"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 125),
          (try_begin),
            (gt, ":pos_x", 900),
            (assign, ":pos_x", 75),
            (val_sub, ":pos_y", 125),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_backgrounds_end),
        (val_sub, ":end_cond", custom_banner_backgrounds_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_bg_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
]),
("banner_flag_type_selection", 0, mesh_load_window,[
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_flag_type", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

        (assign, ":pos_x", 435),
        (assign, ":pos_y", 450),
        (try_for_range, ":cur_flag", custom_banner_flag_types_begin, custom_banner_flag_types_end),
          (store_sub, ":slot_index", ":cur_flag", custom_banner_flag_types_begin),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_flag_type, ":slot_index"),
          (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_default", "trp_player"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 130),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_flag_types_end),
        (val_sub, ":end_cond", custom_banner_flag_types_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_flag_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
]),
("banner_flag_map_type_selection", 0, mesh_load_window,[
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_map_flag_type", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (troop_get_slot, ":bg_type", "trp_player", slot_troop_custom_banner_bg_type),
        (val_add, ":bg_type", custom_banner_backgrounds_begin),
        (assign, ":pos_x", 250),
        (assign, ":pos_y", 150),
        (try_for_range, ":cur_flag", custom_banner_flag_map_types_begin, custom_banner_flag_map_types_end),
          (store_sub, ":slot_index", ":cur_flag", custom_banner_flag_map_types_begin),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_map_flag_type, ":slot_index"),
          (try_begin),
            (eq, ":cur_flag", "mesh_custom_map_banner_01"),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_square", "trp_player"),
          (else_try),
            (eq, ":cur_flag", "mesh_custom_map_banner_02"),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_short", "trp_player"),
          (else_try),
            (create_image_button_overlay_with_tableau_material, reg1, ":cur_flag", "tableau_custom_banner_tall", "trp_player"),
          (try_end),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 200),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 100),
          (position_set_y, pos1, 100),
          (overlay_set_size, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_index", reg1),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", custom_banner_flag_map_types_end),
        (val_sub, ":end_cond", custom_banner_flag_map_types_begin),
        (try_for_range, ":trp_slot_index", 0, ":end_cond"),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (troop_set_slot, "trp_player", slot_troop_custom_banner_map_flag_type, ":trp_slot_index"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
]),
("color_selection", 0, mesh_load_window,[
     (ti_on_presentation_load,
      [
        (set_fixed_point_multiplier, 1000),
        (create_text_overlay, reg1, "str_choose_color", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),

        (assign, ":pos_x", 125),
        (assign, ":pos_y", 450),
        (try_for_range, ":i_color", 0, 42),
          (call_script, "script_get_custom_banner_color_from_index", ":i_color"),
          (assign, ":cur_color", reg0),
          (create_image_button_overlay_with_tableau_material, reg1, "mesh_color_picker", "tableau_color_picker", ":cur_color"),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (val_add, ":pos_x", 50),
          (try_begin),
            (store_mod, ":mod_i_color", ":i_color", 7),
            (eq, ":mod_i_color", 6),
            (assign, ":pos_x", 125),
            (val_sub, ":pos_y", 50),
          (try_end),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 500),
          (position_set_y, pos1, 500),
          (overlay_set_size, reg1, pos1),
          (store_mul, ":trp_slot_index", ":i_color", 2),
          (store_add, ":trp_slot_color", ":trp_slot_index", 1),
          (troop_set_slot, "trp_temp_array_a", ":trp_slot_index", reg1),
          (troop_set_slot, "trp_temp_array_a", ":trp_slot_color", ":cur_color"),
        (try_end),
        (presentation_set_duration, 999999),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (assign, ":end_cond", 64),
        (try_for_range, ":i_color", 0, ":end_cond"),
          (store_mul, ":trp_slot_index", ":i_color", 2),
          (troop_slot_eq, "trp_temp_array_a", ":trp_slot_index", ":object"),
          (store_add, ":trp_slot_color", ":trp_slot_index", 1),
          (troop_get_slot, ":output_color", "trp_temp_array_a", ":trp_slot_color"),
          (troop_set_slot, "trp_player", "$g_presentation_output_slot", ":output_color"),
          (assign, ":end_cond", 0),
        (try_end),
        (try_begin),
          (gt, "$g_presentation_next_presentation", 0),
          (start_presentation, "$g_presentation_next_presentation"),
        (else_try),
          (presentation_set_duration, 0),
        (try_end),
        ]),
]),

("battle",0,0,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (assign, "$g_formation_infantry_selected", 0),
        (assign, "$g_formation_archers_selected", 0),
        (assign, "$g_formation_cavalry_selected", 0),
        (assign, "$g_presentation_battle_active", 1),
    ] + (is_a_wb_cutscene==1 and [
        (close_order_menu), #InVain
    ] or []) + [


        (str_clear, s7),

        (try_for_agents, ":agent_no"),
          (agent_set_slot, ":agent_no", slot_agent_map_overlay_id, 0),
        (try_end),

        (position_set_x, pos1, 0),
        (create_image_button_overlay, "$g_presentation_obj_1", "mesh_white_plane", "mesh_white_plane"),
        (position_set_y, pos1, 653),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (create_image_button_overlay, "$g_presentation_obj_2", "mesh_white_plane", "mesh_white_plane"),
        (position_set_y, pos1, 613),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (create_image_button_overlay, "$g_presentation_obj_3", "mesh_white_plane", "mesh_white_plane"),
        (position_set_y, pos1, 573),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (position_set_x, pos1, 32500),
        (position_set_y, pos1, 2000),
        (overlay_set_size, "$g_presentation_obj_1", pos1),
        (overlay_set_size, "$g_presentation_obj_2", pos1),
        (overlay_set_size, "$g_presentation_obj_3", pos1),
        (overlay_set_alpha, "$g_presentation_obj_1", 0),
        (overlay_set_alpha, "$g_presentation_obj_2", 0),
        (overlay_set_alpha, "$g_presentation_obj_3", 0),
        (overlay_set_color, "$g_presentation_obj_1", 0xFFFF00),
        (overlay_set_color, "$g_presentation_obj_2", 0xFFFF00),
        (overlay_set_color, "$g_presentation_obj_3", 0xFFFF00),
        
        (position_set_x, pos1, 20),
        (create_check_box_overlay, "$g_presentation_obj_4", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos1, 663),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        (create_check_box_overlay, "$g_presentation_obj_5", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos1, 623),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (create_check_box_overlay, "$g_presentation_obj_6", "mesh_checkbox_off", "mesh_checkbox_on"),
        (position_set_y, pos1, 583),
        (overlay_set_position, "$g_presentation_obj_6", pos1),

        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent"),
        
        (position_set_x, pos1, 50),
        (create_text_overlay, "$g_presentation_obj_7", s7, 0),
        (position_set_y, pos1, 660),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
        (create_text_overlay, "$g_presentation_obj_8", s7, 0),
        (position_set_y, pos1, 620),
        (overlay_set_position, "$g_presentation_obj_8", pos1),
        (create_text_overlay, "$g_presentation_obj_9", s7, 0),
        (position_set_y, pos1, 580),
        (overlay_set_position, "$g_presentation_obj_9", pos1),

        (position_set_y, pos1, 700),
        (create_text_overlay, reg1, "@Action", tf_center_justify),
        (position_set_x, pos1, 250),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Mount", tf_center_justify),
        (position_set_x, pos1, 400),
        (overlay_set_position, reg1, pos1),
        (create_text_overlay, reg1, "@Attack Type", tf_center_justify),
        (position_set_x, pos1, 550),
        (overlay_set_position, reg1, pos1),

        (create_text_overlay, "$g_presentation_infantry_movement", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_infantry_riding", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_infantry_weapon_usage", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_archers_movement", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_archers_riding", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_archers_weapon_usage", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_cavalry_movement", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_cavalry_riding", s7, tf_center_justify),
        (create_text_overlay, "$g_presentation_cavalry_weapon_usage", s7, tf_center_justify),

        (call_script, "script_update_order_panel", ":player_team"),

        (create_button_overlay, "$g_presentation_obj_10", "@Hold This Position", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_11", "@Follow Me", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_12", "@Charge", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_13", "@Advance", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_14", "@Fall Back", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_15", "@Stand Closer", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_16", "@Spread Out", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_17", "@Stand Ground", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_18", "@Mount", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_19", "@Dismount", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_20", "@Use Any Weapon", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_21", "@Use Blunt Weapons", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_28", "@Hold Your Fire", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_29", "@Fire At Will", tf_center_justify),

        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, "$g_presentation_obj_10", pos1),
        (overlay_set_size, "$g_presentation_obj_11", pos1),
        (overlay_set_size, "$g_presentation_obj_12", pos1),
        (overlay_set_size, "$g_presentation_obj_13", pos1),
        (overlay_set_size, "$g_presentation_obj_14", pos1),
        (overlay_set_size, "$g_presentation_obj_15", pos1),
        (overlay_set_size, "$g_presentation_obj_16", pos1),
        (overlay_set_size, "$g_presentation_obj_17", pos1),
        (overlay_set_size, "$g_presentation_obj_18", pos1),
        (overlay_set_size, "$g_presentation_obj_19", pos1),
        (overlay_set_size, "$g_presentation_obj_20", pos1),
        (overlay_set_size, "$g_presentation_obj_21", pos1),
        (overlay_set_size, "$g_presentation_obj_28", pos1),
        (overlay_set_size, "$g_presentation_obj_29", pos1),
        
        (position_set_x, pos1, 250),
        (position_set_y, pos1, 540),
        (overlay_set_position, "$g_presentation_obj_10", pos1),
        (position_set_y, pos1, 520),
        (overlay_set_position, "$g_presentation_obj_11", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_12", pos1),
        (position_set_y, pos1, 480),
        (overlay_set_position, "$g_presentation_obj_13", pos1),
        (position_set_y, pos1, 460),
        (overlay_set_position, "$g_presentation_obj_14", pos1),
        (position_set_y, pos1, 440),
        (overlay_set_position, "$g_presentation_obj_15", pos1),
        (position_set_y, pos1, 420),
        (overlay_set_position, "$g_presentation_obj_16", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_17", pos1),

        (position_set_x, pos1, 400),
        (position_set_y, pos1, 540),
        (overlay_set_position, "$g_presentation_obj_18", pos1),
        (position_set_y, pos1, 520),
        (overlay_set_position, "$g_presentation_obj_19", pos1),
        
        (position_set_x, pos1, 550),
        (position_set_y, pos1, 540),
        (overlay_set_position, "$g_presentation_obj_20", pos1),
        (position_set_y, pos1, 520),
        (overlay_set_position, "$g_presentation_obj_21", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_28", pos1),
        (position_set_y, pos1, 480),
        (overlay_set_position, "$g_presentation_obj_29", pos1),

        (create_text_overlay, "$g_presentation_obj_22", "@Us", 0),
        (create_text_overlay, "$g_presentation_obj_23", "@Allies", 0),
        (create_text_overlay, "$g_presentation_obj_24", "@Enemies", 0),
        (create_text_overlay, "$g_presentation_obj_25", "@Ready", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_26", "@Wounded", tf_center_justify),
        (create_text_overlay, "$g_presentation_obj_27", "@Dead", tf_center_justify),

        (create_text_overlay, "$g_battle_us_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_us_dead", s7, tf_center_justify),

        (create_text_overlay, "$g_battle_enemies_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_wounded", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_enemies_dead", s7, tf_center_justify),

        (create_text_overlay, "$g_battle_allies_ready", s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_wounded",s7, tf_center_justify),
        (create_text_overlay, "$g_battle_allies_dead", s7, tf_center_justify),

	# CC: Code modified for routing report.
        (str_clear, s7),
	(try_begin),
		(eq, "$tld_option_morale", 1),
        	(create_text_overlay, "$g_presentation_obj_30", "@Routed", tf_center_justify),
        	(create_text_overlay, "$g_presentation_obj_31", s7, tf_center_justify),
        	(create_text_overlay, "$g_presentation_obj_32", s7, tf_center_justify),
        	(create_text_overlay, "$g_presentation_obj_33", s7, tf_center_justify),
	(try_end),
	# CC: Modified end.

        (assign, ":stat_position_x", 100),
        (assign, ":stat_position_y", 100),

        (val_add, ":stat_position_x", 150),
        (val_add, ":stat_position_y", 120),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_25", pos1),
        (val_add, ":stat_position_x", 150),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_26", pos1),
        (val_add, ":stat_position_x", 150),
        (position_set_x, pos1, ":stat_position_x"),
        (overlay_set_position, "$g_presentation_obj_27", pos1),

	# CC: Code modified for routing report.
	(try_begin),
		(eq, "$tld_option_morale", 1),
        	(val_add, ":stat_position_x", 150),
        	(position_set_x, pos1, ":stat_position_x"),
       		(overlay_set_position, "$g_presentation_obj_30", pos1),
        	(val_add, ":stat_position_x", -150),
	(try_end),
	# CC: Modified end.

	(val_add, ":stat_position_x", -450),
        (val_add, ":stat_position_y", -40),
        (position_set_x, pos1, ":stat_position_x"),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_22", pos1),
        (val_add, ":stat_position_y", -40),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_23", pos1),
        (val_add, ":stat_position_y", -40),
        (position_set_y, pos1, ":stat_position_y"),
        (overlay_set_position, "$g_presentation_obj_24", pos1),

        (get_scene_boundaries, pos2, pos3),
        (position_transform_position_to_local, pos4, pos2, pos3),
        (set_fixed_point_multiplier, 1000),
        (position_get_x, ":map_width", pos4),
        (position_get_y, ":map_height", pos4),
        (set_fixed_point_multiplier, 1000),
        (store_div, ":map_ratio", ":map_height", 100),
        (store_div, ":map_ratio", ":map_width", ":map_ratio"),
        (try_begin),
          (gt, ":map_ratio", 100),
          (assign, "$g_battle_map_width", 300),
          (store_div, "$g_battle_map_scale", ":map_width", "$g_battle_map_width"),
          (store_div, "$g_battle_map_height", ":map_height", "$g_battle_map_scale"),
        (else_try),
          (assign, "$g_battle_map_height", 300),
          (store_div, "$g_battle_map_scale", ":map_height", "$g_battle_map_height"),
          (store_div, "$g_battle_map_width", ":map_width", "$g_battle_map_scale"),
        (try_end),

## MadVader white dot begin        
        (scene_prop_get_num_instances, ":inv_found", "spr_inventory"),
        (try_begin),
          (gt, ":inv_found", 0),
          #white dot for player inventory
          (create_mesh_overlay, reg1, "mesh_white_dot"),
          (position_set_x, pos1, 200),
          (position_set_y, pos1, 200),
          (overlay_set_size, reg1, pos1),
          (overlay_set_alpha, reg1, 0xFF),
          (overlay_set_color, reg1, 0xFFFFFF),
          (assign, ":inv_overlay", reg1),
          (get_scene_boundaries, pos2, pos3),
          (scene_prop_get_instance, ":inv_object", "spr_inventory", 0),
          (prop_instance_get_position,pos1,":inv_object"),
          (call_script, "script_convert_3d_pos_to_map_pos"), #uses g_battle_map_scale!
          (overlay_set_position, ":inv_overlay", pos0),
        (try_end),
## MadVader white dot end        
        
        (create_image_button_overlay, "$g_battle_map_plane", "mesh_white_plane", "mesh_white_plane"),
        (overlay_set_color, "$g_battle_map_plane", 0),
        (store_add, ":map_bordered_width", "$g_battle_map_width", 20),
        (store_add, ":map_bordered_height", "$g_battle_map_height", 20),
        (store_mul, ":map_scale_x", ":map_bordered_width", 50),
        (store_mul, ":map_scale_y", ":map_bordered_height", 50),
        (position_set_x, pos1, ":map_scale_x"),
        (position_set_y, pos1, ":map_scale_y"),
        (overlay_set_size, "$g_battle_map_plane", pos1),
        (store_sub, ":map_pos_x", 990, ":map_bordered_width"),
        (store_sub, ":map_pos_y", 740, ":map_bordered_height"),
        (position_set_x, pos1, ":map_pos_x"),
        (position_set_y, pos1, ":map_pos_y"),
        (overlay_set_position, "$g_battle_map_plane", pos1),
        (overlay_set_alpha, "$g_battle_map_plane", 0x44),

        (create_mesh_overlay, "$g_battle_map_infantry_order_flag", "mesh_flag_infantry"),
        (create_mesh_overlay, "$g_battle_map_archers_order_flag", "mesh_flag_archers"),
        (create_mesh_overlay, "$g_battle_map_cavalry_order_flag", "mesh_flag_cavalry"),
        (overlay_set_alpha, "$g_battle_map_infantry_order_flag", 0),
        (overlay_set_alpha, "$g_battle_map_archers_order_flag", 0),
        (overlay_set_alpha, "$g_battle_map_cavalry_order_flag", 0),

        (call_script, "script_update_order_panel_checked_classes"),
        (call_script, "script_update_order_panel_statistics_and_map"),

        (presentation_set_duration, 999999),
        ]),
      
      
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (get_player_agent_no, ":player_agent"),
        (agent_get_team, ":player_team", ":player_agent"),

        (assign, ":update_listeners", 0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_4"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_infantry_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_archers_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_6"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_cavalry_selected", ":value"),
          (try_begin),
            (eq, ":value", 1),
            (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0x44),
          (else_try),
            (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_1"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_infantry_selected", 1),
          (assign, "$g_formation_archers_selected", 0),
          (assign, "$g_formation_cavalry_selected", 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0x44),
          (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0),
          (overlay_set_val, "$g_presentation_obj_4", 1),
          (overlay_set_val, "$g_presentation_obj_5", 0),
          (overlay_set_val, "$g_presentation_obj_6", 0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_infantry_selected", 0),
          (assign, "$g_formation_archers_selected", 1),
          (assign, "$g_formation_cavalry_selected", 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0x44),
          (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0),
          (overlay_set_val, "$g_presentation_obj_4", 0),
          (overlay_set_val, "$g_presentation_obj_5", 1),
          (overlay_set_val, "$g_presentation_obj_6", 0),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (assign, ":update_listeners", 1),
          (assign, "$g_formation_infantry_selected", 0),
          (assign, "$g_formation_archers_selected", 0),
          (assign, "$g_formation_cavalry_selected", 1),
          (overlay_animate_to_alpha, "$g_presentation_obj_1", 250, 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_2", 250, 0),
          (overlay_animate_to_alpha, "$g_presentation_obj_3", 250, 0x44),
          (overlay_set_val, "$g_presentation_obj_4", 0),
          (overlay_set_val, "$g_presentation_obj_5", 0),
          (overlay_set_val, "$g_presentation_obj_6", 1),
        (else_try),
          (eq, ":object", "$g_presentation_obj_10"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_hold),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_11"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_follow),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_12"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_charge),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_13"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_advance),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_14"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fall_back),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_15"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_closer),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_16"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_spread_out),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_17"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_stand_ground),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_18"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_mount),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_19"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_dismount),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_20"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_any_weapon),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_21"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_use_blunt_weapons),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_28"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_hold_fire),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_29"),
          (call_script, "script_team_give_order_from_order_panel", ":player_agent", mordr_fire_at_will),
          (call_script, "script_update_order_panel", ":player_team"),
        (else_try),
          (eq, ":object", "$g_battle_map_plane"),
          (get_scene_boundaries, pos2, pos3),
          (mouse_get_position, pos1),
          (set_fixed_point_multiplier, 1000),
          (position_get_x, ":mouse_x", pos1),
          (position_get_y, ":mouse_y", pos1),
          (store_sub, ":map_x", 980, "$g_battle_map_width"),
          (store_sub, ":map_y", 730, "$g_battle_map_height"),
          (val_sub, ":mouse_x", ":map_x"),
          (val_sub, ":mouse_y", ":map_y"),
          (val_clamp, ":mouse_x", 0, "$g_battle_map_width"),
          (val_clamp, ":mouse_y", 0, "$g_battle_map_height"),
          (val_mul, ":mouse_x", "$g_battle_map_scale"),
          (val_mul, ":mouse_y", "$g_battle_map_scale"),
          (set_fixed_point_multiplier, 1000),
          (position_set_x, pos1, ":mouse_x"),
          (position_set_y, pos1, ":mouse_y"),
          (position_transform_position_to_parent, pos3, pos2, pos1),
          (try_begin),
            (eq, "$g_formation_infantry_selected", 1),
            (team_give_order, ":player_team", grc_infantry, mordr_hold),
            (team_set_order_position, ":player_team", grc_infantry, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_archers_selected", 1),
            (team_give_order, ":player_team", grc_archers, mordr_hold),
            (team_set_order_position, ":player_team", grc_archers, pos3),
          (try_end),
          (try_begin),
            (eq, "$g_formation_cavalry_selected", 1),
            (team_give_order, ":player_team", grc_cavalry, mordr_hold),
            (team_set_order_position, ":player_team", grc_cavalry, pos3),
          (try_end),
          
# formations by motomataru #Edited by Kham
    (try_begin),
      (eq, "$tld_option_formations", 1),
      (assign, ":fixed_point_multiplier", 1),
      (convert_to_fixed_point, ":fixed_point_multiplier"),
      (set_fixed_point_multiplier, 100),
      (call_script, "script_team_get_average_position_of_enemies_augmented", pos60, "$fplayer_team_no", grc_everyone),
      (call_script, "script_point_y_toward_position", pos3, pos60),
      (try_begin),
      (eq, "$g_formation_infantry_selected", 1),
      (neq, "$infantry_formation_type", formation_none),
      (assign, ":troop_count", 0),
      (try_for_agents, reg0),
        (call_script, "script_cf_valid_formation_member", "$fplayer_team_no", grc_infantry, "$fplayer_agent_no", reg0),
        (val_add, ":troop_count", 1),
      (try_end),
      (call_script, "script_get_centering_amount", "$infantry_formation_type", ":troop_count", "$infantry_space"),
      (copy_position, pos1, pos3),
      (position_move_x, pos1, reg0),
      (call_script, "script_set_formation_position", "$fplayer_team_no", grc_infantry, pos1),
      (call_script, "script_form_infantry", "$fplayer_team_no", "$fplayer_agent_no", "$infantry_space", "$infantry_formation_type"),
      (assign, "$infantry_formation_move_order", mordr_hold),
      (try_end),
      (try_begin),
      (eq, "$g_formation_archers_selected", 1),
      (neq, "$archer_formation_type", formation_none),
      (assign, ":troop_count", 0),
      (try_for_agents, reg0),
        (call_script, "script_cf_valid_formation_member", "$fplayer_team_no", grc_archers, "$fplayer_agent_no", reg0),
        (val_add, ":troop_count", 1),
      (try_end),
      #(call_script, "script_get_centering_amount", "$archer_formation_type", ":troop_count", "$archer_space"), old form code
      (call_script, "script_get_centering_amount", formation_default, ":troop_count", "$archer_space"),
      (val_mul, reg0, -1),
      (copy_position, pos1, pos3),
      (position_move_x, pos1, reg0),
      (call_script, "script_set_formation_position", "$fplayer_team_no", grc_archers, pos1),
      #(call_script, "script_form_archers", "$fplayer_team_no", "$fplayer_agent_no", "$archer_space"), old form code
      (call_script, "script_form_archers", "$fplayer_team_no", "$fplayer_agent_no", "$archer_space", "$archer_formation_type"),
      (assign, "$archer_formation_move_order", mordr_hold),
      (try_end),
      (try_begin),
      (eq, "$g_formation_cavalry_selected", 1),
      (neq, "$cavalry_formation_type", formation_none),
      (copy_position, pos1, pos3),
      (call_script, "script_set_formation_position", "$fplayer_team_no", grc_cavalry, pos1),
      (call_script, "script_form_cavalry", "$fplayer_team_no", "$fplayer_agent_no", "$cavalry_space"),
      (assign, "$cavalry_formation_move_order", mordr_hold),
      (try_end),
      (set_fixed_point_multiplier, ":fixed_point_multiplier"),          
    (try_end),
#End of formations insert by motomataru            
          
          (call_script, "script_update_order_flags_on_map"),
          (call_script, "script_update_order_panel", ":player_team"),
        (try_end),
        (try_begin),
          (eq, ":update_listeners", 1),
          (try_begin),
            (eq, "$g_formation_infantry_selected", 1),
            (eq, "$g_formation_archers_selected", 1),
            (eq, "$g_formation_cavalry_selected", 1),
            (team_set_order_listener, ":player_team", grc_everyone),
          (else_try),
            (eq, "$g_formation_infantry_selected", 1),
            (team_set_order_listener, ":player_team", grc_infantry),
          (else_try),
            (eq, "$g_formation_archers_selected", 1),
            (team_set_order_listener, ":player_team", grc_archers),
          (else_try),
            (eq, "$g_formation_cavalry_selected", 1),
            (team_set_order_listener, ":player_team", grc_cavalry),
          (try_end),
        (try_end),
        ]),
      (ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":enter_leave"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_infantry_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_infantry_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_infantry_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_7", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_infantry_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_infantry_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_infantry_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_7", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_archers_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_archers_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_archers_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_8", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_archers_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_archers_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_archers_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_8", 250, 0),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (overlay_animate_to_color, "$g_presentation_cavalry_movement", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_cavalry_riding", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_cavalry_weapon_usage", 250, 0xFFFFFF),
            (overlay_animate_to_color, "$g_presentation_obj_9", 250, 0xFFFFFF),
          (else_try),
            (overlay_animate_to_color, "$g_presentation_cavalry_movement", 250, 0),
            (overlay_animate_to_color, "$g_presentation_cavalry_riding", 250, 0),
            (overlay_animate_to_color, "$g_presentation_cavalry_weapon_usage", 250, 0),
            (overlay_animate_to_color, "$g_presentation_obj_9", 250, 0),
          (try_end),
        (try_end),
        ]),
      
      (ti_on_presentation_run,
       [(store_trigger_param_1, ":cur_time"),
        (try_begin),
          (this_or_next|game_key_clicked, gk_infantry_hear),
          (this_or_next|game_key_clicked, gk_archers_hear),
          (this_or_next|game_key_clicked, gk_cavalry_hear),
          (this_or_next|game_key_clicked, gk_everyone_hear),
          (game_key_clicked, gk_reverse_order_group),
          (call_script, "script_update_order_panel_checked_classes"),
        (try_end),
        (try_begin),
          (this_or_next|game_key_clicked, gk_order_halt),
          (this_or_next|game_key_clicked, gk_order_follow),
          (this_or_next|game_key_clicked, gk_order_charge),
          (this_or_next|game_key_clicked, gk_order_dismount),
          (this_or_next|game_key_clicked, gk_order_advance),
          (this_or_next|game_key_clicked, gk_order_fall_back),
          (this_or_next|game_key_clicked, gk_order_stand_closer),
          (this_or_next|game_key_clicked, gk_order_spread_out),
          (this_or_next|game_key_clicked, gk_order_hold_fire_toggle),
          (game_key_clicked, gk_order_blunt_weapons_toggle),
          (get_player_agent_no, ":player_agent"),
          (agent_get_team, ":player_team", ":player_agent"),
          (call_script, "script_update_order_panel", ":player_team"),
        (try_end),
        (try_begin),
          (gt, ":cur_time", 200),
          (game_key_clicked, gk_view_orders),
          (assign, "$g_presentation_battle_active", 0),
          (try_for_agents, ":cur_agent"),
            (agent_set_slot, ":cur_agent", slot_agent_map_overlay_id, 0),
          (try_end),
          #swy-- hackfix to show sidelog messages again in wb-- i'm not going to spend more time in this jumblefuck, i'm scared.
          (set_show_messages, 1),
          (presentation_set_duration, 0),

        #InVain: Disabled
    # ] + (is_a_wb_cutscene==1 and [
          # (try_begin),
            # (gt, "$g_display_agent_labels", 0),
            # (eq, "$show_hide_labels", -1),
            # (assign, "$show_hide_labels", 1), #toggle on troop labels, if they were on before)
            # (start_presentation, "prsnt_display_agent_labels"),
          # (try_end),
    # ] or []) + [

        (try_end),
        ]),
]),

("sliders",0,0,[
      (ti_on_presentation_load,
       [(set_fixed_point_multiplier, 1000),
        (create_slider_overlay, "$g_presentation_obj_1", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_2", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_3", 0, 100),
        (create_slider_overlay, "$g_presentation_obj_4", 0, 100),
        (assign, reg1, 25),
        (str_store_string, s1, "str_reg1"),
        (create_text_overlay, "$g_presentation_obj_5", s1),
        (create_text_overlay, "$g_presentation_obj_6", s1),
        (create_text_overlay, "$g_presentation_obj_7", s1),
        (create_text_overlay, "$g_presentation_obj_8", s1),
        (assign, "$g_presentation_obj_1_val", 25),
        (overlay_set_val, "$g_presentation_obj_1", 25),
        (assign, "$g_presentation_obj_2_val", 25),
        (overlay_set_val, "$g_presentation_obj_2", 25),
        (assign, "$g_presentation_obj_3_val", 25),
        (overlay_set_val, "$g_presentation_obj_3", 25),
        (assign, "$g_presentation_obj_4_val", 25),
        (overlay_set_val, "$g_presentation_obj_4", 25),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_4", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 200),
        (overlay_set_position, "$g_presentation_obj_5", pos1),
        (position_set_y, pos1, 300),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_y, pos1, 400),
        (overlay_set_position, "$g_presentation_obj_7", pos1),
        (position_set_y, pos1, 500),
        (overlay_set_position, "$g_presentation_obj_8", pos1),
        (position_set_x, pos1, 500),
        (overlay_set_size, "$g_presentation_obj_3", pos1),
        ]),
      (ti_on_presentation_run,
       []),
      (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (assign, ":val_changed", 0),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (try_begin),
            (neq, "$g_presentation_obj_1_val", ":value"),
            (assign, "$g_presentation_obj_1_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (try_begin),
            (neq, "$g_presentation_obj_2_val", ":value"),
            (assign, "$g_presentation_obj_2_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (try_begin),
            (neq, "$g_presentation_obj_3_val", ":value"),
            (assign, "$g_presentation_obj_3_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (else_try),
          (eq, ":object", "$g_presentation_obj_4"),
          (try_begin),
            (neq, "$g_presentation_obj_4_val", ":value"),
            (assign, "$g_presentation_obj_4_val", ":value"),
            (assign, ":val_changed", 1),
          (try_end),
        (try_end),
        (try_begin),
          (eq, ":val_changed", 1),
          (assign, ":sum_values", 0),
          (val_add, ":sum_values", "$g_presentation_obj_1_val"),
          (val_add, ":sum_values", "$g_presentation_obj_2_val"),
          (val_add, ":sum_values", "$g_presentation_obj_3_val"),
          (val_add, ":sum_values", "$g_presentation_obj_4_val"),
          (store_sub, ":difference", 100, ":sum_values"),
          (assign, ":obj_1_new_val", "$g_presentation_obj_1_val"),
          (assign, ":obj_2_new_val", "$g_presentation_obj_2_val"),
          (assign, ":obj_3_new_val", "$g_presentation_obj_3_val"),
          (assign, ":obj_4_new_val", "$g_presentation_obj_4_val"),
          (assign, ":adder", 1),
          (assign, ":between_1", 0),
          (assign, ":between_2", 100),
          (try_begin),
            (lt, ":difference", 0),
            (val_mul, ":difference", -1),
            (assign, ":adder", -1),
            (assign, ":between_1", 1),
            (assign, ":between_2", 101),
          (try_end),
          (store_sub, ":sum_non_changed_values", ":sum_values", ":value"),
          (val_add, ":sum_non_changed_values", 30),
          (try_for_range, ":unused", 0, ":difference"),
            (store_random_in_range, ":random_no", 0, ":sum_non_changed_values"),
            (try_begin),
              (neq, ":object", "$g_presentation_obj_1"),
              (val_sub, ":random_no", "$g_presentation_obj_1_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_1_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_1_new_val", ":adder"),
            (else_try),
              (neq, ":object", "$g_presentation_obj_2"),
              (val_sub, ":random_no", "$g_presentation_obj_2_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_2_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_2_new_val", ":adder"),
            (else_try),
              (neq, ":object", "$g_presentation_obj_3"),
              (val_sub, ":random_no", "$g_presentation_obj_3_val"),
              (val_sub, ":random_no", 10),
              (lt, ":random_no", 0),
              (is_between, ":obj_3_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_3_new_val", ":adder"),
            (else_try),
              (is_between, ":obj_4_new_val", ":between_1", ":between_2"),
              (val_add, ":obj_4_new_val", ":adder"),
            (else_try),
              (val_add, ":difference", 1),
            (try_end),
          (try_end),
          (assign, "$g_presentation_obj_1_val", ":obj_1_new_val"),
          (assign, "$g_presentation_obj_2_val", ":obj_2_new_val"),
          (assign, "$g_presentation_obj_3_val", ":obj_3_new_val"),
          (assign, "$g_presentation_obj_4_val", ":obj_4_new_val"),
        (try_end),
        (overlay_set_val, "$g_presentation_obj_1", "$g_presentation_obj_1_val"),
        (overlay_set_val, "$g_presentation_obj_2", "$g_presentation_obj_2_val"),
        (overlay_set_val, "$g_presentation_obj_3", "$g_presentation_obj_3_val"),
        (overlay_set_val, "$g_presentation_obj_4", "$g_presentation_obj_4_val"),
        (assign, reg1, "$g_presentation_obj_1_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_5", s1),
        (assign, reg1, "$g_presentation_obj_2_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_6", s1),
        (assign, reg1, "$g_presentation_obj_3_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_7", s1),
        (assign, reg1, "$g_presentation_obj_4_val"),
        (str_store_string, s1, "str_reg1"),
        (overlay_set_text, "$g_presentation_obj_8", s1),
        ]),
]),

("arena_training", prsntf_read_only, 0, [
      (ti_on_presentation_load,
       [(presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (get_player_agent_no, ":player_agent"),
        (agent_get_kill_count, reg1, ":player_agent", 1),
        (str_store_string, s1, "@Number of men knocked down: {reg1}"),
        (create_text_overlay, "$g_presentation_obj_1", s1),
        (overlay_set_color, "$g_presentation_obj_1", 0xFFFFFF),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (assign, reg1, 0),
        (str_store_string, s1, "@Number of men left: {reg1}"),
        (create_text_overlay, "$g_presentation_obj_2", s1),
        (overlay_set_color, "$g_presentation_obj_2", 0xFFFFFF),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 670),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        ]),
      (ti_on_presentation_run,
       [(get_player_agent_no, ":player_agent"),
        (agent_get_kill_count, reg1, ":player_agent", 1),
        (str_store_string, s1, "@Opponents Beaten: {reg1}"),
        (overlay_set_text, "$g_presentation_obj_1", s1),
        (assign, ":num_left", "$g_arena_training_max_opponents"),
        (try_for_agents, ":agent_no"),
          (agent_is_human, ":agent_no"),
          (neg|agent_is_alive, ":agent_no"),
          (neq, ":agent_no", ":player_agent"),
          (val_sub, ":num_left", 1),
        (try_end),
        (assign, reg1, ":num_left"),
        (str_store_string, s1, "@Opponents Remaining: {reg1}"),
        (overlay_set_text, "$g_presentation_obj_2", s1),
        ]),
]),
("gauntlet", prsntf_read_only, 0, [
      (ti_on_presentation_load,
       [(presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (str_store_string, s1, "@Gauntlet wave: 1"),
        (create_text_overlay, "$g_presentation_obj_1", s1),
        (overlay_set_color, "$g_presentation_obj_1", 0xFFFFFF),
        (position_set_x, pos1, 10),
        (position_set_y, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        ]),
      (ti_on_presentation_run,
       [
        (assign, reg1, "$g_tld_training_wave"),
        (str_store_string, s1, "@Gauntlet wave: {reg1}"),
        (overlay_set_text, "$g_presentation_obj_1", s1),
        ]),
]),

("retirement", 0, mesh_load_window,[
     (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (create_button_overlay, "$g_presentation_obj_1", "@Remain in retirement.", tf_center_justify),
        (create_button_overlay, "$g_presentation_obj_2", "@Go back to the adventuring.", tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_y, pos1, 40),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (assign, ":total_effect", 0),
        #wealth
        (store_troop_gold, ":wealth", "trp_player"),
        (store_div, ":wealth_effect", ":wealth", 200),
        (val_add, ":total_effect", ":wealth_effect"),
        #ruled centers and friendly/enemy centers
        (assign, ":num_towns", 0),
        (assign, ":num_castles", 0),
        (assign, ":num_villages", 0),
        (assign, ":num_friendly_towns", 0),
        (assign, ":num_friendly_villages", 0),
        (assign, ":num_enemy_towns", 0),
        (assign, ":num_enemy_villages", 0),
        (try_for_range, ":center_no", centers_begin, centers_end),
          (party_get_slot, ":type", ":center_no", slot_party_type),
          (party_slot_eq, ":center_no", slot_center_destroyed, 0), #TLD - not destroyed
          (try_begin),
            (party_slot_eq, ":center_no", slot_town_lord, "trp_player"),
            (try_begin),
              (eq, ":type", spt_town),
              (val_add, ":num_towns", 1),
            (else_try),
              (eq, ":type", spt_castle),
              (val_add, ":num_castles", 1),
            (else_try),
              (val_add, ":num_villages", 1),
            (try_end),
          (try_end),
          (party_get_slot, ":relation", ":center_no", slot_center_player_relation),
          (try_begin),
            (ge, ":relation", 40),
            (try_begin),
              (eq, ":type", spt_town),
              (val_add, ":num_friendly_towns", 1),
            (else_try),
              (eq, ":type", spt_village),
              (val_add, ":num_friendly_villages", 1),
            (try_end),
          (else_try),
            (le, ":relation", -40),
            (try_begin),
              (eq, ":type", spt_town),
              (val_add, ":num_enemy_towns", 1),
            (else_try),
              (eq, ":type", spt_village),
              (val_add, ":num_enemy_villages", 1),
            (try_end),
          (try_end),
        (try_end),
        (store_mul, ":num_towns_effect", ":num_towns", 100),
        (store_mul, ":num_castles_effect", ":num_castles", 50),
        (store_mul, ":num_villages_effect", ":num_villages", 20),
        (store_add, ":num_centers", ":num_towns", ":num_castles"),
        (val_add, ":num_centers", ":num_villages"),
        (store_add, ":ruled_centers_effect", ":num_towns_effect", ":num_castles_effect"),
        (val_add, ":ruled_centers_effect", ":num_villages_effect"),
        (val_add, ":total_effect", ":ruled_centers_effect"),
        (store_mul, ":num_friendly_towns_effect", ":num_friendly_towns", 20),
        (store_mul, ":num_friendly_villages_effect", ":num_friendly_villages", 4),
        (store_add, ":num_friendly_centers", ":num_friendly_towns", ":num_friendly_villages"),
        (store_add, ":friendly_centers_effect", ":num_friendly_towns_effect", ":num_friendly_villages_effect"),
        (val_add, ":total_effect", ":friendly_centers_effect"),
        (store_mul, ":num_enemy_towns_effect", ":num_enemy_towns", -40),
        (store_mul, ":num_enemy_villages_effect", ":num_enemy_villages", -8),
        (store_add, ":num_enemy_centers", ":num_enemy_towns", ":num_enemy_villages"),
        (store_add, ":enemy_centers_effect", ":num_enemy_towns_effect", ":num_enemy_villages_effect"),
        (val_add, ":total_effect", ":enemy_centers_effect"),
        #inventory
        (assign, ":total_item_value", 0),
        (troop_get_inventory_capacity, ":capacity", "trp_player"),
        (try_for_range, ":i_inv", 0, ":capacity"),
          (troop_get_inventory_slot, ":item", "trp_player", ":i_inv"),
          (ge, ":item", 0),
          (store_item_value, ":item_value", ":item"),
          (val_add, ":total_item_value", ":item_value"),
        (try_end),
        (store_div, ":total_item_value_effect", ":total_item_value", 200),
        (val_add, ":total_effect", ":total_item_value_effect"),
        #enemies and friends
        (assign, ":num_enemies", 0),
        (assign, ":num_friends", 0),
        (try_for_range, ":troop_no", heroes_begin, heroes_end),
          (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_kingdom_hero),
          (call_script, "script_troop_get_player_relation", ":troop_no"),
          (assign, ":relation", reg0),
          #(troop_get_slot, ":relation", ":troop_no", slot_troop_player_relation),
          (try_begin),
            (ge, ":relation", 40),
            (val_add, ":num_friends", 1),
          (else_try),
            (le, ":relation", -40),
            (val_add, ":num_enemies", 1),
          (try_end),
        (try_end),
        (store_mul, ":num_friends_effect", ":num_friends", 10),
        (val_add, ":total_effect", ":num_friends_effect"),
        (store_mul, ":num_enemies_effect", ":num_enemies", -10),
        (val_add, ":total_effect", ":num_enemies_effect"),
        #current day
        (store_current_day, ":cur_day"),
        (store_div, ":cur_day_effect", ":cur_day", -1),
        (val_add, ":total_effect", ":cur_day_effect"),
        #g_total_victories
        (store_mul, ":total_victories_effect", "$g_total_victories", 2),
        (val_add, ":total_effect", ":total_victories_effect"),
        #g_total_defeats
        (store_mul, ":total_defeats_effect", "$g_total_defeats", -3),
        (val_add, ":total_effect", ":total_defeats_effect"),
        #g_total_quests_completed
        (store_mul, ":total_quests_completed_effect", "$g_total_quests_completed", 4),
        (val_add, ":total_effect", ":total_quests_completed_effect"),
        #xp
        (troop_get_xp, ":xp", "trp_player"),
        (store_div, ":xp_effect", ":xp", 5000),
        (val_add, ":total_effect", ":xp_effect"),
        #companions joined / departed
        (assign, ":num_companions_joined", 0),
        (assign, ":num_companions_departed", 0),
        (try_for_range, ":troop_no", companions_begin, companions_end),
          (try_begin),
            (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_player_companion),
            (val_add, ":num_companions_joined", 1),
          (else_try),
            (troop_slot_ge, ":troop_no", slot_troop_playerparty_history, 1),
            (val_add, ":num_companions_departed", 1),
          (try_end),
        (try_end),
        (try_for_range, ":troop_no", new_companions_begin, new_companions_end),
          (try_begin),
            (troop_slot_eq, ":troop_no", slot_troop_occupation, slto_player_companion),
            (val_add, ":num_companions_joined", 1),
          (else_try),
            (troop_slot_ge, ":troop_no", slot_troop_playerparty_history, 1),
            (val_add, ":num_companions_departed", 1),
          (try_end),
        (try_end),
        (store_div, ":num_companions_joined_effect", ":num_companions_joined", 2),
        (val_add, ":total_effect", ":num_companions_joined_effect"),
        (store_div, ":num_companions_departed_effect", ":num_companions_departed", -4),
        (val_add, ":total_effect", ":num_companions_departed_effect"),
        #difficulty
        (get_average_game_difficulty, ":difficulty"),
        (assign, ":difficulty_effect", ":total_effect"),
        (val_mul, ":total_effect", ":difficulty"),
        (val_div, ":total_effect", 75),
        (val_mul, ":total_effect", ":difficulty"),
        (val_div, ":total_effect", 75),
        (store_sub, ":difficulty_effect", ":total_effect", ":difficulty_effect"),

        (assign, reg5, ":cur_day"),
        (store_character_level, reg4, "trp_player"), 
        #(create_text_overlay, reg1, "@You have retired at level {reg4} after {reg5} days of adventuring.", tf_center_justify), #We keep the retirement code for savegame compat reasons (global variables), but get rid of the strings.
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 700),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 950),
        (position_set_y, pos1, 950),
        (overlay_set_size, reg1, pos1),
##        (overlay_set_color, reg1, 0),
        #(create_text_overlay, reg2, "@Effect on Score", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg2, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 670),
        (overlay_set_position, reg2, pos1),
        (assign, reg0, ":num_centers"),
        #(create_text_overlay, reg1, "@Settlements owned by you: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":ruled_centers_effect"),
        #(create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 650),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":num_friendly_centers"),
        #(create_text_overlay, reg1, "@Friendly Settlements: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 630),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":friendly_centers_effect"),
        #(create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 630),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":num_enemy_centers"),
        #(create_text_overlay, reg1, "@Hostile Settlements: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 610),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":enemy_centers_effect"),
        #(create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 610),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":num_friends"),
        #(create_text_overlay, reg1, "@Friendly Lords: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 590),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_friends_effect"),
        #(create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 590),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":num_enemies"),
        #(create_text_overlay, reg1, "@Enemy Lords: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 570),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_enemies_effect"),
        #(create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 570),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, "$g_total_victories"),
        #(create_text_overlay, reg1, "@Victories: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_victories_effect"),
        #(create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 550),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, "$g_total_defeats"),
        #(create_text_overlay, reg1, "@Defeats: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 530),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_defeats_effect"),
        #(create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 530),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, "$g_total_quests_completed"),
        #(create_text_overlay, reg1, "@Quests Completed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 510),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_quests_completed_effect"),
        #(create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 510),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":num_companions_joined"),
        #(create_text_overlay, reg1, "@Companions Found: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 490),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_companions_joined_effect"),
        #(create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 490),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":num_companions_departed"),
        #(create_text_overlay, reg1, "@Companions Lost/Departed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 470),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":num_companions_departed_effect"),
        #(create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 470),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":wealth"),
        #(create_text_overlay, reg1, "@Wealth: {reg0} denars", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 450),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":wealth_effect"),
        #(create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 450),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":total_item_value"),
        #(create_text_overlay, reg1, "@Inventory: {reg0} denars", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 430),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":total_item_value_effect"),
        #(create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 430),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        # (assign, reg0, ":renown"),
        # (create_text_overlay, reg1, "@Renown: {reg0}", 0),
        # (position_set_x, pos1, 750),
        # (position_set_y, pos1, 750),
        # (overlay_set_size, reg1, pos1),
        # (position_set_x, pos1, 600),
        # (position_set_y, pos1, 410),
        # (overlay_set_position, reg1, pos1),
        # (assign, reg0, ":renown_effect"),
        # (create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        # (position_set_x, pos1, 750),
        # (position_set_y, pos1, 750),
        # (overlay_set_size, reg1, pos1),
        # (position_set_x, pos1, 850),
        # (position_set_y, pos1, 410),
        # (overlay_set_position, reg1, pos1),
        # (try_begin),
          # (gt, reg0, 0),
          # (overlay_set_color, reg1, 0x00FF00),
        # (try_end),

        (assign, reg0, ":xp"),
        #(create_text_overlay, reg1, "@Experience: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 390),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":xp_effect"),
        #(create_text_overlay, reg1, "@{reg0?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 390),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (try_end),

        (assign, reg0, ":cur_day"),
        #(create_text_overlay, reg1, "@Days Passed: {reg0}", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 370),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":cur_day_effect"),
        #(create_text_overlay, reg1, "@{!}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 370),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":difficulty"),
        #(create_text_overlay, reg1, "@Difficulty: {reg0}%", 0),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),
        (assign, reg0, ":difficulty_effect"),
        (assign, reg3, reg0),
        (val_max, reg3, 0),
        #(create_text_overlay, reg1, "@{reg3?+:}{reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 750),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 850),
        (position_set_y, pos1, 350),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (gt, reg0, 0),
          (overlay_set_color, reg1, 0x00FF00),
        (else_try),
          (lt, reg0, 0),
          (overlay_set_color, reg1, 0xFF0000),
        (try_end),

        (assign, reg0, ":total_effect"),
        #(create_text_overlay, reg1, "@TOTAL SCORE: {reg0}", tf_center_justify),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 320),
        (overlay_set_position, reg1, pos1),

        (assign, ":total_villages", 0),
        (assign, ":total_castles", 0),
        (assign, ":total_towns", 0),
        (assign, ":total_village_rels", 0),
        (assign, ":total_castle_rels", 0),
        (assign, ":total_town_rels", 0),
        (try_for_range, ":cur_center_no", centers_begin, centers_end),
          (try_begin),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (party_slot_eq, ":cur_center_no", slot_center_destroyed, 0), #TLD - not destroyed
            (try_begin),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_town),
              (val_add, ":total_towns", 1),
            (else_try),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_castle),
              (val_add, ":total_castles", 1),
            (else_try),
              (val_add, ":total_villages", 1),
            (try_end),
          (else_try),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (try_begin),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_town),
              (val_add, ":total_town_rels", ":center_relation"),
            (else_try),
              (party_slot_eq, ":cur_center_no", slot_party_type, spt_castle),
              (val_add, ":total_castle_rels", ":center_relation"),
            (else_try),
              (val_add, ":total_village_rels", ":center_relation"),
            (try_end),
          (try_end),
        (try_end),
        (try_begin),
          (gt, ":total_towns", 0),
          (store_random_in_range, ":random_town", 0, ":total_towns"),
          (try_for_range, ":cur_center_no", centers_begin, centers_end),
            (party_slot_eq, ":cur_center_no", slot_town_lord, "trp_player"),
            (val_sub, ":random_town", 1),
            (lt, ":random_town", 0),
            (str_store_party_name, s9, ":cur_center_no"),
          (try_end),
        (else_try),
          (gt, ":total_town_rels", 0),
          (store_random_in_range, ":random_town_rel", 0, ":total_town_rels"),
          (try_for_range, ":cur_center_no", centers_begin, centers_end),
            (party_get_slot, ":center_relation", ":cur_center_no", slot_center_player_relation),
            (gt, ":center_relation", 0),
            (val_sub, ":random_town_rel", ":center_relation"),
            (lt, ":random_town_rel", 0),
            (str_store_party_name, s9, ":cur_center_no"),
          (try_end),
        (else_try),
          (store_random_in_range, ":random_town", centers_begin, centers_end),
          (str_store_party_name, s9, ":random_town"),
        (try_end),

		(store_random_in_range, ":random_castle", centers_begin, centers_end),
        (str_store_party_name, s8, ":random_castle"),

        (store_random_in_range, ":random_village", centers_begin, centers_end),
        (str_store_party_name, s7, ":random_village"),


        (try_begin),
          (lt, ":total_effect", 100),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 0),
          #(str_store_string, s0, "str_retirement_text_1"), #We keep the retirement code for savegame compat reasons (global variables), but get rid of the strings.
        (else_try),
          (lt, ":total_effect", 200),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 1),
          #(str_store_string, s0, "str_retirement_text_2"),
        (else_try),
          (lt, ":total_effect", 400),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 2),
          #(str_store_string, s0, "str_retirement_text_3"),
        (else_try),
          (lt, ":total_effect", 700),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 3),
          #(str_store_string, s0, "str_retirement_text_4"),
        (else_try),
          (lt, ":total_effect", 1200),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 4),
          #(str_store_string, s0, "str_retirement_text_5"),
        (else_try),
          (lt, ":total_effect", 1850),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 5),
          #(str_store_string, s0, "str_retirement_text_6"),
        (else_try),
          (lt, ":total_effect", 2500),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 6),
          #(str_store_string, s0, "str_retirement_text_7"),
        (else_try),
          (lt, ":total_effect", 3500),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 7),
          #(str_store_string, s0, "str_retirement_text_8"),
        (else_try),
          (lt, ":total_effect", 5000),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 8),
          #(str_store_string, s0, "str_retirement_text_9"),
        (else_try),
          (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_retirement_troop", 9),
          #(str_store_string, s0, "str_retirement_text_10"),
        (try_end),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg1, pos1),

        (create_text_overlay, reg1, s0, tf_double_space|tf_scrollable),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 120),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 360),
        (position_set_y, pos1, 190),
        (overlay_set_area_size, reg1, pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        ]),
     (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (jump_to_menu, "mnu_end_game"),
          (start_presentation, "prsnt_game_credits"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (presentation_set_duration, 0),
          (change_screen_return),
        (try_end),
        ]),
]),

("intro_titles", prsntf_read_only, 0, [
      (ti_on_presentation_load,
       [(presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        ] + (is_a_wb_cutscene==1 and [
        
        #swy-- transparent mask for the WB HP bar
        (set_shader_param_float, "@swy_ui_opacity", 0),
        
        ] or []) + [
        
        # cover up the HP bar
        (create_mesh_overlay, ":black_strip", "mesh_white_plane"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, ":black_strip", pos1),
        (position_set_x, pos1, 50000),
        (position_set_y, pos1, 2400),
        (overlay_set_size, ":black_strip", pos1),
        (overlay_set_alpha, ":black_strip", 0xFF),
        (overlay_set_color, ":black_strip", 0x000000),
        (get_player_agent_no, ":player_agent"),
        (agent_set_hit_points, ":player_agent", 0, 1), #restored automatically at the end of mission
        
        (str_store_string, s1, "@{!}______"),
        (create_text_overlay, "$g_presentation_obj_1", s1, tf_center_justify),
        (overlay_set_color, "$g_presentation_obj_1", 0xFFFFFF),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 700),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (position_set_x, pos1, 1500),
        (position_set_y, pos1, 1500),
        (overlay_set_size, "$g_presentation_obj_1", pos1),
        ]),
      (ti_on_presentation_run,
       [
        (str_store_string, s1, "@{!}______"),
        (try_begin),
          (this_or_next|eq, "$g_tld_intro_state", 1),
          (eq, "$g_tld_intro_state", 2),
          (str_store_string, s1, "@A peaceful village not far from Westfold..."),
        (else_try),
          (this_or_next|eq, "$g_tld_intro_state", 5),
          (eq, "$g_tld_intro_state", 6),
          (str_store_string, s1, "@The War is upon Rohan!"),
        (else_try),
          (eq, "$g_tld_intro_state", 12),
          (str_store_string, s1, "@Minas Tirith - The White City"),
        (else_try),
          (eq, "$g_tld_intro_state", 19),
          (str_store_string, s1, "@The White Tree stands dead since the line of the Kings had failed"),
        (else_try),
          (eq, "$g_tld_intro_state", 22),
          (str_store_string, s1, "@And the Shadow grows ever stronger in the East"),
        (else_try),
          (eq, "$g_tld_intro_state", 32),
          (str_store_string, s1, "@Minas Morgul - City of the Nazgul"),
        (else_try),
          (eq, "$g_tld_intro_state", 34),
          (str_store_string, s1, "@Sauron's armies march into War!"),
        (else_try),
          (eq, "$g_tld_intro_state", 102),
          (str_store_string, s1, "@Adventurers at audience with Steward Denethor..."),
        (else_try),
          (eq, "$g_tld_intro_state", 104),
          (str_store_string, s1, "@_'What business do you have here, supplicants?'"),
        (else_try),
          (eq, "$g_tld_intro_state", 105),
          (str_store_string, s1, "@_'Your Stewardship, we have come from distant lands to... jump!'"),
        (else_try),
          (eq, "$g_tld_intro_state", 107),
          (str_store_string, s1, "@_'Enough of this madness! Guards!!'"),
        (else_try),
          (eq, "$g_tld_intro_state", 110),
          (str_store_string, s1, "@_'I've had enough of these pranks... The next bunch would have to kneel!'"),
        (try_end),
        (overlay_set_text, "$g_presentation_obj_1", s1),
        ]),
]),

("conversation_titles", prsntf_read_only, 0, [
      (ti_on_presentation_load,
       [(presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        ] + (is_a_wb_cutscene==1 and [
        
        #swy-- transparent mask for the WB HP bar
        (set_shader_param_float, "@swy_ui_opacity", 0),
        
        ] or []) + [
        
        # cover up the HP bar
        (create_mesh_overlay, ":black_strip", "mesh_white_plane"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, ":black_strip", pos1),
        (position_set_x, pos1, 50000),
        (position_set_y, pos1,  2400),
        (overlay_set_size, ":black_strip", pos1),
        (overlay_set_alpha, ":black_strip", 0xFF),
        (overlay_set_color, ":black_strip", 0x000000),

        
        (get_player_agent_no, ":player_agent"),
        (agent_set_hit_points, ":player_agent", 0, 1), #restored automatically at the end of mission
        
        (str_store_string, s1, "str_empty_string"),
        (create_text_overlay, "$g_presentation_obj_1", s1, tf_center_justify), #subtitles
        (overlay_set_color, "$g_presentation_obj_1", 0xFFFFFF),
        
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 80),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        
        (create_text_overlay, "$g_presentation_obj_2", s1, tf_center_justify), #Press Space to continue...
        (overlay_set_color, "$g_presentation_obj_2", 0x808080),
        
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 20),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        (position_set_x, pos1, 700),
        (position_set_y, pos1, 700),
        (overlay_set_size, "$g_presentation_obj_2", pos1),
        ]),

]),

# CppCoder: MAJORLY WIP
# CppCoder: I suck at this kind of stuff, so if there is someone better, by all means go for it. :) 

("customize_defilement", 0, mesh_load_window,
[
	(ti_on_presentation_load, 
	[
		(presentation_set_duration, 999999),
		(set_fixed_point_multiplier, 1000),
		(assign, "$g_presentation_obj_1", -1), # Do this so if we have only one/no armors, the object is invalid.	
	
		(init_position, pos1),
		(create_mesh_overlay_with_tableau_material, "$g_presentation_obj_1", -1, "tableau_defile_troop", 0),
        	(position_set_x, pos1, 0),
        	(position_set_y, pos1, 0),
        	(overlay_set_position, "$g_presentation_obj_1", pos1),

		(init_position, pos1),
		(create_mesh_overlay, "$g_presentation_obj_2", "mesh_defiled_customize_overlay"),
        	(overlay_set_position, "$g_presentation_obj_2", pos1),
        	
		(create_button_overlay, "$g_presentation_obj_3", "@Chest", tf_center_justify),
        	(position_set_x, pos1, 550),
        	(position_set_y, pos1, 550),
        	(overlay_set_position, "$g_presentation_obj_3", pos1),

		(create_button_overlay, "$g_presentation_obj_4", "@Cape", tf_center_justify),
        	(position_set_x, pos1, 550),
        	(position_set_y, pos1, 500),
        	(overlay_set_position, "$g_presentation_obj_4", pos1),

		(create_button_overlay, "$g_presentation_obj_5", "@Arms", tf_center_justify),
        	(position_set_x, pos1, 550),
        	(position_set_y, pos1, 450),
        	(overlay_set_position, "$g_presentation_obj_5", pos1),

		(create_button_overlay, "$g_presentation_obj_6", "@Thighs", tf_center_justify),
        	(position_set_x, pos1, 550),
        	(position_set_y, pos1, 400),
        	(overlay_set_position, "$g_presentation_obj_6", pos1),

		(create_button_overlay, "$g_presentation_obj_7", "@Legs", tf_center_justify),
        	(position_set_x, pos1, 550),
        	(position_set_y, pos1, 350),
        	(overlay_set_position, "$g_presentation_obj_7", pos1),

		(create_button_overlay, "$g_presentation_obj_8", "@Rotate", tf_center_justify),
        	(position_set_x, pos1, 600),
        	(position_set_y, pos1, 300),
        	(overlay_set_position, "$g_presentation_obj_8", pos1),
	]),

	(ti_on_presentation_run, 
	[
	(try_begin),
		(this_or_next|key_clicked, key_enter),
		(this_or_next|key_clicked, key_escape),
		(key_clicked, key_back_space),
		(presentation_set_duration, 0),
	(try_end),
	]),

	(ti_on_presentation_event_state_change,
	[
		(store_trigger_param_1, ":object"),
		#(store_trigger_param_2, ":value"),
		(try_begin),
			(eq, ":object", "$g_presentation_obj_8"),
			(val_add, "$g_defiled_armor_rotation", 90), # Rotate 90 deg
			(try_begin),
				(ge, "$g_defiled_armor_rotation", 360),
				(store_sub, "$g_defiled_armor_rotation", "$g_defiled_armor_rotation", 360),
			(try_end),
			(assign, reg0, "$g_defiled_armor_rotation"),
			(display_message, "@{!}Rotation={reg0}"),
          		(start_presentation, "prsnt_customize_defilement"), # Restart
		(try_end),
	]),

]),

#Kham:battle_map

("troop_talk_hero",prsntf_read_only,0,[#prsntf_read_only flag allows player to combat when battle_map show
  (ti_on_presentation_load,
    [

      (set_fixed_point_multiplier, 1000),
      (assign, "$g_presentation_obj_1", -1),
      (assign, "$g_presentation_obj_2", -1),
      (assign, "$g_presentation_obj_3", -1),
      (assign, "$g_presentation_obj_4", -1),
      (assign, "$g_presentation_obj_5", -1),
      (assign, "$g_presentation_obj_6", -1),
      (assign, "$g_presentation_obj_7", -1),
      (assign, "$g_presentation_obj_11", -1),
      (assign, "$g_presentation_obj_12", -1),

      (assign, "$battle_chat", 1),

      #Hero (Left Side)
      (try_begin),

      #Text
        (create_text_overlay, reg1, "@{!}{s30}", tf_left_align),
        (position_set_x, pos1, 180),#200
        (position_set_y, pos1, 550),#700
        (overlay_set_position, reg1, pos1),
        (overlay_set_color, reg1, 0xffffff),

        #picture
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$troop_talk_hero"),
        (position_set_x, pos1, 500),#750 before
        (position_set_y, pos1, 500),#750 before
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 7),#700
        (position_set_y, pos1, 500),#500
        (overlay_set_position, reg1, pos1),

        #name
        (str_store_troop_name, s1, "$troop_talk_hero"),
        (create_text_overlay, reg1, "@{!}{s1}", tf_center_justify),
        (position_set_x, pos1, 100),#100
        (position_set_y, pos1, 480),#480
        (overlay_set_position, reg1, pos1),
        (overlay_set_color, reg1, 0xffffff),
      (try_end), 

      (presentation_set_duration, "$troop_talk_duration"),
    ]
  ),

  (ti_on_presentation_run,
    [
      (store_trigger_param_1, ":cur_time"),
      (set_fixed_point_multiplier, 1000),
      (try_begin),
        (gt, ":cur_time", 500),
        (this_or_next | neq, "$battle_chat", 1),
        (game_key_clicked, gk_view_orders),
        (presentation_set_duration, 0),
        # Switch to original order panel directly
        (game_key_clicked, gk_view_orders),
        (start_presentation, "prsnt_battle"),
      (try_end),
    ]
  ),
]),


("troop_talk_enemy",prsntf_read_only,0,[#prsntf_read_only flag allows player to combat when battle_map show
  (ti_on_presentation_load,
    [


      (set_fixed_point_multiplier, 1000),
      (assign, "$g_presentation_obj_1", -1),
      (assign, "$g_presentation_obj_2", -1),
      (assign, "$g_presentation_obj_3", -1),
      (assign, "$g_presentation_obj_4", -1),
      (assign, "$g_presentation_obj_5", -1),
      (assign, "$g_presentation_obj_6", -1),
      (assign, "$g_presentation_obj_7", -1),
      (assign, "$g_presentation_obj_11", -1),
      (assign, "$g_presentation_obj_12", -1),

      (assign, "$battle_chat", 2),

      #Enemy (Lower Right Side)
      (try_begin),

        #Text 
        (create_text_overlay, reg1, "@{!}{s30}", tf_right_align),
        (position_set_x, pos1, 700),#25
        (position_set_y, pos1, 85),#65
        (overlay_set_position, reg1, pos1),
        (overlay_set_color, reg1, 0xffffff),

        #picture
        (create_mesh_overlay_with_tableau_material, reg1, -1, "tableau_troop_note_mesh", "$troop_talk_enemy"),
        (position_set_x, pos1, 600),#750 before
        (position_set_y, pos1, 600),#750 before
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 760),#740
        (position_set_y, pos1, 60),#45
        (overlay_set_position, reg1, pos1),

        #name
        (str_store_troop_name, s1, "$troop_talk_enemy"),
        (create_text_overlay, reg1, "@{!}{s1}", tf_center_justify),
        (position_set_x, pos1, 835),#835
        (position_set_y, pos1, 25),#13
        (overlay_set_position, reg1, pos1),
        (overlay_set_color, reg1, 0xffffff),

      (try_end),   

      (presentation_set_duration, "$troop_talk_duration"),
    ]
  ),

  (ti_on_presentation_run,
    [
      (store_trigger_param_1, ":cur_time"),

      (set_fixed_point_multiplier, 1000),

      (try_begin),
        (gt, ":cur_time", 500),
        (this_or_next | neq, "$battle_chat", 2),
        (game_key_clicked, gk_view_orders),
        (presentation_set_duration, 0),
        # Switch to original order panel directly
        (game_key_clicked, gk_view_orders),
        (start_presentation, "prsnt_battle"),
      (try_end),
    ]
  ),
]),


#Kham END


("faction_intro_text", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (create_mesh_overlay, reg1, "mesh_town_goodcamp"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        ## combo_button
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 690),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        # factions
        (store_sub, ":num_factions", npc_kingdoms_end, npc_kingdoms_begin),
        
        ## page names, from bottom to top
        (try_for_range_backwards, ":page_no", 0, ":num_factions"),
          (store_add, ":faction_no", ":page_no", npc_kingdoms_begin),
          (str_store_faction_name, s0, ":faction_no"),
          (overlay_add_item, "$g_presentation_obj_1", s0),
        (try_end),
        (store_sub, ":presentation_obj_val", ":num_factions", "$g_selected_page"),
        (val_sub, ":presentation_obj_val", 1),
        (overlay_set_val, "$g_presentation_obj_1", ":presentation_obj_val"),
        
        ## back
        (create_game_button_overlay, "$g_presentation_obj_2", "@Close"),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 685),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
            

        ## pic_arms
        (try_begin),
          (is_between, "$g_selected_page", 0, ":num_factions"), 
          (store_add, ":pic_arms", "mesh_tp_victory_gondor", "$g_selected_page"),
          (create_mesh_overlay, reg1, ":pic_arms"),
          (position_set_x, pos1, 200),
          (position_set_y, pos1, 110),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 300),
          (position_set_y, pos1, 300),
          (overlay_set_size, reg1, pos1),
        (try_end),


        ## Text
        (try_begin),
          (is_between, "$g_selected_page", 0, ":num_factions"), 
          
          (store_add, ":text_string", intro_strings_begin, "$g_selected_page"),
          (str_store_string, s1, ":text_string"),
          (create_text_overlay, reg65, "@{!}{s1}", tf_center_justify|tf_scrollable),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 350),
          (overlay_set_position, reg65, pos1),
          (position_set_x, pos1, 1150),
          (position_set_y, pos1, 1150),
          (overlay_set_size, reg65, pos1),
          (position_set_x, pos1, 400),
          (position_set_y, pos1, 300),
          (overlay_set_area_size, reg65, pos1),
          
          (create_text_overlay, reg66, "@Faction Side:^^Campaign Difficulty*:^^Home Theater:^^Marshall:^^Enemies:^^", tf_left_align|tf_scrollable),
          (position_set_x, pos1, 50),
          (position_set_y, pos1, 15),
          (overlay_set_position, reg66, pos1),
          (position_set_x, pos1, 1200),
          (position_set_y, pos1, 1200),
          (overlay_set_size, reg66, pos1),
          (position_set_x, pos1, 400),
          (position_set_y, pos1, 300),
          (overlay_set_area_size, reg66, pos1),

          (create_text_overlay, reg68, "@Campaign Difficulty is based on starting faction strength, theater enemies,^ and faction troop tree & troop equipment.", tf_center_justify),
          (position_set_x, pos1, 300),
          (position_set_y, pos1, 5),
          (overlay_set_position, reg68, pos1),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 900),
          (overlay_set_size, reg68, pos1),
          (position_set_x, pos1, 400),
          (position_set_y, pos1, 300),
          (overlay_set_area_size, reg68, pos1),
          
          (store_add, ":text_string_2", "str_gondor_extra_info", "$g_selected_page"),
          (str_store_string, s2, ":text_string_2"),
          (create_text_overlay, reg67, "@{!}{s2}", tf_right_align|tf_scrollable),
          (overlay_set_color, reg67, 0xFFFFFF),
          (position_set_x, pos1, 55),
          (position_set_y, pos1, 15),
          (overlay_set_position, reg67, pos1),
          (position_set_x, pos1, 1200),
          (position_set_y, pos1, 1200),
          (overlay_set_size, reg67, pos1),
          (position_set_x, pos1, 400),
          (position_set_y, pos1, 300),
          (overlay_set_area_size, reg67, pos1),
        (try_end),

      ]),
      
      
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (store_sub, ":num_pages", npc_kingdoms_end, npc_kingdoms_begin),
          (store_sub, "$g_selected_page", ":num_pages", ":value"),
          (val_sub, "$g_selected_page", 1),
          (start_presentation, "prsnt_faction_intro_text"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (assign, "$g_selected_page", 0),
          (try_begin),
            (eq, "$intro_presentation_stage", 1),
            (presentation_set_duration, 0),
            (jump_to_menu, "mnu_start_game_1"),
          (else_try),
            (eq, "$intro_presentation_stage", 2),
            (start_presentation, "prsnt_faction_selection_good"),
          (else_try),
            (eq, "$intro_presentation_stage", 22),
            (start_presentation, "prsnt_faction_selection_evil"),
          (else_try),
            (eq, "$intro_presentation_stage", 3),
            (start_presentation, "prsnt_faction_selection_eye"),
          (else_try),
            (eq, "$intro_presentation_stage", 33),
            (start_presentation, "prsnt_faction_selection_hand"),
          (try_end),
        (try_end),
      ]),
  ]),


("show_num_rallies", prsntf_read_only|prsntf_manual_end_only, 0, [
    (ti_on_presentation_load, [
        (set_fixed_point_multiplier, 1000),
        
        (str_clear, s12),
        
        (create_text_overlay, "$show_num_rallies", "@Rallies:", tf_center_justify),
        (overlay_set_color, "$show_num_rallies", 0xDDDDDD),
        (position_set_x, pos1, 919),
        (position_set_y, pos1, 40),
        (overlay_set_position, "$show_num_rallies", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$show_num_rallies", pos1),

        (create_text_overlay, reg74, "@View Keybinds (Press Insert)", tf_center_justify),
        (overlay_set_color, reg74, 0x8C8C8C),
        (position_set_x, pos1, 921),
        (position_set_y, pos1, 83),
        (overlay_set_position, reg74, pos1),
        (position_set_x, pos1, 600),
        (position_set_y, pos1, 600),
        (overlay_set_size, reg74, pos1),
        ##
        (get_player_agent_no,":player_agent"),
        (agent_is_alive,":player_agent"), #  test for alive players.
        (agent_is_human, ":player_agent"),
        (assign, ":max_rallies", 1),
        (agent_get_slot, ":times_rallied", ":player_agent", slot_agent_morale_modifier),
        (store_attribute_level, ":cha", "trp_player", ca_charisma),
        (store_div, ":normal_rallies", ":cha", 5),
        (val_add, ":max_rallies", ":normal_rallies"),
        (try_begin),
          (this_or_next|player_has_item, "itm_angmar_whip_reward"),
          (player_has_item, "itm_horn_gondor_reward"),
          (store_skill_level,":horn_rallies","skl_leadership","trp_player"),
          (val_div, ":horn_rallies", 3),
          (val_add, ":max_rallies", ":horn_rallies"),   
        (try_end),
        (store_div, ":half_amount", ":max_rallies", 2),

        (val_sub, ":max_rallies", ":times_rallied"),

        (assign, reg75, ":max_rallies"),
        (str_store_string,s12,"@{!}{reg75}"),
       

        (create_text_overlay, reg1, s12, tf_center_justify),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 959),
        (position_set_y, pos1, 40),
        (overlay_set_position, reg1, pos1),
        (try_begin),
          (eq, ":max_rallies", 0),
          (overlay_set_color, reg1, color_bad_news),
        (else_try),
          (le, ":max_rallies", ":half_amount"),
          (overlay_set_color, reg1, 0xFFAA00), #yellow
        (else_try),
          (overlay_set_color, reg1, 0x50FF50), #Green
        (try_end),

        (presentation_set_duration, 999999),
    ]),
    (ti_on_presentation_run,
      [
    ]),
]),

("show_key_binds", prsntf_read_only, 0, [
    (ti_on_presentation_load, [
        (set_fixed_point_multiplier, 1000),
        
        (str_clear, s12),
        (assign, ":keybind_string", "str_show_keybinds"),
        (try_begin),
          (eq, "$tld_option_formations", 2),
          (assign, ":keybind_string", "str_show_keybinds_form"),
        (try_end),
        (create_text_overlay, "$show_key_binds", ":keybind_string", tf_center_justify),
        (overlay_set_color, "$show_key_binds", 0xDDDDDD),
        (position_set_x, pos1, 859),
        (position_set_y, pos1, 450),
        (overlay_set_position, "$show_key_binds", pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, "$show_key_binds", pos1),
        (presentation_set_duration, 450),

    ]),
    (ti_on_presentation_run,
      [(assign, "$show_key_binds_toggle", 0)
    ]),
]),


# SWYTER's FACTION SELECTION ANIMATED AND MODULAR MENU
# enjoy it :P
  ("faction_selection",0,mesh_load_window,[
      (ti_on_presentation_load,
       [

        (set_fixed_point_multiplier, 1000),

        (str_store_string, s1, "@What do you fight for?"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 1750),
        (position_set_y, pos1, 1750),
        (overlay_set_size, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_button_overlay, "$g_presentation_obj_1", "@Go Back...", tf_center_justify),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        
        (create_button_overlay, "$g_presentation_obj_2", "@Learn about the different factions of Middle-Earth", tf_center_justify),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        
        #]+concatenate_scripts([[
        #(try_begin),
        #  (eq, cheat_switch, 1),
        #  (create_button_overlay, "$g_presentation_obj_3", "@Dev Quick Start: Gondor", tf_center_justify),
        #  (position_set_x, pos1, 280),
        #  (position_set_y, pos1, 140),
        #  (overlay_set_position, "$g_presentation_obj_3", pos1),
        #  (create_button_overlay, "$g_presentation_obj_4", "@Dev Quick Start: Mordor", tf_center_justify),
        #  (position_set_x, pos1, 680),
        #  (position_set_y, pos1, 140),
        #  (overlay_set_position, "$g_presentation_obj_4", pos1),
        #(try_end),
        #] for ct in range(cheat_switch)])+[ 

    #FACTION SIDE GOOD
    #text
     (create_text_overlay, "$g_option_good_text", "@The DAWN of a New Era", tf_center_justify),
    #(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 280),
        (position_set_y, pos1, 180),
        (overlay_set_position, "$g_option_good_text", pos1),
    (overlay_set_alpha, "$g_option_good_text", 0x7D),
    (overlay_set_color, "$g_option_good_text", 0x181D4D),

    #logo
      #(create_image_button_overlay_with_tableau_material, "$g_option_good", -1, "tableau_faction_note_mesh_banner", "fac_gondor"),
      (create_image_button_overlay, "$g_option_good", "mesh_choose_icon_good", "mesh_choose_icon_good"),
           (position_set_x, pos1, 285),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_option_good", pos1),
           (position_set_x, pos1, 600),
           (position_set_y, pos1, 600),
           (overlay_set_size, "$g_option_good", pos1),

    #FACTION SIDE EVIL
    #text
     (create_text_overlay, "$g_option_evil_text", "@The TWILIGHT of Man", tf_center_justify),
        (position_set_x, pos1, 680),
        (position_set_y, pos1, 180),
        (overlay_set_position, "$g_option_evil_text", pos1),
    (overlay_set_alpha, "$g_option_evil_text", 0x7D),
    (overlay_set_color, "$g_option_evil_text", 0x4D1818),

    #logo
      (create_image_button_overlay, "$g_option_evil", "mesh_choose_icon_evil", "mesh_choose_icon_evil"),
           (position_set_x, pos1, 685),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_option_evil", pos1),
           (position_set_x, pos1, 600),
           (position_set_y, pos1, 600),
           (overlay_set_size, "$g_option_evil",pos1),
        (presentation_set_duration, 999999),
        ]),
    
    (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_1"),
        (presentation_set_duration, 0),
        (jump_to_menu, "mnu_auto_quit"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_2"),
        #(presentation_set_duration, 0),
        (start_presentation, "prsnt_faction_intro_text"),
      #(else_try),
      #  (eq, ":object", "$g_presentation_obj_3"),
      #  (call_script,"script_start_as_one","trp_i1_gon_levy"),
      #  (jump_to_menu,"mnu_start_phase_2"),
      #  (presentation_set_duration, 0),
      #(else_try),
      #  (eq, ":object", "$g_presentation_obj_4"),
      #  (call_script,"script_start_as_one","trp_i1_mordor_uruk_snaga"),
      #  (jump_to_menu,"mnu_start_phase_2"),
      #  (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_option_good"),
        (start_presentation, "prsnt_faction_selection_good"),
      (else_try),
        (eq, ":object", "$g_option_evil"),
        (start_presentation, "prsnt_faction_selection_evil"),
      (try_end),
    ]),

(ti_on_presentation_mouse_enter_leave,[

      (store_trigger_param_1, reg3),
      (store_trigger_param_2, reg4),
      (store_trigger_param_1, ":id"),
      (store_trigger_param_2, ":stage"),

      (try_begin),


        (eq, ":id", "$g_option_good"),
        (eq, ":stage", 0),
      (position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
      (overlay_animate_to_size, "$g_option_evil", 400, pos1),
      (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
      (overlay_animate_to_size, ":id", 300, pos1),
     # (overlay_animate_to_alpha, ":id", 150, 0x7D),
      (overlay_animate_to_alpha, "$g_option_good_text", 150, 0xFF),
    (else_try),
        (eq, ":id", "$g_option_good"),
        (eq, ":stage", 1),
      (position_set_x, pos1, 650),
            (position_set_y, pos1, 650),
      (overlay_animate_to_size, ":id", 300, pos1),
      #(overlay_animate_to_alpha, ":id", 150, 0x0),
      (overlay_animate_to_alpha, "$g_option_good_text", 150, 0x7D),
        (else_try),


        (eq, ":id", "$g_option_evil"),
        (eq, ":stage", 0),
      (position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
      (overlay_animate_to_size, "$g_option_good", 400, pos1),
      (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
      (overlay_animate_to_size, ":id", 300, pos1),
     # (overlay_animate_to_alpha, ":id", 150, 0x7D),
      (overlay_animate_to_alpha, "$g_option_evil_text", 150, 0xFF),
    (else_try),
        (eq, ":id", "$g_option_evil"),
        (eq, ":stage", 1),
      (position_set_x, pos1, 650),
            (position_set_y, pos1, 650),
      (overlay_animate_to_size, ":id", 300, pos1),
     # (overlay_animate_to_alpha, ":id", 150, 0x0),
      (overlay_animate_to_alpha, "$g_option_evil_text", 150, 0x7D),  
    (try_end),
    ]),

  ]
),

("faction_selection_good",0,mesh_load_window,[
      (ti_on_presentation_load,
       [  
        (set_fixed_point_multiplier, 1000),

        (str_store_string, s1, "@Select your Race?"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 1750),
        (position_set_y, pos1, 1750),
        (overlay_set_size, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_button_overlay, "$g_presentation_obj_1", "@Go Back...", tf_center_justify),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        
        (create_button_overlay, "$g_presentation_obj_2", "@Learn about the different factions of Middle-Earth", tf_center_justify),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_2", pos1),


    #MAN
    #text
     (create_text_overlay, "$g_option_good_text", "@Man", tf_center_justify),
    #(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 280),
        (position_set_y, pos1, 230),
        (overlay_set_position, "$g_option_good_text", pos1),
    (overlay_set_alpha, "$g_option_good_text", 0x7D),
    (overlay_set_color, "$g_option_good_text", 0x181D4D),

    #logo
      #(create_image_button_overlay_with_tableau_material, "$g_option_good", -1, "tableau_faction_note_mesh_banner", "fac_gondor"),
      (create_image_button_overlay, "$g_option_good", "mesh_choose_icon_man", "mesh_choose_icon_man"),
           (position_set_x, pos1, 285),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_option_good", pos1),
           (position_set_x, pos1, 400),
           (position_set_y, pos1, 400),
           (overlay_set_size, "$g_option_good", pos1),

    #ELF
    #text
     (create_text_overlay, "$g_option_evil_text", "@Elf", tf_center_justify),
        (position_set_x, pos1, 480),
        (position_set_y, pos1, 230),
        (overlay_set_position, "$g_option_evil_text", pos1),
    (overlay_set_alpha, "$g_option_evil_text", 0x7D),
    (overlay_set_color, "$g_option_evil_text", 0x50FF50),

    #logo
      (create_image_button_overlay, "$g_option_evil", "mesh_choose_icon_elf", "mesh_choose_icon_elf"),
           (position_set_x, pos1, 485),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_option_evil", pos1),
           (position_set_x, pos1, 400),
           (position_set_y, pos1, 400),
           (overlay_set_size, "$g_option_evil",pos1),
    #DWARF
    #text
     (create_text_overlay, "$g_presentation_obj_item_select_2", "@Dwarf", tf_center_justify),
        (position_set_x, pos1, 680),
        (position_set_y, pos1, 230),
        (overlay_set_position, "$g_presentation_obj_item_select_2", pos1),
    (overlay_set_alpha, "$g_presentation_obj_item_select_2", 0x7D),
    (overlay_set_color, "$g_presentation_obj_item_select_2", 0xA52A2A),

    #logo
      (create_image_button_overlay, "$g_presentation_obj_item_select_3", "mesh_choose_icon_dwarf", "mesh_choose_icon_dwarf"),
           (position_set_x, pos1, 685),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_presentation_obj_item_select_3", pos1),
           (position_set_x, pos1, 400),
           (position_set_y, pos1, 400),
           (overlay_set_size, "$g_presentation_obj_item_select_3",pos1),

        (presentation_set_duration, 999999),
        ]),
    
    (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_1"),
        #(presentation_set_duration, 0),
        (start_presentation, "prsnt_faction_selection"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_2"),
        #(presentation_set_duration, 0),
        (assign, "$intro_presentation_stage", 2),
        (start_presentation, "prsnt_faction_intro_text"),
      (else_try),
        (eq, ":object", "$g_option_good"),
        (assign, "$intro_presentation_stage", 2),
        (jump_to_menu,"mnu_start_good_man"),
        (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_option_evil"),
        (assign, "$intro_presentation_stage", 2),
        (jump_to_menu,"mnu_start_good_elf"),
        (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_item_select_3"),
        (assign, "$intro_presentation_stage", 2),
        (jump_to_menu,"mnu_start_good_dwarf"),
        (presentation_set_duration, 0),
      (try_end),
    ]),

(ti_on_presentation_mouse_enter_leave,[

      (store_trigger_param_1, reg3),
      (store_trigger_param_2, reg4),
      (store_trigger_param_1, ":id"),
      (store_trigger_param_2, ":stage"),

      (try_begin),

        (eq, ":id", "$g_option_good"),
        (eq, ":stage", 0),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        
        (overlay_animate_to_size, "$g_option_evil", 400, pos1),
        (overlay_animate_to_size, "$g_presentation_obj_item_select_3", 400, pos1),
        (position_set_x, pos1, 550),
        (position_set_y, pos1, 550),
        
        (overlay_animate_to_size, ":id", 300, pos1),
       # (overlay_animate_to_alpha, ":id", 150, 0x7D),
        (overlay_animate_to_alpha, "$g_option_good_text", 150, 0xFF),
    (else_try),
        
        (eq, ":id", "$g_option_good"),
        (eq, ":stage", 1),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 450),
        
        (overlay_animate_to_size, ":id", 300, pos1),
       #(overlay_animate_to_alpha, ":id", 150, 0x0),
        (overlay_animate_to_alpha, "$g_option_good_text", 150, 0x7D),
    (else_try),

      (eq, ":id", "$g_option_evil"),
      (eq, ":stage", 0),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),

      (overlay_animate_to_size, "$g_option_good", 400, pos1),
      (overlay_animate_to_size, "$g_presentation_obj_item_select_3", 400, pos1),
      (position_set_x, pos1, 550),
      (position_set_y, pos1, 550),
        
      (overlay_animate_to_size, ":id", 300, pos1),
     # (overlay_animate_to_alpha, ":id", 150, 0x7D),
      (overlay_animate_to_alpha, "$g_option_evil_text", 150, 0xFF),
    (else_try),

        (eq, ":id", "$g_option_evil"),
        (eq, ":stage", 1),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 450),
        (overlay_animate_to_size, ":id", 300, pos1),
      # (overlay_animate_to_alpha, ":id", 150, 0x0),
        (overlay_animate_to_alpha, "$g_option_evil_text", 150, 0x7D),  
    
    (else_try),

        (eq, ":id", "$g_presentation_obj_item_select_3"),
        (eq, ":stage", 0),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        
        (overlay_animate_to_size, "$g_option_good", 400, pos1),
        (overlay_animate_to_size, "$g_option_evil", 400, pos1),
        (position_set_x, pos1, 550),
        (position_set_y, pos1, 550),
      
        (overlay_animate_to_size, ":id", 300, pos1),
      # (overlay_animate_to_alpha, ":id", 150, 0x7D),
        (overlay_animate_to_alpha, "$g_presentation_obj_item_select_2", 150, 0xFF),
    (else_try),
        (eq, ":id", "$g_presentation_obj_item_select_3"),
        (eq, ":stage", 1),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 450),
        (overlay_animate_to_size, ":id", 300, pos1),
       #(overlay_animate_to_alpha, ":id", 150, 0x0),
        (overlay_animate_to_alpha, "$g_presentation_obj_item_select_2", 150, 0x7D),  
    (try_end),

    ]),

  ]
),

  ("faction_selection_evil",0,mesh_load_window,[
      (ti_on_presentation_load,
       [

        (set_fixed_point_multiplier, 1000),

        (str_store_string, s1, "@Whom Do You Serve?"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 1750),
        (position_set_y, pos1, 1750),
        (overlay_set_size, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_button_overlay, "$g_presentation_obj_1", "@Go Back...", tf_center_justify),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        
        (create_button_overlay, "$g_presentation_obj_2", "@Learn about the different factions of Middle-Earth", tf_center_justify),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_2", pos1),

    #FACTION SIDE HAND
    #text
     (create_text_overlay, "$g_option_good_text", "@SAURON of Mordor, The Lord of the Rings", tf_center_justify),
    #(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 280),
        (position_set_y, pos1, 180),
        (overlay_set_position, "$g_option_good_text", pos1),
    (overlay_set_alpha, "$g_option_good_text", 0x7D),
    (overlay_set_color, "$g_option_good_text", 0x181D4D),

    #logo
      #(create_image_button_overlay_with_tableau_material, "$g_option_good", -1, "tableau_faction_note_mesh_banner", "fac_gondor"),
      (create_image_button_overlay, "$g_option_good", "mesh_choose_icon_eye", "mesh_choose_icon_eye"),
           (position_set_x, pos1, 285),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_option_good", pos1),
           (position_set_x, pos1, 600),
           (position_set_y, pos1, 600),
           (overlay_set_size, "$g_option_good", pos1),

    #FACTION SIDE EVIL
    #text
     (create_text_overlay, "$g_option_evil_text", "@SARUMAN of Isengard, The White Hand", tf_center_justify),
        (position_set_x, pos1, 680),
        (position_set_y, pos1, 180),
        (overlay_set_position, "$g_option_evil_text", pos1),
    (overlay_set_alpha, "$g_option_evil_text", 0x7D),
    (overlay_set_color, "$g_option_evil_text", 0x4D1818),

    #logo
      (create_image_button_overlay, "$g_option_evil", "mesh_choose_icon_hand", "mesh_choose_icon_hand"),
           (position_set_x, pos1, 685),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_option_evil", pos1),
           (position_set_x, pos1, 600),
           (position_set_y, pos1, 600),
           (overlay_set_size, "$g_option_evil",pos1),
        (presentation_set_duration, 999999),
        ]),
    
    (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_1"),
        #(presentation_set_duration, 0),
        (start_presentation, "prsnt_faction_selection"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_2"),
        #(presentation_set_duration, 0),
        (assign, "$intro_presentation_stage", 22),
        (start_presentation, "prsnt_faction_intro_text"),
      (else_try),
        (eq, ":object", "$g_option_good"),
        (assign, "$intro_presentation_stage", 3),
        (start_presentation, "prsnt_faction_selection_eye"),
      (else_try),
        (eq, ":object", "$g_option_evil"),
        (assign, "$intro_presentation_stage", 33),
        (start_presentation, "prsnt_faction_selection_hand"),
      (try_end),
    ]),

(ti_on_presentation_mouse_enter_leave,[

      (store_trigger_param_1, reg3),
      (store_trigger_param_2, reg4),
      (store_trigger_param_1, ":id"),
      (store_trigger_param_2, ":stage"),

      (try_begin),


        (eq, ":id", "$g_option_good"),
        (eq, ":stage", 0),
      (position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
      (overlay_animate_to_size, "$g_option_evil", 400, pos1),
      (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
      (overlay_animate_to_size, ":id", 300, pos1),
     # (overlay_animate_to_alpha, ":id", 150, 0x7D),
      (overlay_animate_to_alpha, "$g_option_good_text", 150, 0xFF),
    (else_try),
        (eq, ":id", "$g_option_good"),
        (eq, ":stage", 1),
      (position_set_x, pos1, 650),
            (position_set_y, pos1, 650),
      (overlay_animate_to_size, ":id", 300, pos1),
      #(overlay_animate_to_alpha, ":id", 150, 0x0),
      (overlay_animate_to_alpha, "$g_option_good_text", 150, 0x7D),
        (else_try),


        (eq, ":id", "$g_option_evil"),
        (eq, ":stage", 0),
      (position_set_x, pos1, 600),
            (position_set_y, pos1, 600),
      (overlay_animate_to_size, "$g_option_good", 400, pos1),
      (position_set_x, pos1, 750),
            (position_set_y, pos1, 750),
      (overlay_animate_to_size, ":id", 300, pos1),
     # (overlay_animate_to_alpha, ":id", 150, 0x7D),
      (overlay_animate_to_alpha, "$g_option_evil_text", 150, 0xFF),
    (else_try),
        (eq, ":id", "$g_option_evil"),
        (eq, ":stage", 1),
      (position_set_x, pos1, 650),
            (position_set_y, pos1, 650),
      (overlay_animate_to_size, ":id", 300, pos1),
     # (overlay_animate_to_alpha, ":id", 150, 0x0),
      (overlay_animate_to_alpha, "$g_option_evil_text", 150, 0x7D),  
    (try_end),
    ]),

  ]
),



("faction_selection_eye",0,mesh_load_window,[
      (ti_on_presentation_load,
       [  
        (set_fixed_point_multiplier, 1000),

        (str_store_string, s1, "@Select your Race?"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 1750),
        (position_set_y, pos1, 1750),
        (overlay_set_size, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_button_overlay, "$g_presentation_obj_1", "@Go Back...", tf_center_justify),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        
        (create_button_overlay, "$g_presentation_obj_2", "@Learn about the different factions of Middle-Earth", tf_center_justify),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_2", pos1),


    #ORC
    #text
     (create_text_overlay, "$g_option_good_text", "@an ORC,^ serving the Lidless Eye", tf_center_justify),
    #(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 280),
        (position_set_y, pos1, 230),
        (overlay_set_position, "$g_option_good_text", pos1),
    (overlay_set_alpha, "$g_option_good_text", 0x7D),
    (overlay_set_color, "$g_option_good_text", 0x181D4D),

    #logo
      #(create_image_button_overlay_with_tableau_material, "$g_option_good", -1, "tableau_faction_note_mesh_banner", "fac_gondor"),
      (create_image_button_overlay, "$g_option_good", "mesh_choose_icon_orc", "mesh_choose_icon_orc"),
           (position_set_x, pos1, 285),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_option_good", pos1),
           (position_set_x, pos1, 400),
           (position_set_y, pos1, 400),
           (overlay_set_size, "$g_option_good", pos1),

    #URUK
    #text
     (create_text_overlay, "$g_option_evil_text", "@an URUK,^ the new breed of Orcs", tf_center_justify),
        (position_set_x, pos1, 480),
        (position_set_y, pos1, 230),
        (overlay_set_position, "$g_option_evil_text", pos1),
    (overlay_set_alpha, "$g_option_evil_text", 0x7D),
    (overlay_set_color, "$g_option_evil_text", 0x50FF50),

    #logo
      (create_image_button_overlay, "$g_option_evil", "mesh_choose_icon_uruk", "mesh_choose_icon_uruk"),
           (position_set_x, pos1, 485),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_option_evil", pos1),
           (position_set_x, pos1, 400),
           (position_set_y, pos1, 400),
           (overlay_set_size, "$g_option_evil",pos1),

    #Evil Man
    #text
     (create_text_overlay, "$g_presentation_obj_item_select_2", "@a MAN,^ subjugated by Sauron", tf_center_justify),
        (position_set_x, pos1, 680),
        (position_set_y, pos1, 230),
        (overlay_set_position, "$g_presentation_obj_item_select_2", pos1),
    (overlay_set_alpha, "$g_presentation_obj_item_select_2", 0x7D),
    (overlay_set_color, "$g_presentation_obj_item_select_2", 0xA52A2A),

    #logo
      (create_image_button_overlay, "$g_presentation_obj_item_select_3", "mesh_choose_icon_evilman", "mesh_choose_icon_evilman"),
           (position_set_x, pos1, 685),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_presentation_obj_item_select_3", pos1),
           (position_set_x, pos1, 400),
           (position_set_y, pos1, 400),
           (overlay_set_size, "$g_presentation_obj_item_select_3",pos1),

        (presentation_set_duration, 999999),
        ]),
    
    (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_1"),
        #(presentation_set_duration, 0),
        (start_presentation, "prsnt_faction_selection_evil"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_2"),
        (assign, "$intro_presentation_stage", 3),
        (start_presentation, "prsnt_faction_intro_text"),
      (else_try),
        (eq, ":object", "$g_option_good"),
        (assign, "$intro_presentation_stage", 3),
        (jump_to_menu,"mnu_start_eye_orc"),
        (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_option_evil"),
        (assign, "$intro_presentation_stage", 3),
        (jump_to_menu,"mnu_start_eye_uruk"),
        (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_item_select_3"),
        (assign, "$intro_presentation_stage", 3),
        (jump_to_menu,"mnu_start_eye_man"),
        (presentation_set_duration, 0),
      (try_end),
    ]),

(ti_on_presentation_mouse_enter_leave,[

      (store_trigger_param_1, reg3),
      (store_trigger_param_2, reg4),
      (store_trigger_param_1, ":id"),
      (store_trigger_param_2, ":stage"),

      (try_begin),

        (eq, ":id", "$g_option_good"),
        (eq, ":stage", 0),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        
        (overlay_animate_to_size, "$g_option_evil", 400, pos1),
        (overlay_animate_to_size, "$g_presentation_obj_item_select_3", 400, pos1),
        (position_set_x, pos1, 550),
        (position_set_y, pos1, 550),
        
        (overlay_animate_to_size, ":id", 300, pos1),
       # (overlay_animate_to_alpha, ":id", 150, 0x7D),
        (overlay_animate_to_alpha, "$g_option_good_text", 150, 0xFF),
    (else_try),
        
        (eq, ":id", "$g_option_good"),
        (eq, ":stage", 1),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 450),
        
        (overlay_animate_to_size, ":id", 300, pos1),
       #(overlay_animate_to_alpha, ":id", 150, 0x0),
        (overlay_animate_to_alpha, "$g_option_good_text", 150, 0x7D),
    (else_try),

      (eq, ":id", "$g_option_evil"),
      (eq, ":stage", 0),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),

      (overlay_animate_to_size, "$g_option_good", 400, pos1),
      (overlay_animate_to_size, "$g_presentation_obj_item_select_3", 400, pos1),
      (position_set_x, pos1, 550),
      (position_set_y, pos1, 550),
        
      (overlay_animate_to_size, ":id", 300, pos1),
     # (overlay_animate_to_alpha, ":id", 150, 0x7D),
      (overlay_animate_to_alpha, "$g_option_evil_text", 150, 0xFF),
    (else_try),

        (eq, ":id", "$g_option_evil"),
        (eq, ":stage", 1),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 450),
        (overlay_animate_to_size, ":id", 300, pos1),
      # (overlay_animate_to_alpha, ":id", 150, 0x0),
        (overlay_animate_to_alpha, "$g_option_evil_text", 150, 0x7D),  
    
    (else_try),

        (eq, ":id", "$g_presentation_obj_item_select_3"),
        (eq, ":stage", 0),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        
        (overlay_animate_to_size, "$g_option_good", 400, pos1),
        (overlay_animate_to_size, "$g_option_evil", 400, pos1),
        (position_set_x, pos1, 550),
        (position_set_y, pos1, 550),
      
        (overlay_animate_to_size, ":id", 300, pos1),
      # (overlay_animate_to_alpha, ":id", 150, 0x7D),
        (overlay_animate_to_alpha, "$g_presentation_obj_item_select_2", 150, 0xFF),
    (else_try),
        (eq, ":id", "$g_presentation_obj_item_select_3"),
        (eq, ":stage", 1),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 450),
        (overlay_animate_to_size, ":id", 300, pos1),
       #(overlay_animate_to_alpha, ":id", 150, 0x0),
        (overlay_animate_to_alpha, "$g_presentation_obj_item_select_2", 150, 0x7D),  
    (try_end),

    ]),

  ]
),

("faction_selection_hand",0,mesh_load_window,[
      (ti_on_presentation_load,
       [  
        (set_fixed_point_multiplier, 1000),

        (str_store_string, s1, "@Select your Race?"),
        (create_text_overlay, reg1, s1, tf_center_justify),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 600),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 1750),
        (position_set_y, pos1, 1750),
        (overlay_set_size, reg1, pos1),
        (overlay_set_text, reg1, s1),
        (create_button_overlay, "$g_presentation_obj_1", "@Go Back...", tf_center_justify),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 50),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        
        (create_button_overlay, "$g_presentation_obj_2", "@Learn about the different factions of Middle-Earth", tf_center_justify),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_2", pos1),


    #ORC
    #text
     (create_text_overlay, "$g_option_good_text", "@an ORC,^ serving the White Hand", tf_center_justify),
    #(create_button_overlay, "$g_presentation_obj_1", 0, tf_center_justify),
        (position_set_x, pos1, 280),
        (position_set_y, pos1, 230),
        (overlay_set_position, "$g_option_good_text", pos1),
    (overlay_set_alpha, "$g_option_good_text", 0x7D),
    (overlay_set_color, "$g_option_good_text", 0x181D4D),

    #logo
      #(create_image_button_overlay_with_tableau_material, "$g_option_good", -1, "tableau_faction_note_mesh_banner", "fac_gondor"),
      (create_image_button_overlay, "$g_option_good", "mesh_choose_icon_orc", "mesh_choose_icon_orc"),
           (position_set_x, pos1, 285),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_option_good", pos1),
           (position_set_x, pos1, 400),
           (position_set_y, pos1, 400),
           (overlay_set_size, "$g_option_good", pos1),

    #URUK
    #text
     (create_text_overlay, "$g_option_evil_text", "@one of the URUK-HAI,^ bred in Isengard", tf_center_justify),
        (position_set_x, pos1, 480),
        (position_set_y, pos1, 230),
        (overlay_set_position, "$g_option_evil_text", pos1),
    (overlay_set_alpha, "$g_option_evil_text", 0x7D),
    (overlay_set_color, "$g_option_evil_text", 0x50FF50),

    #logo
      (create_image_button_overlay, "$g_option_evil", "mesh_choose_icon_uruk", "mesh_choose_icon_uruk"),
           (position_set_x, pos1, 485),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_option_evil", pos1),
           (position_set_x, pos1, 400),
           (position_set_y, pos1, 400),
           (overlay_set_size, "$g_option_evil",pos1),

    #Evil Man
    #text
     (create_text_overlay, "$g_presentation_obj_item_select_2", "@a MAN of Dunland,^ the Western Plains", tf_center_justify),
        (position_set_x, pos1, 680),
        (position_set_y, pos1, 230),
        (overlay_set_position, "$g_presentation_obj_item_select_2", pos1),
    (overlay_set_alpha, "$g_presentation_obj_item_select_2", 0x7D),
    (overlay_set_color, "$g_presentation_obj_item_select_2", 0xA52A2A),

    #logo
      (create_image_button_overlay, "$g_presentation_obj_item_select_3", "mesh_choose_icon_evilman", "mesh_choose_icon_evilman"),
           (position_set_x, pos1, 685),
           (position_set_y, pos1, 380),
           (overlay_set_position, "$g_presentation_obj_item_select_3", pos1),
           (position_set_x, pos1, 400),
           (position_set_y, pos1, 400),
           (overlay_set_size, "$g_presentation_obj_item_select_3",pos1),

        (presentation_set_duration, 999999),
        ]),
    
    (ti_on_presentation_event_state_change,
       [(store_trigger_param_1, ":object"),
      (try_begin),
        (eq, ":object", "$g_presentation_obj_1"),
        #(presentation_set_duration, 0),
        (start_presentation, "prsnt_faction_selection_evil"),
      (else_try),
        (eq, ":object", "$g_presentation_obj_2"),
        (assign, "$intro_presentation_stage", 33),
        (start_presentation, "prsnt_faction_intro_text"),
      (else_try),
        (eq, ":object", "$g_option_good"),
        (assign, "$intro_presentation_stage", 33),
        (jump_to_menu,"mnu_start_hand_orc"),
        (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_option_evil"),
        (assign, "$intro_presentation_stage", 33),
        (assign,"$player_current_troop_type","trp_i1_isen_uruk_snaga"),  
        (jump_to_menu,"mnu_start_as_one"),
        (presentation_set_duration, 0),
      (else_try),
        (eq, ":object", "$g_presentation_obj_item_select_3"),
        (assign, "$intro_presentation_stage", 33),
        (assign,"$player_current_troop_type", "trp_i1_dun_wildman"),
        (jump_to_menu,"mnu_choose_gender"),
        (presentation_set_duration, 0),
      (try_end),
    ]),

(ti_on_presentation_mouse_enter_leave,[

      (store_trigger_param_1, reg3),
      (store_trigger_param_2, reg4),
      (store_trigger_param_1, ":id"),
      (store_trigger_param_2, ":stage"),

      (try_begin),

        (eq, ":id", "$g_option_good"),
        (eq, ":stage", 0),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        
        (overlay_animate_to_size, "$g_option_evil", 400, pos1),
        (overlay_animate_to_size, "$g_presentation_obj_item_select_3", 400, pos1),
        (position_set_x, pos1, 550),
        (position_set_y, pos1, 550),
        
        (overlay_animate_to_size, ":id", 300, pos1),
       # (overlay_animate_to_alpha, ":id", 150, 0x7D),
        (overlay_animate_to_alpha, "$g_option_good_text", 150, 0xFF),
    (else_try),
        
        (eq, ":id", "$g_option_good"),
        (eq, ":stage", 1),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 450),
        
        (overlay_animate_to_size, ":id", 300, pos1),
       #(overlay_animate_to_alpha, ":id", 150, 0x0),
        (overlay_animate_to_alpha, "$g_option_good_text", 150, 0x7D),
    (else_try),

      (eq, ":id", "$g_option_evil"),
      (eq, ":stage", 0),
      (position_set_x, pos1, 400),
      (position_set_y, pos1, 400),

      (overlay_animate_to_size, "$g_option_good", 400, pos1),
      (overlay_animate_to_size, "$g_presentation_obj_item_select_3", 400, pos1),
      (position_set_x, pos1, 550),
      (position_set_y, pos1, 550),
        
      (overlay_animate_to_size, ":id", 300, pos1),
     # (overlay_animate_to_alpha, ":id", 150, 0x7D),
      (overlay_animate_to_alpha, "$g_option_evil_text", 150, 0xFF),
    (else_try),

        (eq, ":id", "$g_option_evil"),
        (eq, ":stage", 1),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 450),
        (overlay_animate_to_size, ":id", 300, pos1),
      # (overlay_animate_to_alpha, ":id", 150, 0x0),
        (overlay_animate_to_alpha, "$g_option_evil_text", 150, 0x7D),  
    
    (else_try),

        (eq, ":id", "$g_presentation_obj_item_select_3"),
        (eq, ":stage", 0),
        (position_set_x, pos1, 400),
        (position_set_y, pos1, 400),
        
        (overlay_animate_to_size, "$g_option_good", 400, pos1),
        (overlay_animate_to_size, "$g_option_evil", 400, pos1),
        (position_set_x, pos1, 550),
        (position_set_y, pos1, 550),
      
        (overlay_animate_to_size, ":id", 300, pos1),
      # (overlay_animate_to_alpha, ":id", 150, 0x7D),
        (overlay_animate_to_alpha, "$g_presentation_obj_item_select_2", 150, 0xFF),
    (else_try),
        (eq, ":id", "$g_presentation_obj_item_select_3"),
        (eq, ":stage", 1),
        (position_set_x, pos1, 450),
        (position_set_y, pos1, 450),
        (overlay_animate_to_size, ":id", 300, pos1),
       #(overlay_animate_to_alpha, ":id", 150, 0x0),
        (overlay_animate_to_alpha, "$g_presentation_obj_item_select_2", 150, 0x7D),  
    (try_end),

    ]),

  ]
),
]

from module_info import wb_compile_switch

if wb_compile_switch==1:

  #swy-- retrieve a few external parameters like the git/revision count and the build date
  #      and mode, we can build a dynamic string and then show it in the main menu; on wb.
  import os, subprocess
  import datetime
  
  tld_now = datetime.datetime.utcnow()
  tld_revision = "¿?"
  
  if 'SVNREV' in os.environ:
    tld_revision = os.environ["SVNREV"]   
  else:
    from subprocess import check_output, CalledProcessError, STDOUT

    try:
      output = check_output('git rev-list --count BASE..HEAD', stderr=STDOUT, shell=True).decode()
      tld_revision = int(output) + 1 
        
    except Exception as e:
      print("  [i] git command-line client not set in path, revision won't appear in the main menu: ")
      print(e)
      pass
    
  tld_tags = []
    
  if is_a_wb_cutscene:
    tld_tags.append("wb")
  
  if cheat_switch == 1:
    tld_tags.append("dev")

  tld_version_string = str(
    "@{!}"         + \
    " rev %s %s ^" + \
    " Built %s   ") % (tld_revision, " | ".join(tld_tags), tld_now.strftime("%Y-%m-%d %H:%M")
  )
  # --
  
  presentations+=[
    ("game_start", mesh_load_window, 0,
    [
      (ti_on_presentation_load,
       [
         (presentation_set_duration, 999999),
         (set_fixed_point_multiplier,  1000),

         #swy-- place the main menu statue in WB, manually, as there is no hardcoded mesh as in 1.011.
         (create_mesh_overlay, ":mmback", "mesh_main_menu_background"),
         (position_set_x, pos1, 0),
         (position_set_y, pos1, 0),
         (overlay_set_position, ":mmback", pos1),

         (create_mesh_overlay, ":mmstatue", "mesh_main_menu_statue"),
         (position_set_x, pos1, 0),
         (position_set_y, pos1, 0),
         (overlay_set_position, ":mmstatue", pos1),
         
         # swy-- add the version number and date in the main menu if we can retrieve at msys build time
         (create_text_overlay,  reg1, tld_version_string, tf_left_align),
         (position_set_x,       pos1,      195),
         (position_set_y,       pos1,        0),
         (overlay_set_position, reg1,     pos1),
         (overlay_set_color,    reg1, 0x292421),
       ]),
    ]),

    ("game_custom_battle_designer", mesh_load_window, 0,
    [
      (ti_on_presentation_load,
       [
         (presentation_set_duration, 0),

         #swy-- boom! direct shortcut to the vanilla quick battle menu! how cool is that?
         (jump_to_menu, "mnu_start_game_3")
       ])
    ]),

    ("game_escape", mesh_load_window, 0,
    [
      (ti_on_presentation_load,
       [
         (presentation_set_duration, 999999),
         (set_fixed_point_multiplier,  1000),

         #swy-- place the random escape menu illustrations in WB, manually, as there are no hardcoded meshes as in 1.011.
         (create_mesh_overlay, ":emback", "mesh_main_menu_background"),
         (position_set_x, pos1, 0),
         (position_set_y, pos1, 0),
         (overlay_set_position, ":emback", pos1),

         (store_random_in_range, ":random_bg_pic", mesh_pic_mb_warrior_1, mesh_pic_mb_warrior_4 + 1),

         (create_mesh_overlay, ":empic", ":random_bg_pic"),
         (position_set_x, pos1, 0),
         (position_set_y, pos1, 0),
         (overlay_set_position, ":empic", pos1),
       ])
    ]),

###Troop Presentation - rubik source #Kham implement

  ("faction_troop_trees", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (create_mesh_overlay, reg1, "mesh_town_goodcamp"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        
        ## combo_button
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 690),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        # factions
        (store_sub, ":num_factions", npc_kingdoms_end, npc_kingdoms_begin),
        
        ## page names, from bottom to top
        (try_for_range_backwards, ":page_no", 0, ":num_factions"),
          (store_add, ":faction_no", ":page_no", npc_kingdoms_begin),
          (str_store_faction_name, s0, ":faction_no"),
          (overlay_add_item, "$g_presentation_obj_1", s0),
        (try_end),
        (store_sub, ":presentation_obj_val", ":num_factions", "$g_selected_page"),
        (val_sub, ":presentation_obj_val", 1),
        (overlay_set_val, "$g_presentation_obj_1", ":presentation_obj_val"),
        
        ## back
        (create_game_button_overlay, "$g_presentation_obj_2", "@Close"),
        (position_set_x, pos1, 750),
        (position_set_y, pos1, 685),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        
        ## tips
        (create_text_overlay, reg1, "@Click the center button to toggle faction^Click the avatars to view details of them", tf_left_align),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 800),
        (overlay_set_size, reg1, pos1),
        (position_set_x, pos1, 30),
        (position_set_y, pos1, 690),
        (overlay_set_position, reg1, pos1),
        
        ## pic_arms
        (try_begin),
          (is_between, "$g_selected_page", 0, ":num_factions"), 
          (store_add, ":pic_arms", "mesh_tp_victory_gondor", "$g_selected_page"),
          (create_mesh_overlay, reg1, ":pic_arms"),
          (position_set_x, pos1, 200),
          (position_set_y, pos1, 110),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 300),
          (position_set_y, pos1, 300),
          (overlay_set_size, reg1, pos1),
        (try_end),

        # detect_total_max_tier, calculate offset_x
        (assign, ":total_max_tier", 1),
        (try_for_range, ":cur_troop", soldiers_begin, soldiers_end),
          (neg|troop_is_hero, ":cur_troop"),
          # swy: ensure that civil troops don't pass (e.g. farmers, that for some reason have upgrade paths to themselves)
          (store_troop_faction, ":cur_troop_faction", ":cur_troop"),
          (is_between,          ":cur_troop_faction", npc_kingdoms_begin, npc_kingdoms_end),
          # can upgrade
          (troop_get_upgrade_troop, ":upgrade_troop", ":cur_troop", 0),
          (gt, ":upgrade_troop", 0), 
          # page_no_for_cur_troop
          (call_script, "script_get_page_no_of_troop_tree_for_troop_on", ":cur_troop"),
          (assign, ":page_no_for_cur_troop", reg0),
          # on current page_no
          (eq, ":page_no_for_cur_troop", "$g_selected_page"),
          (assign, reg0, 1), # reg0: init max_tier to 1
          (call_script, "script_troop_tree_recursive_detect_max_tier", ":cur_troop", 1),
          (assign, ":cur_max_tier", reg0),
          (try_begin),
            (gt, ":cur_max_tier", ":total_max_tier"),
            (assign, ":total_max_tier", ":cur_max_tier"),
          (try_end),
        (try_end),
        (val_sub, ":total_max_tier", 1),
        (val_max, ":total_max_tier", 1),
        (store_div, ":offset_x", 700, ":total_max_tier"),
        (val_min, ":offset_x", 120),
        
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 15),
        (overlay_set_position, reg1, pos1),
        (position_set_x, pos1, 800),
        (position_set_y, pos1, 660),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),
        
        (assign, "$g_cur_slot_no", 0),
        (assign, reg2, 75),
        # find all root troops of selected faction
        (try_for_range, ":cur_troop", soldiers_begin, soldiers_end),
          (neg|troop_is_hero, ":cur_troop"),
          # can upgrade
          (troop_get_upgrade_troop, ":upgrade_troop", ":cur_troop", 0),
          (gt, ":upgrade_troop", 0), 
          # page_no_for_cur_troop
          (call_script, "script_get_page_no_of_troop_tree_for_troop_on", ":cur_troop"),
          (assign, ":page_no_for_cur_troop", reg0),
          # on current page_no
          (eq, ":page_no_for_cur_troop", "$g_selected_page"),
          # can't be upgraded from other troops of the same page
          (assign, ":is_root_troop", 1),
          (assign, ":end_cond", soldiers_end),
          (try_for_range, ":loop_troop", soldiers_begin, ":end_cond"),
            (neg|troop_is_hero, ":loop_troop"),
            # page_no_for_loop_troop
            (call_script, "script_get_page_no_of_troop_tree_for_troop_on", ":loop_troop"),
            (assign, ":page_no_for_loop_troop", reg0),
            # on current page_no
            (eq,  ":page_no_for_loop_troop", "$g_selected_page"),
            (troop_get_upgrade_troop, ":upgrade_troop_1", ":loop_troop", 0),
            (troop_get_upgrade_troop, ":upgrade_troop_2", ":loop_troop", 1),
            (this_or_next|eq, ":upgrade_troop_1", ":cur_troop"),
            (eq, ":upgrade_troop_2", ":cur_troop"),
            (assign, ":is_root_troop", 0),
            (assign, ":end_cond", 0), #break
          (try_end),
          (eq, ":is_root_troop", 1), # draw troop tree of cur root_troop
          (call_script, "script_troop_tree_recursive_backtracking", ":cur_troop", 50, reg2, ":offset_x"),
          (val_add, reg2, 160),
        (try_end),
        
        (set_container_overlay, -1),
        
        ## draw selected_troop: Attributes, Skills, Equipments,
        (try_begin),
          (gt, "$g_selected_troop", 0), 
          (store_mul, ":cur_troop", "$g_selected_troop", 2), #with weapons
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_game_party_window", ":cur_troop"),
          (position_set_x, pos1, 450),
          (position_set_y, pos1, 600),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 810),
          (position_set_y, pos1, 550),
          (overlay_set_position, reg1, pos1),
          
          # pos2: text size
          (position_set_x, pos2, 750),
          (position_set_y, pos2, 750),
          # pos2: title text size
          (position_set_x, pos3, 900),
          (position_set_y, pos3, 900),
          # Name
          (str_store_troop_name, s1, "$g_selected_troop"),
          (create_text_overlay, reg1, s1, tf_center_justify),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 710),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
          
          # level and HP
          (store_character_level, reg3, "$g_selected_troop"),
          (assign, ":troop_hp", 35),
          (store_skill_level, ":skill", skl_ironflesh, "$g_selected_troop"),
          (store_attribute_level, ":strength", "$g_selected_troop", ca_strength),
          (val_mul, ":skill", 2),
          (val_add, ":troop_hp", ":skill"),
          (val_add, ":troop_hp", ":strength"),
          (assign, reg4, ":troop_hp"),
          (create_text_overlay, reg1, "@Level: {reg3}^Health: {reg4}", tf_left_align),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 665),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
          
          # Attributes
          (create_text_overlay, reg1, "@Attributes", tf_left_align),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 630),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos3),
          (create_text_overlay, reg1, "@STR^AGI^INT^CHA", tf_left_align),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 570),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
          
          (try_for_range, ":attrib_id", 0, 4),
            (try_begin),
              (eq, ":attrib_id", 0),
              (store_attribute_level, reg2, "$g_selected_troop", ":attrib_id"),
              (str_store_string, s1, "@{!}{reg2}"),
            (else_try),
              (store_attribute_level, reg2, "$g_selected_troop", ":attrib_id"),
              (str_store_string, s1, "@{!}{s1}^{reg2}"),
            (try_end),
          (try_end),
          (create_text_overlay, reg1, s1, tf_right_align),
          (position_set_x, pos1, 980),
          (position_set_y, pos1, 570),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
          
          # Skills
          (create_text_overlay, reg1, "@Skills", tf_left_align),
          (position_set_x, pos1, 840),
          (position_set_y, pos1, 527),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos3),
          (create_text_overlay, reg1, "@Ironflesh^Power Strike^Power Throw^Power Draw^Shield^Athletics^Riding^Horse Archery", tf_left_align),
          (position_set_x, pos1, 840),
          (position_set_y, pos1, 415),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
          
          (try_for_range_backwards, ":skill_id", 0, 42),
            (try_begin),
              (eq, ":skill_id", "skl_ironflesh"),
              (store_skill_level, reg2, ":skill_id", "$g_selected_troop"),
              (str_store_string, s1, "@{!}{reg2}"),
            (else_try),
              (this_or_next|eq, ":skill_id", "skl_power_strike"),
              (this_or_next|eq, ":skill_id", "skl_power_throw"),
              (this_or_next|eq, ":skill_id", "skl_power_draw"),
              (this_or_next|eq, ":skill_id", "skl_shield"),
              (this_or_next|eq, ":skill_id", "skl_athletics"),
              (this_or_next|eq, ":skill_id", "skl_riding"),
              (eq, ":skill_id", "skl_horse_archery"),
              (store_skill_level, reg2, ":skill_id", "$g_selected_troop"),
              (str_store_string, s1, "@{!}{s1}^{reg2}"),
            (try_end),
          (try_end),
          (create_text_overlay, reg1, s1, tf_right_align),
          (position_set_x, pos1, 980),
          (position_set_y, pos1, 415),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
          
          # Weapon Proficiencies
          (create_text_overlay, reg1, "@Proficiencies", tf_left_align),
          (position_set_x, pos1, 840),
          (position_set_y, pos1, 370),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos3),
          (create_text_overlay, reg1, "@1H Weapons^2H Weapons^Polearms^Archery^Crossbows^Throwing", tf_left_align),
          (position_set_x, pos1, 840),
          (position_set_y, pos1, 285),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
          
          (try_for_range, ":wp_id", 0, 6),
            (try_begin),
              (eq, ":wp_id", wpt_one_handed_weapon),
              (store_proficiency_level, reg2, "$g_selected_troop", ":wp_id"),
              (str_store_string, s1, "@{!}{reg2}"),
            (else_try),
              (is_between, ":wp_id", wpt_two_handed_weapon, wpt_firearm),
              (store_proficiency_level, reg2, "$g_selected_troop", ":wp_id"),
              (str_store_string, s1, "@{!}{s1}^{reg2}"),
            (try_end),
          (try_end),
          (create_text_overlay, reg1, s1, tf_right_align),
          (position_set_x, pos1, 980),
          (position_set_y, pos1, 285),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
          
          # Equipments
          (create_text_overlay, reg1, "@Equipment", tf_left_align),
          (position_set_x, pos1, 840),
          (position_set_y, pos1, 235),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos3),
          (str_clear, s0),
          (create_text_overlay, "$g_presentation_obj_3", s0, tf_scrollable),
          (position_set_x, pos1, 840),
          (position_set_y, pos1, 30),
          (overlay_set_position, "$g_presentation_obj_3", pos1),
          (position_set_x, pos1, 138),
          (position_set_y, pos1, 202),
          (overlay_set_area_size, "$g_presentation_obj_3", pos1),
          (set_container_overlay, "$g_presentation_obj_3"),
          
          (troop_clear_inventory, "trp_temp_array_a"),
          (troop_get_inventory_capacity, ":inv_cap", "$g_selected_troop"),
          (try_for_range, ":i_slot", 0, ":inv_cap"),
            (troop_get_inventory_slot, ":item", "$g_selected_troop", ":i_slot"),
            (gt, ":item", -1),
            (troop_get_inventory_slot_modifier, ":imod", "$g_selected_troop", ":i_slot"),
            (troop_add_item,"trp_temp_array_a",":item", ":imod"),
          (try_end),
          
          (assign, ":pos_x", 0),
          (assign, ":pos_y", 280),
          (assign, ":slot_no", 10),
          (try_for_range, ":unused_height", 0, 8),
            (try_for_range, ":unused_width", 0, 3),
              (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
              (position_set_x, pos1, 320),
              (position_set_y, pos1, 320),
              (overlay_set_size, reg1, pos1),
              (position_set_x, pos1, ":pos_x"),
              (position_set_y, pos1, ":pos_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
              (create_mesh_overlay, reg1, "mesh_inv_slot"),
              (position_set_x, pos1, 400),
              (position_set_y, pos1, 400),
              (overlay_set_size, reg1, pos1),
              (position_set_x, pos1, ":pos_x"),
              (position_set_y, pos1, ":pos_y"),
              (overlay_set_position, reg1, pos1),
              (troop_get_inventory_slot, ":item_no", "trp_temp_array_a", ":slot_no"),
              (val_max, ":item_no", 0),
              (create_mesh_overlay_with_item_id, reg1, ":item_no"),
              (position_set_x, pos1, 400),
              (position_set_y, pos1, 400),
              (overlay_set_size, reg1, pos1),
              (store_add, ":item_x", ":pos_x", 20),
              (store_add, ":item_y", ":pos_y", 20),
              (position_set_x, pos1, ":item_x"),
              (position_set_y, pos1, ":item_y"),
              (overlay_set_position, reg1, pos1),
              (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
              (val_add, ":pos_x", 40),
              (val_add, ":slot_no", 1),
            (try_end),
            (assign, ":pos_x", 0),
            (val_sub, ":pos_y", 40),
          (try_end),
          (set_container_overlay, -1),
        (try_end),
      ]),
      
    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),
      
      (try_begin),
        (gt, "$g_selected_troop", 0), 
        (try_begin),
          (eq, ":enter_leave", 0),
          (try_for_range, ":slot_no", 10, 106),
            (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
            (troop_get_inventory_slot, ":item_no", "trp_temp_array_a", ":slot_no"),
            (troop_get_inventory_slot_modifier, ":cur_imod", "trp_temp_array_a", ":slot_no"),
            (try_begin),
              (gt, ":item_no", -1),
              (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
              (overlay_get_position, pos0, ":target_obj"),
              (show_item_details_with_modifier, ":item_no", ":cur_imod", pos0, 100),
              (assign, "$g_current_opened_item_details", ":slot_no"),
            (try_end),
          (try_end),
        (else_try),
          (try_for_range, ":slot_no", 10, 106),
            (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
            (try_begin),
              (eq, "$g_current_opened_item_details", ":slot_no"),
              (close_item_details),
            (try_end),
          (try_end),
        (try_end),
      (try_end),
    ]),
      
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (try_for_range, ":slot_no", 0, "$g_cur_slot_no"),
          (troop_slot_eq, "trp_stack_selection_amounts", ":slot_no", ":object"),
          (troop_get_slot, "$g_selected_troop", "trp_stack_selection_ids", ":slot_no"),
          (start_presentation, "prsnt_faction_troop_trees"),
        (try_end),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (store_sub, ":num_pages", npc_kingdoms_end, npc_kingdoms_begin),
          (store_sub, "$g_selected_page", ":num_pages", ":value"),
          (val_sub, "$g_selected_page", 1),
          (assign, "$g_selected_troop", 0), 
          (start_presentation, "prsnt_faction_troop_trees"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (assign, "$g_selected_troop", 0), 
          (assign, "$g_selected_page", 0),
          (presentation_set_duration, 0),
        (try_end),
      ]),
  ]),
### Troop Presentation End ###

   
("tld_mod_options", 0, mesh_load_window, [

    (ti_on_presentation_load, [
        (try_begin), (lt, "$savegame_version",4),(call_script, "script_update_savegame"), (try_end),
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (store_random_in_range, ":bg", "mesh_town_west_emnet", "mesh_portrait_blend_out"),
        (create_mesh_overlay, reg0, ":bg"),
        (position_set_x, pos1, -1),
        (position_set_y, pos1, -1),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1002),
        (position_set_y, pos1, 1002),
        (overlay_set_size, reg0, pos1),
        
        (create_text_overlay, reg1, "@The Last Days Mod Options", tf_center_justify, tf_double_space),
        (position_set_x, pos0, Screen_Width/2),
        (position_set_y, pos0, Screen_Title_Height),
        #(position_set_y, pos0, 600),
        (overlay_set_position, reg1, pos0),
        
          (assign, ":y_pos", Screen_Title_Height-Screen_Text_Height-Screen_Text_Height), #-Screen_Text_Height),
        #(assign, ":y_pos", 450),
    
    
        
    #War Level
        (try_begin),
            (eq, "$tld_start_war_by_day_or_level", 1),
            (create_text_overlay, reg1, "@War Starts after Day: ", tf_right_align, tf_double_space),
        (else_try),
            (create_text_overlay, reg1, "@War Starts at Level: ", tf_right_align, tf_double_space),
        (try_end),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        
        (create_combo_button_overlay, "$tld_options_overlay_0"),
        # (overlay_add_item, "$tld_options_overlay_0", "@20"), # swy: index 0, inserted first, appears last/at the bottom of the list
        # (overlay_add_item, "$tld_options_overlay_0", "@18"),
        (assign, ":level", 16),
        (try_for_range, ":unused", 0,6),
            (assign, reg0, ":level"),
            (try_begin),
                (eq, "$tld_start_war_by_day_or_level", 1),
                (val_mul, reg0, 5),
            (try_end),            
            (overlay_add_item, "$tld_options_overlay_0", "@{!}{reg0}"),
            (val_sub, ":level", 2),
        (try_end),
        # (overlay_add_item, "$tld_options_overlay_0", "@14"), # swy: index 3
        # (overlay_add_item, "$tld_options_overlay_0", "@12"),
        # (overlay_add_item, "$tld_options_overlay_0", "@10"),
        # (overlay_add_item, "$tld_options_overlay_0",  "@8"),
        # (overlay_add_item, "$tld_options_overlay_0",  "@6"), # swy: index 7, inserted last, appears first/highest on the combolist

        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", 0),
        (position_set_y, pos1, reg2),
        (position_get_x, ":x_pos", pos1),
        (val_add, ":x_pos", 130),
        (position_set_x, pos1, ":x_pos"),
        (overlay_set_position, "$tld_options_overlay_0", pos1),
        (store_sub, ":level", 16, "$tld_player_level_to_begin_war"), # swy: map the actual levels to the proper combobox indices, whose order is also reversed
        (val_div, ":level", 2),                                      #      i.e. for level 16 it does ((20 - 16) / 2) = 2, set to index 2 at initialization.
        (overlay_set_val, "$tld_options_overlay_0", ":level"),
        (val_sub, ":y_pos", Screen_Text_Height),
       
    (create_text_overlay, reg1, "@Battle Formations and AI:  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),

        (create_combo_button_overlay, "$tld_options_overlay_2"),
        (overlay_add_item, "$tld_options_overlay_2", "@Native"),
        (overlay_add_item, "$tld_options_overlay_2", "@TLD FormAI (Original)"),
        (overlay_add_item, "$tld_options_overlay_2", "@TLD New FormAI"),
        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", 0),
        (position_set_y, pos1, reg2),
        (position_get_x, ":x_pos", pos1),
        (val_add, ":x_pos", 130),
        (position_set_x, pos1, ":x_pos"),
        (overlay_set_position, "$tld_options_overlay_2", pos1),
        (overlay_set_val, "$tld_options_overlay_2", "$tld_option_formations"),
        (val_sub, ":y_pos", Screen_Text_Height),
        
        (try_begin),
            (eq, "$tld_option_formations", 2),
            (create_game_button_overlay, "$g_presentation_obj_3", "@Beta Formations Tweaks"),
            (position_set_x, pos1, (2*Screen_Width/3)-360),
            (position_set_y, pos1, Screen_Border_Width),
            (overlay_set_position, "$g_presentation_obj_3", pos1),
          (try_end),
        
    #Siege Type
    (create_text_overlay, reg1, "@Siege AI:  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        
        (create_combo_button_overlay, "$tld_options_overlay_3"),
        (overlay_add_item, "$tld_options_overlay_3", "@Basic (better performance)"),
        (overlay_add_item, "$tld_options_overlay_3", "@Advanced"),

        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", 0),
        (position_set_y, pos1, reg2),
        (position_get_x, ":x_pos", pos1),
        (val_add, ":x_pos", 130),
        (position_set_x, pos1, ":x_pos"),
        (overlay_set_position, "$tld_options_overlay_3", pos1),
        (overlay_set_val, "$tld_options_overlay_3", "$advanced_siege_ai"),
        (val_sub, ":y_pos", Screen_Text_Height),
        
    (create_text_overlay, reg1, "@Campaign difficulty:  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),

        (create_combo_button_overlay, "$tld_options_overlay_16"),
        (overlay_add_item, "$tld_options_overlay_16", "@Hard"),
        (overlay_add_item, "$tld_options_overlay_16", "@Default"),
        (overlay_add_item, "$tld_options_overlay_16", "@Easy"),
        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", 0),
        (position_set_y, pos1, reg2),
        (position_get_x, ":x_pos", pos1),
        (val_add, ":x_pos", 130),
        (position_set_x, pos1, ":x_pos"),
        (overlay_set_position, "$tld_options_overlay_16", pos1),
        (overlay_set_val, "$tld_options_overlay_16", "$tld_campaign_diffulty"),
        (val_sub, ":y_pos", Screen_Text_Height),
    
    # (create_text_overlay, reg1, "@Town NPCs Always Accessible from Menus:  ", tf_right_align, tf_double_space),
        # (position_set_y, pos0, ":y_pos"),
        # (overlay_set_position, reg1, pos0),
        # (create_check_box_overlay, "$tld_options_overlay_4", "mesh_checkbox_on", "mesh_checkbox_off"),
        # (copy_position, pos1, pos0),
        # (store_add, reg2, ":y_pos", Screen_Checkbox_Height_Adj),
        # (position_set_y, pos1, reg2),
        # (overlay_set_position, "$tld_options_overlay_4", pos1),
        # (overlay_set_val, "$tld_options_overlay_4", "$tld_option_town_menu_hidden"),
        # (val_sub, ":y_pos", Screen_Text_Height),
    
    (create_text_overlay, reg1, "@Cutscenes:  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        (create_check_box_overlay, "$tld_options_overlay_5", "mesh_checkbox_off", "mesh_checkbox_on"),
        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", Screen_Checkbox_Height_Adj),
        (position_set_y, pos1, reg2),
        (overlay_set_position, "$tld_options_overlay_5", pos1),
        (overlay_set_val, "$tld_options_overlay_5", "$tld_option_cutscenes"),
        (val_sub, ":y_pos", Screen_Text_Height),
    
    (create_text_overlay, reg1, "@Injuries for companions:  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        (create_check_box_overlay, "$tld_options_overlay_6", "mesh_checkbox_off", "mesh_checkbox_on"),
        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", Screen_Checkbox_Height_Adj),
        (position_set_y, pos1, reg2),
        (overlay_set_position, "$tld_options_overlay_6", pos1),
        (overlay_set_val, "$tld_options_overlay_6", "$tld_option_injuries"),
        (val_sub, ":y_pos", Screen_Text_Height),
    
    (create_text_overlay, reg1, "@Permanent death for lords and companions:  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        (create_check_box_overlay, "$tld_options_overlay_7", "mesh_checkbox_off", "mesh_checkbox_on"),
        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", Screen_Checkbox_Height_Adj),
        (position_set_y, pos1, reg2),
        (overlay_set_position, "$tld_options_overlay_7", pos1),
        (overlay_set_val, "$tld_options_overlay_7", "$tld_option_death_npc"),
        (val_sub, ":y_pos", Screen_Text_Height),

        (create_text_overlay, reg1, "@Permanent death for player (that is YOU!):  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        (create_check_box_overlay, "$tld_options_overlay_8", "mesh_checkbox_off", "mesh_checkbox_on"),
        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", Screen_Checkbox_Height_Adj),
        (position_set_y, pos1, reg2),
        (overlay_set_position, "$tld_options_overlay_8", pos1),
        (overlay_set_val, "$tld_options_overlay_8", "$tld_option_death_player"),
        (val_sub, ":y_pos", Screen_Text_Height),

        (create_text_overlay, reg1, "@Battle morale system:  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        (create_check_box_overlay, "$tld_options_overlay_9", "mesh_checkbox_off", "mesh_checkbox_on"),
        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", Screen_Checkbox_Height_Adj),
        (position_set_y, pos1, reg2),
        (overlay_set_position, "$tld_options_overlay_9", pos1),
        (overlay_set_val, "$tld_options_overlay_9", "$tld_option_morale"),
        (val_sub, ":y_pos", Screen_Text_Height),

        (create_text_overlay, reg1, "@Animal ambushes:  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        (create_check_box_overlay, "$tld_options_overlay_10", "mesh_checkbox_off", "mesh_checkbox_on"),
        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", Screen_Checkbox_Height_Adj),
        (position_set_y, pos1, reg2),
        (overlay_set_position, "$tld_options_overlay_10", pos1),
        (overlay_set_val, "$tld_options_overlay_10", "$tld_option_animal_ambushes"),
        (val_sub, ":y_pos", Screen_Text_Height),

        #Player speed
        (create_text_overlay, reg1, "@Player speed buff in towns:  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        
        #(create_check_box_overlay, "$form_options_overlay_13", "mesh_checkbox_off", "mesh_checkbox_on"),
        (create_combo_button_overlay, "$tld_options_overlay_14"),
        (assign, reg0, 150),
        (try_for_range, ":unused", 0,6),           
            (overlay_add_item, "$tld_options_overlay_14", "@{!}{reg0}%"), #marked as non-translateable
            (val_sub, reg0, 10),
        (try_end),

        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", 0),
        (position_set_y, pos1, reg2),
        (position_get_x, ":x_pos", pos1),
        (val_add, ":x_pos", 130),
        (position_set_x, pos1, ":x_pos"),
        (overlay_set_position, "$tld_options_overlay_14", pos1),
        (store_sub, reg0, 150, "$tld_town_player_speed_multi"), 
        (val_div, reg0, 10),
        (overlay_set_val, "$tld_options_overlay_14", reg0),
        (val_sub, ":y_pos", Screen_Text_Height),   

        #Horse KO Message
        (create_text_overlay, reg1, "@Fallen rider damage messages:  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),

        (create_combo_button_overlay, "$tld_options_overlay_11"),
        (overlay_add_item, "$tld_options_overlay_11", "@No Messages"),
        (overlay_add_item, "$tld_options_overlay_11", "@Player damage only"),
        (overlay_add_item, "$tld_options_overlay_11", "@All Messages"),

        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", 0),
        (position_set_y, pos1, reg2),
        (position_get_x, ":x_pos", pos1),
        (val_add, ":x_pos", 130),
        (position_set_x, pos1, ":x_pos"),
        (overlay_set_position, "$tld_options_overlay_11", pos1),
        (overlay_set_val, "$tld_options_overlay_11", "$show_mount_ko_message"),
        (val_sub, ":y_pos", Screen_Text_Height),

        #Show Troop Name in Battles #InVain: Disabled, caused presentation overflow, replaced by native troop banners
        # (create_text_overlay, reg1, "@Troop Identifier in Battles (Press Y during battle to show/hide):", tf_right_align, tf_double_space),
        # (position_set_y, pos0, ":y_pos"),
        # (overlay_set_position, reg1, pos0),

        # (create_combo_button_overlay, "$tld_options_overlay_14"),
        # (overlay_add_item, "$tld_options_overlay_14", "@Disable"),
        # (overlay_add_item, "$tld_options_overlay_14", "@Troop Names"),
        # (overlay_add_item, "$tld_options_overlay_14", "@Simple: Faction Colors"),
        # (overlay_add_item, "$tld_options_overlay_14", "@Simple: Black - Enemy / White - Allies"),

        # (copy_position, pos1, pos0),
        # (store_add, reg2, ":y_pos", 0),
        # (position_set_y, pos1, reg2),
        # (position_get_x, ":x_pos", pos1),
        # (val_add, ":x_pos", 130),
        # (position_set_x, pos1, ":x_pos"),
        # (overlay_set_position, "$tld_options_overlay_14", pos1),
        # (overlay_set_val, "$tld_options_overlay_14", "$g_display_agent_labels"),
        # (val_sub, ":y_pos", Screen_Text_Height),

        #Pref Camera
        (create_text_overlay, reg1, "@Preferred Camera Mode:  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        
        #(create_check_box_overlay, "$form_options_overlay_13", "mesh_checkbox_off", "mesh_checkbox_on"),
        (create_combo_button_overlay, "$tld_options_overlay_12"),
        (overlay_add_item, "$tld_options_overlay_12", "@Default Camera"),
        (overlay_add_item, "$tld_options_overlay_12", "@Free-Mode Custom Camera"),
        (overlay_add_item, "$tld_options_overlay_12", "@Fixed Over-The-Shoulder Camera"),

        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", 0),
        (position_set_y, pos1, reg2),
        (position_get_x, ":x_pos", pos1),
        (val_add, ":x_pos", 130),
        (position_set_x, pos1, ":x_pos"),
        (overlay_set_position, "$tld_options_overlay_12", pos1),
        (overlay_set_val, "$tld_options_overlay_12", "$pref_cam_mode"),
        (val_sub, ":y_pos", Screen_Text_Height),

        # #Disallow Defensive
        # (create_text_overlay, reg1, "@Prevent AI from taking defensive:  ", tf_right_align, tf_double_space),
        # (position_set_y, pos0, ":y_pos"),
        # (overlay_set_position, reg1, pos0),
        # (create_check_box_overlay, "$tld_options_overlay_15", "mesh_checkbox_off", "mesh_checkbox_on"),
        # (copy_position, pos1, pos0),
        # (store_add, reg2, ":y_pos", Screen_Checkbox_Height_Adj),
        # (position_set_y, pos1, reg2),
        # (overlay_set_position, "$tld_options_overlay_15", pos1),
        # (overlay_set_val, "$tld_options_overlay_15", "$FormAI_AI_no_defense"),
        # (val_sub, ":y_pos", Screen_Text_Height),

        #Brighter Nights
        (create_text_overlay, reg1, "@Brighter Nights:  ", tf_right_align, tf_double_space),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        (create_check_box_overlay, "$tld_options_overlay_13", "mesh_checkbox_off", "mesh_checkbox_on"),
        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", Screen_Checkbox_Height_Adj),
        (position_set_y, pos1, reg2),
        (overlay_set_position, "$tld_options_overlay_13", pos1),
        (overlay_set_val, "$tld_options_overlay_13", "$bright_nights"),
        (val_sub, ":y_pos", Screen_Text_Height), 
        
        # This is for Done button
        (assign, "$tld_options_overlay_exit", 0), # forced initialization
        (create_game_button_overlay, "$tld_options_overlay_exit", "@Done"),
        (position_set_x, pos1, 2*Screen_Width/3),
        (position_set_y, pos1, Screen_Border_Width),
        (overlay_set_position, "$tld_options_overlay_exit", pos1),

        # Tweaks button
        (create_game_button_overlay, "$g_presentation_obj_2", "@Gameplay Tweaks"),
        (position_set_x, pos1, (2*Screen_Width/3)-180),
        (position_set_y, pos1, Screen_Border_Width),
        (overlay_set_position, "$g_presentation_obj_2", pos1),

        #formation tweaks
        (create_game_button_overlay, "$g_presentation_obj_3", "@Beta Formations Tweaks"),
        (position_set_x, pos1, (2*Screen_Width/3)-360),
        (position_set_y, pos1, Screen_Border_Width),
        (overlay_set_position, "$g_presentation_obj_3", pos1),
    ]),
    
    (ti_on_presentation_run, [
        (try_begin),
          (key_clicked, key_escape),
          (presentation_set_duration, 0),
        (try_end),
    ]),
    
      (ti_on_presentation_event_state_change, [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        # (assign, reg76, ":object"),
        # (display_message, "@check object {reg76}"),

        (try_begin),
          (eq, ":object", "$tld_options_overlay_1"),
          (assign, "$tld_option_crossdressing", ":value"),
        (else_try),
          (eq, ":object", "$tld_options_overlay_2"),
          (assign, "$tld_option_formations", ":value"),
          (display_message, "@Set to Native if you encounter any types of AI problems during battle."),
         #(assign, reg65, "$tld_option_formations",),
         #(display_message, "@Formations - {reg65}"),
          # (try_begin),
            # (eq, ":value", 2),
            # (create_game_button_overlay, "$g_presentation_obj_3", "@Beta Formations Tweaks"),
            # (position_set_x, pos1, (2*Screen_Width/3)-360),
            # (position_set_y, pos1, Screen_Border_Width),
            # (overlay_set_position, "$g_presentation_obj_3", pos1),
          # (else_try),
            # (start_presentation, "prsnt_tld_mod_options"),
          # (try_end),
        (else_try),
          (eq, ":object", "$tld_options_overlay_3"),
          (assign, "$advanced_siege_ai", ":value"),
        (else_try),
          (eq, ":object", "$tld_options_overlay_4"),
          (assign, "$tld_option_town_menu_hidden", ":value"),
        (else_try),
          (eq, ":object", "$tld_options_overlay_5"),
          (assign, "$tld_option_cutscenes", ":value"),
          (display_message, "@Disable cutscenes if you encounter any crashes at the start of the war."),
        (else_try),
          (eq, ":object", "$tld_options_overlay_6"),
          (assign, "$tld_option_injuries", ":value"),
        (else_try),
          (eq, ":object", "$tld_options_overlay_7"),
          (assign, "$tld_option_death_npc", ":value"),
        (else_try),
          (eq, ":object", "$tld_options_overlay_8"),
          (assign, "$tld_option_death_player", ":value"),
        (else_try),
          (eq, ":object", "$tld_options_overlay_9"),
          (assign, "$tld_option_morale", ":value"),
        (else_try),
          (eq, ":object", "$tld_options_overlay_10"),
          (assign, "$tld_option_animal_ambushes", ":value"),
        (else_try),
          (eq, ":object", "$tld_options_overlay_13"),
          (assign, "$bright_nights", ":value"),
        (else_try), #disabled
          (eq, ":object", "$tld_options_overlay_15"),
          (assign, "$FormAI_AI_no_defense", ":value"),
        (else_try),
          (eq, ":object", "$tld_options_overlay_16"),
          (assign, "$tld_campaign_diffulty", ":value"),
          (display_message, "@Campaign Difficulty affects abundance of volunteers, lord party size, and strength income for allied factions."),
        (else_try),
          (eq, ":object", "$tld_options_overlay_0"),   
          (val_mul, ":value", 2),                # swy: map the combobox indices to actual levels, whose order is also reversed
          (store_sub, ":level_2", 16, ":value"), #      i.e. player selects element with index 3; we do (20 - (3 * 2)) = lvl 14.
          (assign, "$tld_player_level_to_begin_war", ":level_2"),
          (assign, reg0, "$tld_player_level_to_begin_war"),
          #(display_message, "@War Will Start at Level {reg0}", 0x289128),
          (ge, ":level_2", 12),
          (display_message, "@Be aware that many quests and campaign mechanics scale with player level. Increasing this setting will give you more time to prepare, but will make the war unfold quicker."),
        (else_try),
          (eq, ":object", "$tld_options_overlay_14"),   
          (val_mul, ":value", 10), 
          (store_sub, ":value", 150, ":value"),
          (assign, "$tld_town_player_speed_multi", ":value"),
          (assign, reg0, "$tld_town_player_speed_multi"),
          #(display_message, "@Player speed {reg0}", 0x289128),     
        (else_try),
          (eq, ":object", "$tld_options_overlay_11"),
          (assign, "$show_mount_ko_message", ":value"),
        # (else_try), #InVain: Disabled
          # (eq, ":object", "$tld_options_overlay_14"),
          # (assign, "$g_display_agent_labels", ":value"),
          # (try_begin),
            # (ge, ":value", 1),
            # (assign, "$show_hide_labels", 1),
          # (try_end),
        (else_try),
          (eq, ":object", "$tld_options_overlay_12",),
          (assign, "$pref_cam_mode", ":value"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (jump_to_menu, "mnu_camp_tweaks"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_3"),
          (try_begin),
            (eq, "$tld_option_formations", 2),
            (start_presentation, "prsnt_formation_mod_option"),
          (else_try),
            (display_message, "@Requires TLD NewFormAI"),
          (try_end),
        (else_try),
          (eq, ":object", "$tld_options_overlay_exit"),
          (try_begin),
            (eq, "$tld_game_options", 1),
            (jump_to_menu, "mnu_camp"),
          (else_try),
            (jump_to_menu, "mnu_start_phase_2"),
          (try_end),
        (try_end),
      ]),
    ]),


# Kham - VC Troop Tree Presentations
#chief presentacion game_troop_tree moto
#INPUT: reg0 selected troop
("game_troop_tree", 0, 0, [
    (ti_on_presentation_load, [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        (assign, ":troop", reg0),
        
        ###mesh de fondo MOTO must do it this way or won't allow party screen to reappear
        (create_mesh_overlay, reg0, "mesh_town_goodcamp"),
        (position_set_x, pos1, -1),
        (position_set_y, pos1, -1),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1002),
        (position_set_y, pos1, 1002),
        (overlay_set_size, reg0, pos1),
        #Message first part
        
        #screen top
        (create_text_overlay, reg1, "@Troop Tree", tf_center_justify),
        (position_set_x, pos1, Screen_Width/2),
        (position_set_y, pos1, Screen_Title_Height),
        (overlay_set_position, reg1, pos1),
        
        #write the trees
        (call_script, "script_troop_tree_precurse", ":troop", 1, 1),
        (store_div, "$troop_tree_pic_width", Troop_Tree_Area_Width, reg0),
        (store_div, "$troop_tree_pic_height", Troop_Tree_Area_Height, reg1),
        
        (store_div, ":x_pos", "$troop_tree_pic_width", 2),
        (val_add, ":x_pos", Screen_Border_Width),
        (store_mul, ":y_pos", "$troop_tree_pic_height", -1),
        (val_add, ":y_pos", Screen_Title_Height-2*Screen_Text_Height),
        (call_script, "script_troop_tree_recurse", ":troop", ":x_pos", ":y_pos"),
        
        #screen bottom
        (create_game_button_overlay, "$presentation_leave_button", "@Done", tf_center_justify),
        (position_set_x, pos1, Screen_Width/2),
        (position_set_y, pos1, Screen_Border_Width),
        (overlay_set_position, "$presentation_leave_button", pos1),
    ]),
    
    (ti_on_presentation_run, [
        (try_begin),
          (this_or_next|key_clicked, key_escape),
          (key_clicked, key_xbox_start),
          (presentation_set_duration, 0),
        (try_end),
    ]),
    
    (ti_on_presentation_event_state_change, [
        (store_trigger_param_1, ":object"),
        (eq, ":object", "$presentation_leave_button"),
        (presentation_set_duration, 0),
    ]),
]), #end troop tree

#chief presentacion troop_tree moto
("troop_tree", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (create_mesh_overlay, reg1, "mesh_town_goodcamp"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg1, pos1),
        (assign, "$troop_tree_counter", -1),
        
        ## combo_button
        (create_combo_button_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 690),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        # factions
        (store_sub, ":num_factions", npc_kingdoms_end, npc_kingdoms_begin),
        
        ## page names, from bottom to top
        (try_for_range_backwards, ":page_no", 0, ":num_factions"),
          (store_add, ":faction_no", ":page_no", npc_kingdoms_begin),
          (str_store_faction_name, s0, ":faction_no"),
          (overlay_add_item, "$g_presentation_obj_1", s0),
        (try_end),
        (store_sub, ":presentation_obj_val", ":num_factions", "$g_selected_page"),
        (val_sub, ":presentation_obj_val", 1),
        (overlay_set_val, "$g_presentation_obj_1", ":presentation_obj_val"),
        
        ## pic_arms
        (try_begin),
          (is_between, "$g_selected_page", 0, ":num_factions"), 
          (store_add, ":pic_arms", "mesh_tp_victory_gondor", "$g_selected_page"),
          (create_mesh_overlay, reg1, ":pic_arms"),
          (position_set_x, pos1, 200),
          (position_set_y, pos1, 110),
          (overlay_set_position, reg1, pos1),
          (position_set_x, pos1, 300),
          (position_set_y, pos1, 300),
          (overlay_set_size, reg1, pos1),
        (try_end),

        # detect_total_max_tier, calculate offset_x
        (assign, ":total_max_tier", 1),
        (try_for_range, ":cur_troop", soldiers_begin, soldiers_end),
          (neg|troop_is_hero, ":cur_troop"),
          # swy: ensure that civil troops don't pass (e.g. farmers, that for some reason have upgrade paths to themselves)
          (store_troop_faction, ":cur_troop_faction", ":cur_troop"),
          (is_between,          ":cur_troop_faction", npc_kingdoms_begin, npc_kingdoms_end),
          # can upgrade
          (troop_get_upgrade_troop, ":upgrade_troop", ":cur_troop", 0),
          (gt, ":upgrade_troop", 0), 
          # page_no_for_cur_troop
          (call_script, "script_get_page_no_of_troop_tree_for_troop_on", ":cur_troop"),
          (assign, ":page_no_for_cur_troop", reg0),
          # on current page_no
          (eq, ":page_no_for_cur_troop", "$g_selected_page"),
          (assign, reg0, 1), # reg0: init max_tier to 1
          (call_script, "script_troop_tree_recursive_detect_max_tier", ":cur_troop", 1),
          (assign, ":cur_max_tier", reg0),
          (try_begin),
            (gt, ":cur_max_tier", ":total_max_tier"),
            (assign, ":total_max_tier", ":cur_max_tier"),
          (try_end),
        (try_end),
        (val_sub, ":total_max_tier", 1),
        (val_max, ":total_max_tier", 1),
        (store_div, ":offset_x", 700, ":total_max_tier"),
        (val_min, ":offset_x", 120),
        
        (str_clear, s0),
        (create_text_overlay, reg1, s0, tf_scrollable),
        (position_set_x, pos1, 15),
        (position_set_y, pos1, 15),
        (overlay_set_position, reg1, pos1),

        #For the Whole screen
        (position_set_x, pos1, 1002),
        (position_set_y, pos1, 660),
        (overlay_set_area_size, reg1, pos1),
        (set_container_overlay, reg1),
        
        (assign, "$g_cur_slot_no", 0),
        (assign, reg2, 75),
        # find all root troops of selected faction
        (try_for_range, ":cur_troop", soldiers_begin, soldiers_end),
          (neg|troop_is_hero, ":cur_troop"),
          # can upgrade
          (troop_get_upgrade_troop, ":upgrade_troop", ":cur_troop", 0),
          (gt, ":upgrade_troop", 0), 
          # page_no_for_cur_troop
          (call_script, "script_get_page_no_of_troop_tree_for_troop_on", ":cur_troop"),
          (assign, ":page_no_for_cur_troop", reg0),
          # on current page_no
          (eq, ":page_no_for_cur_troop", "$g_selected_page"),
          # can't be upgraded from other troops of the same page
          (assign, ":is_root_troop", 1),
          (assign, ":end_cond", soldiers_end),
          (try_for_range, ":loop_troop", soldiers_begin, ":end_cond"),
            (neg|troop_is_hero, ":loop_troop"),
            # page_no_for_loop_troop
            (call_script, "script_get_page_no_of_troop_tree_for_troop_on", ":loop_troop"),
            (assign, ":page_no_for_loop_troop", reg0),
            # on current page_no
            (eq,  ":page_no_for_loop_troop", "$g_selected_page"),
            (troop_get_upgrade_troop, ":upgrade_troop_1", ":loop_troop", 0),
            (troop_get_upgrade_troop, ":upgrade_troop_2", ":loop_troop", 1),
            (this_or_next|eq, ":upgrade_troop_1", ":cur_troop"),
            (eq, ":upgrade_troop_2", ":cur_troop"),
            (assign, ":is_root_troop", 0),
            (assign, ":end_cond", 0), #break
          (try_end),
          (eq, ":is_root_troop", 1), # draw troop tree of cur root_troop
          (call_script, "script_troop_tree_recursive_backtracking", ":cur_troop", 50, reg2, ":offset_x"),
          (val_add, reg2, 160),
        (try_end),
        
        (set_container_overlay, -1),
        
        ## draw selected_troop: Attributes, Skills, Equipments,
        (try_begin),
          (gt, "$g_selected_troop", 0), 
          (store_mul, ":cur_troop", "$g_selected_troop", 2), #with weapons
          (create_image_button_overlay_with_tableau_material, reg1, -1, "tableau_game_party_window", ":cur_troop"),
          (position_set_x, pos1, 450),
          (position_set_y, pos1, 600),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, 810),
          (position_set_y, pos1, 550),
          (overlay_set_position, reg1, pos1),
          
          # pos2: text size
          (position_set_x, pos2, 750),
          (position_set_y, pos2, 750),
          # pos2: title text size
          (position_set_x, pos3, 900),
          (position_set_y, pos3, 900),
          # Name
          (str_store_troop_name, s1, "$g_selected_troop"),
          (create_text_overlay, reg1, s1, tf_center_justify),
          (position_set_x, pos1, 900),
          (position_set_y, pos1, 710),
          (overlay_set_position, reg1, pos1),
          (overlay_set_size, reg1, pos2),
        (try_end),
          
        
        #screen bottom
        (create_game_button_overlay, "$g_presentation_obj_2", "@Done", tf_center_justify),
        (position_set_x, pos1, Screen_Width/2),
        (position_set_y, pos1, Screen_Border_Width),
        (overlay_set_position, "$g_presentation_obj_2", pos1),
        
        # Alert that click opens detail
        (create_text_overlay, reg1, "@(Click on a unit for details)", tf_right_align),
        (position_set_x, 1, 950),(position_set_y, 1, 25),
        (overlay_set_position, reg1, 1),
        (position_set_x, pos1, 1750/2),(position_set_y, pos1, 1750/2),
        (overlay_set_size, reg1, pos1),
        (overlay_set_color, reg1, 0x000000),
        
    ]),
    
    (ti_on_presentation_run, [
        (try_begin),
          (this_or_next|key_clicked, key_escape),
          (key_clicked, key_xbox_start),
          (presentation_set_duration, 0),
        (try_end),
    ]),
    
(ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (try_for_range, ":slot_no", 0, "$g_cur_slot_no"),
          (troop_slot_eq, "trp_stack_selection_amounts", ":slot_no", ":object"),
          (troop_get_slot, "$g_selected_troop", "trp_stack_selection_ids", ":slot_no"),
          (start_presentation, "prsnt_troop_detail"),
        (try_end),
        
        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (store_sub, ":num_pages", npc_kingdoms_end, npc_kingdoms_begin),
          (store_sub, "$g_selected_page", ":num_pages", ":value"),
          (val_sub, "$g_selected_page", 1),
          (assign, "$g_selected_troop", 0), 
          (start_presentation, "prsnt_troop_tree"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_2"),
          (assign, "$g_selected_troop", 0), 
          (assign, "$g_selected_page", 0),
          (presentation_set_duration, 0),
        (try_end),
      ]),
    
    (ti_on_presentation_mouse_press, [
        (store_trigger_param_1, ":object_id"),
        #(store_trigger_param_2, ":obj_value"),
        (try_begin),
          
          (assign, ":end_loop", 0),
          (store_add, ":end_loop", "$troop_tree_counter", 1),
          
          (try_for_range, ":slot_no", 0, ":end_loop"),
            (troop_get_slot, ":unused", "trp_temp_array_a", ":slot_no"),
            (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object_id"),
            (troop_get_slot, ":troop_id", "trp_temp_array_b", ":slot_no"),
            (assign, "$temp_troop", ":troop_id"),
            (assign, ":end_loop", 0),
            (assign, "$temp", 1),
            (start_presentation, "prsnt_troop_detail"),
          (try_end),
        (try_end),
    ]),
]), #end troop tree
#moto troop tree chief acaba


# Presentation prsnt_troop_detail
# Description: from the troop tree you can click on any troop
#              to see its details: stats, inventory, etc
("troop_detail", 0, 0, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (assign, ":draw_troop", "$temp_troop"),
        
        #pic
        (create_mesh_overlay, reg0, "mesh_pic_units_details"),
        (position_set_x, pos1, -1),
        (position_set_y, pos1, -1),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1002),
        (position_set_y, pos1, 1002),
        (overlay_set_size, reg0, pos1),
        
        
        (call_script, "script_troop_detail_layout"),
        (call_script, "script_troop_detail_draw_troop", ":draw_troop"),
        (call_script, "script_troop_detail_draw_weapons", ":draw_troop"),
        
        (try_begin),
          (eq, "$temp", 1),# ---- Stats ----
          (call_script, "script_troop_detail_stats", ":draw_troop"),
          
        (else_try),# ---- Inventory of troop ----
          (eq, "$temp", 2),
          (call_script, "script_troop_detail_inventory"),
        (try_end),
        
    ]),
    
    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (try_begin),# done button
          (eq, ":object", "$g_presentation_leave_button"),
          (start_presentation, "prsnt_troop_tree"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_1"),
          (call_script, "script_troop_detail_change_screen", "$temp_troop"),
          
        (else_try),
          (eq, ":object", "$checkbox_show_item_details"),
          (assign, "$checkbox_show_item_details_val", ":value"),
        (try_end),
        
    ]),
    
    (ti_on_presentation_mouse_enter_leave,[
        (call_script, "script_troop_detail_inventory_tooltip"),
    ]),
    
    (ti_on_presentation_mouse_press,
      [
        (eq, "$temp", 2),
        (store_trigger_param_1, ":object_id"),
        (call_script, "script_troop_detail_update_dummy", "$temp_troop", ":object_id"),
    ]),
  ]
),

("display_agent_labels", prsntf_read_only|prsntf_manual_end_only, 0, # display player name and optionally faction name above the heads of nearby agents
   [(ti_on_presentation_load,
     [
     (eq, 0,1), #InVain: Disabled
     (assign, "$g_presentation_agent_labels_overlay_count", 0),
      (assign, "$g_presentation_agent_labels_update_time", 0),
      (presentation_set_duration, 999999),
      ]),
    (ti_on_presentation_run,
     [
     (eq, 0,1), #InVain: Disabled     
     (store_trigger_param_1, ":current_time"),
      (set_fixed_point_multiplier, 1000),
      (try_begin),
        (this_or_next|eq, "$g_display_agent_labels", 0),
        (this_or_next|eq, "$tld_camera_on", 1),
        (le, "$show_hide_labels", 0),
        (presentation_set_duration, 0),
      (else_try),
        (gt, ":current_time", "$g_presentation_agent_labels_update_time"),
        (store_add, "$g_presentation_agent_labels_update_time", ":current_time", 20), # check and update all visible labels every 20 milliseconds
        (get_player_agent_no, ":my_player"),
        (gt, ":my_player", -1),
        (str_clear, s0),
        (mission_cam_get_position, pos1),
        (assign, ":overlay_id", 0),
        (try_for_agents, ":agent_id"),
          (agent_is_human, ":agent_id"),
          (agent_is_active, ":agent_id"),
          (agent_is_alive, ":agent_id"),
          (gt, ":agent_id", -1),
          (neq, ":agent_id", ":my_player"),
          (agent_get_position, pos2, ":agent_id"),
          (position_move_z, pos2, 160),
          (agent_get_horse, ":horse", ":agent_id"),
          (try_begin),
            (ge, ":horse", 0),
            (position_move_z, pos2, 80),
          (try_end),
          (get_sq_distance_between_positions, ":sq_distance", pos1, pos2),
          (le, ":sq_distance", sq(max_distance_to_see_labels)),
          (copy_position, pos3, pos2),
          (position_move_z, pos3, 50),
          (position_get_screen_projection, pos4, pos3), # get the 2D position on screen 50 above the 3D position of the agent
          (position_get_x, ":x_pos", pos4),
          (position_get_y, ":y_pos", pos4),
          (is_between, ":x_pos", -100, 1100), # check if inside the view boundaries or nearly so
          (is_between, ":y_pos", -100, 850),
          (position_has_line_of_sight_to_position, pos1, pos2),
          (try_begin), # create a new overlay if needed
            (ge, ":overlay_id", "$g_presentation_agent_labels_overlay_count"),
            (create_text_overlay, reg0, s0, tf_center_justify|tf_with_outline),
            (val_add, "$g_presentation_agent_labels_overlay_count", 1),
          (try_end),
          (try_begin),
            (try_begin),
              (agent_is_active, ":agent_id"),
              (agent_get_troop_id, ":troop_id", ":agent_id"),
              (agent_get_party_id, ":agent_party", ":agent_id"),
              (str_store_troop_name, s2, ":troop_id"),
              (store_troop_faction, ":troop_faction", ":troop_id"),
              (try_begin),
                (ge, ":agent_party", 0),
                (store_faction_of_party, ":troop_faction", ":agent_party"),
                (eq, ":agent_party", "p_main_party"),
                (assign, ":troop_faction", "$players_kingdom"),
              (try_end),
              (try_begin),
                (eq, "$g_display_agent_labels", 1),
                (str_store_string, s2, "@{!}{s2}"),
                (faction_get_color, ":color", ":troop_faction"),
              (else_try),
                (eq, "$g_display_agent_labels", 2),
                (str_store_string, s2, "@{!}*"),
                (faction_get_color, ":color", ":troop_faction"),
              (else_try),
                (try_begin),
                  (neg|agent_is_ally, ":agent_id"),
                  (agent_is_alarmed, ":agent_id"), #bugfix for centers
                  (assign, ":color", 0x000000), #black
                (else_try),
                  (assign, ":color", 0xFFFFFF), #White instead of green - colourblind friendly
                (try_end),
                (str_store_string, s2, "@{!}*"),
              (try_end),
            (try_end),
            (overlay_set_text, ":overlay_id", s2),
            (overlay_set_color, ":overlay_id", ":color"),
            (overlay_set_position, ":overlay_id", pos4),
            (copy_position, pos5, pos3),
            (position_move_z, pos5, 200), # move the 3D position up by 200 and check the 2D distance moved, to get the appropriate text size (reducing with distance)
            (position_get_screen_projection, pos6, pos5),
            (position_get_y, ":y_pos_up", pos6),
            (store_sub, ":height", ":y_pos_up", ":y_pos"),
            (val_mul, ":height", 5),
            (val_min, ":height", 2000),
            (position_set_y, pos6, ":height"),
            (position_set_x, pos6, ":height"),
            (overlay_set_size, ":overlay_id", pos6),
            (assign, ":overlay_alpha", 0xDC),
            (val_div, ":sq_distance", 2000),
            (val_max, ":sq_distance", 1),
            (val_div, ":overlay_alpha", ":sq_distance"),
            (overlay_set_alpha, ":overlay_id", ":overlay_alpha"),
            (overlay_set_display, ":overlay_id", 1),
          (try_end),
          (val_add, ":overlay_id", 1),
        (try_end),
        (try_begin),
          (store_sub, ":redraw_threshold", "$g_presentation_agent_labels_overlay_count", 10),
          (lt, ":overlay_id", ":redraw_threshold"),
          (presentation_set_duration, 0),
          (start_presentation, "prsnt_display_agent_labels"),
        (else_try),
          (try_for_range, ":unused_overlay_id", ":overlay_id", "$g_presentation_agent_labels_overlay_count"),
            (overlay_set_display, ":unused_overlay_id", 0),
          (try_end),
        (try_end),
      (try_end),
      ]),
    ]),

 ("all_items", 0, mesh_load_window, [
    (ti_on_presentation_load,
      [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),

        (create_combo_label_overlay, "$g_presentation_obj_1"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 675),
        (overlay_set_position, "$g_presentation_obj_1", pos1),
        (overlay_add_item, "$g_presentation_obj_1", "@Weapons"),
        (overlay_add_item, "$g_presentation_obj_1", "@Armors"),
        (overlay_add_item, "$g_presentation_obj_1", "@Others"),
        (overlay_set_val, "$g_presentation_obj_1", "$temp"),

        ## back
        (create_game_button_overlay, "$g_presentation_obj_5", "@Done"),
        (position_set_x, pos1, 900),
        (position_set_y, pos1, 25),
        (overlay_set_position, "$g_presentation_obj_5", pos1),

        (str_clear, s0),
        (create_text_overlay, "$g_presentation_obj_6", s0, tf_scrollable),
        (position_set_x, pos1, 50),
        (position_set_y, pos1, 100),
        (overlay_set_position, "$g_presentation_obj_6", pos1),
        (position_set_x, pos1, 890),
        (position_set_y, pos1, 560),
        (overlay_set_area_size, "$g_presentation_obj_6", pos1),
        (set_container_overlay, "$g_presentation_obj_6"),

        (assign, ":num_items", len(items)),
        (assign, "$temp_2", 0),
        ## types
        (try_begin),
          (eq, "$temp", 0), # weapons
          (try_for_range, ":item_no", 0, ":num_items"),
            (item_get_type, ":type", ":item_no"),
            (this_or_next|is_between, ":type", itp_type_one_handed_wpn, itp_type_goods),
            (is_between, ":type", itp_type_pistol, itp_type_animal),
            (val_add, "$temp_2", 1),
          (try_end),
        (else_try),
          (eq, "$temp", 1), # armors
          (try_for_range, ":item_no", 0, ":num_items"),
            (item_get_type, ":type", ":item_no"),
            (is_between, ":type", itp_type_head_armor, itp_type_pistol),
            (val_add, "$temp_2", 1),
          (try_end),
        (else_try),
          (eq, "$temp", 2), # others
          (try_for_range, ":item_no", 0, ":num_items"),
            (item_get_type, ":type", ":item_no"),
            (this_or_next|eq, ":type", itp_type_horse),
            (this_or_next|eq, ":type", itp_type_goods),
            (this_or_next|eq, ":type", itp_type_animal),
            (eq, ":type", itp_type_book),
            (val_add, "$temp_2", 1),
          (try_end),
        (try_end),

        (store_div, ":height", "$temp_2", 11),
        (store_mod, ":offset", "$temp_2", 11),
        (val_min, ":offset", 1),
        (val_add, ":height", ":offset"),
        (store_mul, ":pos_y", ":height", 80),
        (val_sub, ":pos_y", 80),
        (assign, ":pos_x", 0),
        (assign, ":slot_no", 0),
        (try_for_range, ":item_no", 0, ":num_items"),
          (item_get_type, ":type", ":item_no"),
          (try_begin),
            (eq, "$temp", 0), # weapons
            (try_begin),
              (this_or_next|is_between, ":type", itp_type_one_handed_wpn, itp_type_goods),
              (is_between, ":type", itp_type_pistol, itp_type_animal),
              (assign, ":continue", 1),
            (else_try),
              (assign, ":continue", 0),
            (try_end),
          (else_try),
            (eq, "$temp", 1), # armors
            (try_begin),
              (is_between, ":type", itp_type_head_armor, itp_type_pistol),
              (assign, ":continue", 1),
            (else_try),
              (assign, ":continue", 0),
            (try_end),
          (else_try),
            (eq, "$temp", 2), # others
            (try_begin),
              (this_or_next|eq, ":type", itp_type_horse),
              (this_or_next|eq, ":type", itp_type_goods),
              (this_or_next|eq, ":type", itp_type_animal),
              (eq, ":type", itp_type_book),
              (assign, ":continue", 1),
            (else_try),
              (assign, ":continue", 0),
            (try_end),
          (try_end),
          (eq, ":continue", 1),
          ## item slot
          (create_mesh_overlay, reg1, "mesh_inv_slot"),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (create_mesh_overlay, reg1, "mesh_mp_inventory_choose"),
          (position_set_x, pos1, 640),
          (position_set_y, pos1, 640),
          (overlay_set_size, reg1, pos1),
          (position_set_x, pos1, ":pos_x"),
          (position_set_y, pos1, ":pos_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_a", ":slot_no", reg1),
          ## item
          (create_mesh_overlay_with_item_id, reg1, ":item_no"),
          (position_set_x, pos1, 800),
          (position_set_y, pos1, 800),
          (overlay_set_size, reg1, pos1),
          (store_add, ":item_x", ":pos_x", 40),
          (store_add, ":item_y", ":pos_y", 40),
          (position_set_x, pos1, ":item_x"),
          (position_set_y, pos1, ":item_y"),
          (overlay_set_position, reg1, pos1),
          (troop_set_slot, "trp_temp_array_b", ":slot_no", reg1),
          (troop_set_slot, "trp_temp_array_c", ":slot_no", ":item_no"),
          (val_add, ":pos_x", 80),
          (val_add, ":slot_no", 1),
          (try_begin),
            (ge, ":pos_x", 880),
            (assign, ":pos_x", 0),
            (val_sub, ":pos_y", 80),
          (try_end),
        (try_end),

        (set_container_overlay, -1),
        ## items
      ]),

    (ti_on_presentation_mouse_enter_leave,
      [
      (store_trigger_param_1, ":object"),
      (store_trigger_param_2, ":enter_leave"),

      (try_begin),
        (eq, ":enter_leave", 0),
        (try_for_range, ":slot_no", 0, "$temp_2"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (troop_get_slot, ":item_no", "trp_temp_array_c", ":slot_no"),
          (troop_get_slot, ":target_obj", "trp_temp_array_b", ":slot_no"),
          (overlay_get_position, pos0, ":target_obj"),
          (show_item_details, ":item_no", pos0, 100),
          (assign, "$g_current_opened_item_details", ":slot_no"),
        (try_end),
      (else_try),
        (try_for_range, ":slot_no", 0, "$temp_2"),
          (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
          (try_begin),
            (eq, "$g_current_opened_item_details", ":slot_no"),
            (close_item_details),
          (try_end),
        (try_end),
      (try_end),
    ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),

        (try_begin),
          (eq, ":object", "$g_presentation_obj_1"),
          (assign, "$temp", ":value"),
          (start_presentation, "prsnt_all_items"),
        (else_try),
          (eq, ":object", "$g_presentation_obj_5"),
          (presentation_set_duration, 0),
        (try_end),
    ]),
  ]),

## Armour Customization Presentation

  #takes g_current_opened_item_details as parameter
  ("customize_armor", prsntf_manual_end_only, 0, [ 
    (ti_on_presentation_load,
     [(set_fixed_point_multiplier, 1000),

      (assign, "$g_presentation_credits_obj_1", -1),
      (assign, "$g_presentation_credits_obj_2", -1),
      (assign, "$g_presentation_credits_obj_3", -1),
      (assign, "$g_presentation_credits_obj_4", -1),
      (assign, "$g_presentation_credits_obj_5", -1),
      (assign, "$g_presentation_obj_item_select_1", -1),
      (assign, "$g_presentation_obj_item_select_2", -1),
      (assign, "$g_presentation_obj_item_select_3", -1),

      (try_begin),
        (create_mesh_overlay, reg0, "mesh_main_menu_background"),
        (position_set_x, pos1, 0),
        (position_set_y, pos1, 0),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_size, reg0, pos1),
      (try_end),
      #background for menu
      (try_begin),
        (create_mesh_overlay, reg0, "mesh_mp_score_a"),
        (position_set_x, pos1, 295),
        (position_set_y, pos1, 115),
        (overlay_set_position, reg0, pos1),
        (position_set_x, pos1, 1000),
        (position_set_y, pos1, 1000),
        (overlay_set_alpha, reg0, 100),
        (overlay_set_size, reg0, pos1),
      (try_end),
      #clear arrays - use a for radio buttons, b for dropdowns, c for text
      (try_for_range, ":slot_no", 0, custom_armor_maximum_submaterial),
        (troop_set_slot, "trp_temp_array_a", ":slot_no", -1),
        (troop_set_slot, "trp_temp_array_b", ":slot_no", -1),
        (troop_set_slot, "trp_temp_array_c", ":slot_no", -1),
      (try_end),
      
      # (item_get_slot, ":item_variation", "$g_current_opened_item_details", slot_item_player_color),
      (item_get_slot, ":sub_mesh_total", "$g_current_opened_item_details", slot_item_num_components),
      (item_get_slot, ":script_no", "$g_current_opened_item_details", slot_item_init_script),
      (try_begin),
        (gt, ":script_no", 0),
        (assign, ":cur_combobox", 0),
        (assign, ":cur_checkbox", 0),
        (assign, ":cur_textbox", 0),
        (try_for_range, ":sub_mesh", 0, ":sub_mesh_total"),
          (call_script, ":script_no", -1, "$g_player_troop", ":sub_mesh", 0), #get upper bound
          (assign, ":sub_total", "$g_custom_armor_param_count"),
          (assign, ":overlay", -1),
          (try_begin), #only 1 mesh, just a text overlay
            (eq, ":sub_total", 1),
            (eq, "$g_custom_armor_mandatory", 1),
            (create_text_overlay, ":overlay", s1, tf_single_line|tf_left_align),
            # (overlay_set_text, ":overlay", s1),
            (troop_set_slot, "trp_temp_array_c", ":cur_textbox", ":overlay"),
            (val_add, ":cur_textbox", 1),
          (else_try), #assume if first one passes at 0 index, the rest are also mandatory
            (gt, ":sub_total", 1),
            (eq, "$g_custom_armor_mandatory", 1),
            (create_combo_button_overlay, ":overlay"),
            (troop_set_slot, "trp_temp_array_b", ":cur_combobox", ":overlay"),
            (overlay_add_item, ":overlay", "str_randomize"), #default -1 value, "random" depends on item
            (overlay_add_item, ":overlay", s1), #from calling sub_material 0
            (val_add, ":cur_combobox", 1),
            (try_for_range, ":sub_material", 1, ":sub_total"),
                (str_clear, s1),
                (call_script, ":script_no", -1, "$g_player_troop", ":sub_mesh", ":sub_material"),
                (neg|str_is_empty, s1),
                (overlay_add_item, ":overlay", s1),
            (try_end),
          (else_try), #optional mesh, assume all the following can and will apply
            (gt, ":sub_total", 0),
            (try_for_range, ":sub_material", 0, ":sub_total"),
                (str_clear, s1),
                (call_script, ":script_no", -1, "$g_player_troop", ":sub_mesh", ":sub_material"),
                (eq, "$g_custom_armor_mandatory", 0),
                (neg|str_is_empty, s1),
                (create_check_box_overlay, ":overlay", "mesh_checkbox_off", "mesh_checkbox_on"),
                # (overlay_set_tooltip, ":overlay", s1),
                (troop_set_slot, "trp_temp_array_a", ":cur_checkbox", ":overlay"),
                #create a text directly after
                (create_text_overlay, ":overlay", s1, tf_single_line|tf_left_align),
                (val_add, ":cur_checkbox", 1),
            (try_end),
          (try_end),
        (try_end),
        
        #arrange overlays, set values now that we have all of them
        #TODO add 2xcontainer on either side
        (assign, ":cur_x", 150),
        (assign, ":cur_y", 600),
        (position_set_x, pos1, ":cur_x"),
        (assign, ":cur_mesh_slot", slot_item_player_slots_begin),
        (try_for_range, ":slot_no", 0, ":cur_combobox"),
          (troop_get_slot, ":overlay", "trp_temp_array_b", ":slot_no"),
          (gt, ":overlay", -1),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, ":overlay", pos1),
          (try_begin),
            (item_get_slot, ":cur_value", "$g_current_opened_item_details", ":cur_mesh_slot"),
            (val_add, ":cur_value", 1), #should probably cap this somewhere
            (overlay_set_val, ":overlay", ":cur_value"),
            (val_add, ":cur_mesh_slot", 1),
          (try_end),
          (val_sub, ":cur_y", 100), #resize this depending on amount in each combo?
          (try_begin),
            (le, ":cur_y", 100),
            (assign, ":cur_y", 800),
            (val_add, ":cur_x", 100),
            (position_set_x, pos1, ":cur_x"),
          (try_end),
        (try_end),
        
        (try_begin), #no 2nd column boxes so we apply labels in original column
          (eq, ":cur_x", 150),
          (val_sub, ":cur_x", 125),
        (try_end),
        # (assign, ":cur_y", 600),
        (position_set_x, pos1, ":cur_x"),
        (try_for_range, ":slot_no", 0, ":cur_textbox"),
          (troop_get_slot, ":overlay", "trp_temp_array_c", ":slot_no"),
          (gt, ":overlay", -1),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, ":overlay", pos1),
          (overlay_set_color, ":overlay", 0xFFFFFF),
          (val_sub, ":cur_y", 50),
          (try_begin), #reset to top
            (le, ":cur_y", 200),
            (assign, ":cur_y", 800),
            (val_add, ":cur_x", 50),
            (position_set_x, pos1, ":cur_x"),
          (try_end),
        (try_end),

        (assign, ":cur_x", 750),
        (assign, ":cur_y", 600),
        (position_set_x, pos2, 800),
        (position_set_y, pos2, 800),
        (store_sub, ":cur_mesh_slot", slot_item_player_slots_end, 1),
        (try_for_range, ":slot_no", 0, ":cur_checkbox"),
          (troop_get_slot, ":overlay", "trp_temp_array_a", ":slot_no"),
          (gt, ":overlay", -1),
          (position_set_x, pos1, ":cur_x"),
          (position_set_y, pos1, ":cur_y"),
          (overlay_set_position, ":overlay", pos1),
          (try_begin),
            (item_get_slot, ":cur_value", "$g_current_opened_item_details", ":cur_mesh_slot"),
            (neq, ":cur_value", -1), #checkboxes only have 2 states unfortnately
            (overlay_set_val, ":overlay", ":cur_value"),
          (try_end),
          
          #move text
          (val_add, ":overlay", 1),
          (try_begin),
            (eq, ":cur_value", 1),
            (assign, ":color", message_positive),
          (else_try),
            (eq, ":cur_value", 0),
            (assign, ":color", message_negative),
          (else_try),
            (assign, ":color", message_neutral),
          (try_end),
          (overlay_set_color, ":overlay", ":color"),
          (store_add, ":text_x", ":cur_x", 50),
          (position_set_x, pos1, ":text_x"),
          (overlay_set_position, ":overlay", pos1),
          (overlay_set_size, ":overlay", pos2),
          (val_sub, ":cur_mesh_slot", 1),
          (val_sub, ":cur_y", 75),
          (try_begin),
            (le, ":cur_y", 200),
            (assign, ":cur_y", 800),
            (val_add, ":cur_x", 100),
            (position_set_x, pos1, ":cur_x"),
          (try_end),
        (try_end),
        #store these as globals
        (assign, "$g_presentation_obj_item_select_1", ":cur_combobox"),
        (assign, "$g_presentation_obj_item_select_2", ":cur_checkbox"),
        (assign, "$g_presentation_obj_item_select_3", ":cur_textbox"),
      (try_end),
      (store_sub, reg1, ":sub_mesh_total", 1),
      (val_max, reg1, 1),
      (str_store_item_name, s1, "$g_current_opened_item_details"),
      (create_text_overlay, reg0, "@{!}{s1} has {reg1} component meshes", tf_center_justify|tf_single_line|tf_with_outline),
      (position_set_x, pos1, 500),
      (position_set_y, pos1, 700),
      (overlay_set_position, reg0, pos1),
      (overlay_set_color, reg0, 0xFFFFFF),
  
      # (try_for_range, ":slot_no", slot_item_player_slots_begin, slot_item_player_slots_end + 1),
        # (item_get_slot, reg1, "$g_current_opened_item_details", ":slot_no"),
        # (assign, reg2, ":slot_no"),
        # (display_message, "@[{reg2}]:{reg1}"),
      # (try_end),
      #rearrange components, mandatory on left and toggles on right
      
      (create_image_button_overlay_with_tableau_material, "$g_presentation_credits_obj_1", -1, "tableau_custom_armor_window", "$g_player_troop"),
      (position_set_x, pos1, 380),
      (position_set_y, pos1, 200),
      (overlay_set_position, "$g_presentation_credits_obj_1", pos1),
      # (position_set_x, pos1, 1500),
      # (position_set_y, pos1, 1500),
      # (overlay_set_size, "$g_presentation_credits_obj_1", pos1),
      (try_begin),
        (item_get_slot, ":colors_begin", "$g_current_opened_item_details", slot_item_materials_begin),
        (gt, ":colors_begin", 0),
        (item_get_slot, ":colors_end", "$g_current_opened_item_details", slot_item_materials_end),
        (create_combo_label_overlay, "$g_presentation_credits_obj_3"),
        (position_set_x, pos1, 500),
        (position_set_y, pos1, 135),
        (overlay_set_position, "$g_presentation_credits_obj_3", pos1),
        (overlay_add_item, "$g_presentation_credits_obj_3", "str_color"), #default label
        (try_for_range, ":color", ":colors_begin", ":colors_end"),
          (overlay_add_item, "$g_presentation_credits_obj_3", ":color"),
        (try_end),
        # (troop_get_slot, ":cur_color", "$g_player_troop", ),
        (item_get_slot, ":cur_color", "$g_current_opened_item_details", slot_item_player_color),
        (val_add, ":cur_color", 1),
        # (try_begin), #player set this somewhere
          # (gt, ":cur_color", -1),
        (overlay_set_val, "$g_presentation_credits_obj_3", ":cur_color"),
        # (try_end),
      (try_end),
      
      (position_set_y, pos1, 90),
      (store_sub, ":item_no", "$g_current_opened_item_details", 1),
      (try_begin),
        (eq, "$cheat_mode", 1),
        (item_slot_ge, ":item_no", slot_item_num_components, 1),
        (str_store_item_name, s0, ":item_no"),
        (create_button_overlay, "$g_presentation_credits_obj_4", s0),
        (position_set_x, pos1, 250),
        (overlay_set_position, "$g_presentation_credits_obj_4", pos1),
      (try_end),
      (store_add, ":item_no", "$g_current_opened_item_details", 1),
      (try_begin),
        (eq, "$cheat_mode", 1),
        (item_slot_ge, ":item_no", slot_item_num_components, 1),
        (str_store_item_name, s0, ":item_no"),
        (create_button_overlay, "$g_presentation_credits_obj_5", s0),
        (position_set_x, pos1, 575),
        (overlay_set_position, "$g_presentation_credits_obj_5", pos1),
      (try_end),
      (create_game_button_overlay, "$g_presentation_obj_profile_banner_selection_1", "str_reset_to_default"),
      (create_game_button_overlay, "$g_presentation_obj_profile_banner_selection_2", "str_done"),
      (position_set_y, pos1, 50),
      (position_set_x, pos1, 425),
      (overlay_set_position, "$g_presentation_obj_profile_banner_selection_1", pos1),
      (position_set_x, pos1, 575),
      (overlay_set_position, "$g_presentation_obj_profile_banner_selection_2", pos1),
      
      (presentation_set_duration, 999999),
      ]),
      
    (ti_on_presentation_mouse_enter_leave,
       [(store_trigger_param_1, ":object"),
        (try_begin),
          (eq, ":object", "$g_presentation_credits_obj_1"),
          (store_trigger_param_2, ":enter_leave"),
          (try_begin),
            (eq, ":enter_leave", 0),
            (try_begin),
              (assign, ":item_modifier", imod_plain),
              (item_get_type, ":item_type", "$g_current_opened_item_details"),
              (try_begin),
                (is_between, ":item_type", itp_type_head_armor, itp_type_pistol), #head/body/foot/hand
                (val_add, ":item_type", ek_head - itp_type_head_armor),
              (else_try), #pretty sure you can't customize ammo but w/e
                (this_or_next|is_between, ":item_type", itp_type_one_handed_wpn, itp_type_goods),
                (is_between, ":item_type", itp_type_pistol, itp_type_animal),
                #find it on the troop
                (try_for_range, ":slot_no", ek_item_0, ek_head),
                  (troop_get_inventory_slot, ":item_no", "$g_player_troop", ":slot_no"),
                  (eq, ":item_no", "$g_current_opened_item_details"),
                  (assign, ":item_type", ":slot_no"),
                (try_end),
              (try_end),
              (is_between, ":item_type", ek_item_0, ek_horse), #validate input
              (troop_get_inventory_slot_modifier, ":item_modifier", "$g_player_troop", ":item_type"),
              # (overlay_get_position, pos0, ":object"),
              (mouse_get_position, pos0),
              (show_item_details_with_modifier, "$g_current_opened_item_details", ":item_modifier", pos0, 100),
            (try_end),
          (else_try),
            (eq, ":enter_leave", 1),
            (close_item_details),
          (try_end),
        (try_end),
        ]),

    (ti_on_presentation_event_state_change,
      [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        (assign, ":continue", 0),

        (try_begin), #color toggler
          (gt, "$g_presentation_credits_obj_3", -1),
          (eq, ":object", "$g_presentation_credits_obj_3"), #combolabel, switch colours
          # (item_get_slot, ":cur_color", "$g_current_opened_item_details", slot_item_player_color),
          (store_sub, ":color", ":value", 1), #actual value, 0 is default
          (item_set_slot, "$g_current_opened_item_details", slot_item_player_color, ":color"),
        (else_try), #actual item tableau
          (eq, ":object", "$g_presentation_credits_obj_1"), #tableau, switch view sides
          (val_add, "$g_custom_armor_angle", 1),
          (val_mod, "$g_custom_armor_angle", 6), #60x6
          # #apply current colour settings
          # (try_begin),
            # (gt, "$g_presentation_credits_obj_3", -1),
            # (overlay_get_value, ":value", "$g_presentation_credits_obj_3"),
            # (item_set_slot, "$g_current_opened_item_details", slot_item_player_color, ":value"),
          # (try_end),
        (else_try), #reset to default, refresh
          (eq, ":object", "$g_presentation_obj_profile_banner_selection_1"),
          (try_for_range, ":slot_no", slot_item_player_slots_begin, slot_item_player_slots_end + 1),
            (item_set_slot, "$g_current_opened_item_details", ":slot_no", -1),
          (try_end),
        (else_try), #prev
          (eq, ":object", "$g_presentation_credits_obj_4"),
          (val_sub, "$g_current_opened_item_details", 1),
        (else_try), #next
          (eq, ":object", "$g_presentation_credits_obj_5"),
          (val_add, "$g_current_opened_item_details", 1),
        (else_try), #close
          (eq, ":object", "$g_presentation_obj_profile_banner_selection_2"),
          (assign, ":continue", -1),
          (presentation_set_duration, 0),
        (else_try), #go after presentation object stored in arrays, left side combos
          (gt, "$g_presentation_obj_item_select_1", 0),
          (assign, ":cur_mesh_slot", slot_item_player_slots_begin - 1),
          (try_for_range, ":slot_no", 0, "$g_presentation_obj_item_select_1"),
            (val_add, ":cur_mesh_slot", 1), #pre-increment
            (troop_slot_eq, "trp_temp_array_b", ":slot_no", ":object"),
            # (assign, reg0, ":slot_no"),
            # (assign, reg1, ":cur_mesh_slot"),
            (store_sub, ":color", ":value", 1),
            # (assign, reg2, ":color"),
            # (display_message, "@{reg0} setting [{reg1}] to {reg2}"),
            (item_set_slot, "$g_current_opened_item_details", ":cur_mesh_slot", ":color"),
            (assign, "$g_presentation_obj_item_select_1", -1), #loop break
          (try_end),
          (eq, "$g_presentation_obj_item_select_1", -1), #pass on to next block if not fulfilled
        (else_try), #start from other end of sub_mesh_total, right side checkbox
          (gt, "$g_presentation_obj_item_select_2", 0),
          (assign, ":cur_mesh_slot", slot_item_player_slots_end),
          (try_for_range, ":slot_no", 0, "$g_presentation_obj_item_select_2"),
            (val_sub, ":cur_mesh_slot", 1),
            (troop_slot_eq, "trp_temp_array_a", ":slot_no", ":object"),
            (item_set_slot, "$g_current_opened_item_details", ":cur_mesh_slot", ":value"),
            # (assign, reg0, ":slot_no"),
            # (assign, reg1, ":cur_mesh_slot"),
            # (assign, reg2, ":value"),
            # (display_message, "@{reg0} setting [{reg1}] to {reg2}"),
            (assign, "$g_presentation_obj_item_select_2", -1), #loop break
          (try_end),
        (try_end),
        (try_begin),
          (eq, ":continue", 0),
          (start_presentation, "prsnt_customize_armor"),
          (try_begin), #refresh me
            # (in_meta_mission),
            (get_player_agent_no, ":player_agent"),
            (gt, ":player_agent", -1),
            (agent_has_item_equipped, ":player_agent", "$g_current_opened_item_details"),
            (agent_unequip_item, ":player_agent", "$g_current_opened_item_details"),
            (agent_equip_item, ":player_agent", "$g_current_opened_item_details"),
          (try_end),
        (try_end),
      ]),
    ]),




("order_display", prsntf_read_only,0,[
    (ti_on_presentation_load, [
        (set_fixed_point_multiplier, 1000),
        
        (try_for_range, ":slot", 0, 9),
          (troop_set_slot, "trp_multiplayer_profile_troop_male", ":slot", -1),  #recycle for order array
        (try_end),
        
        (assign, ":num_orders", 0),
        (assign, ":y_position", 564),
        (try_begin), #Figure out which orders to display, set strings
          (eq, "$gk_order", 0),
          (str_store_string, s1, "@F4 - Complex formations"),
          (assign, ":num_orders", 1),
          (assign, ":y_position", 474), #564 - 3 * 30
        (else_try),
          (eq, "$gk_order", gk_order_2),
          (str_store_string, s1, "@F7 - Memorize div. placement"),
          (str_store_string, s2, "@F8 - Default division placement"),
          (assign, ":num_orders", 2),
          (assign, ":y_position", 384), #564 - 6 * 30
        (else_try),
          (eq, "$gk_order", gk_order_4),
          (str_store_string, s1, "@F4 - Ranks"),
          (str_store_string, s2, "@F5 - Shield Wall"),
          (str_store_string, s3, "@F6 - Wedge"),
          (str_store_string, s4, "@F7 - Square"),
          (str_store_string, s5, "@F8 - No Formation"),
          (assign, ":num_orders", 5),
        (try_end),
        (assign, "$menu_by_gk_order", "$gk_order"),
        
        (try_for_range, ":i", 0, ":num_orders"),
          (try_begin),
            (eq, ":i", 0),
            (str_store_string_reg, s0, s1),
          (else_try),
            (eq, ":i", 1),
            (str_store_string_reg, s0, s2),
          (else_try),
            (eq, ":i", 2),
            (str_store_string_reg, s0, s3),
          (else_try),
            (eq, ":i", 3),
            (str_store_string_reg, s0, s4),
          (else_try),
            (eq, ":i", 4),
            (str_store_string_reg, s0, s5),
          (try_end),
          (create_text_overlay, ":overlay", s0),
          (overlay_set_color, ":overlay", 0xFFFFFF),
          (position_set_x, pos1, 1000),
          (position_set_y, pos1, 1000),
          (overlay_set_size, ":overlay", pos1),
          (position_set_x, pos1, 1),
          (position_set_y, pos1, ":y_position"),
          (overlay_set_position, ":overlay", pos1),
          
          (troop_set_slot, "trp_multiplayer_profile_troop_male", ":i", ":overlay"),
          (val_sub, ":y_position", 30),
        (try_end),
        (store_mul, ":add_back", 30, ":num_orders"),
        (val_add, ":y_position", ":add_back"),
        (val_sub, ":y_position", 4),
        (try_for_range, ":i", 0, ":num_orders"),
          (create_mesh_overlay, ":overlay", "mesh_order_frame"),
          (position_set_x, pos1, 700),
          (position_set_y, pos1, 700),
          (overlay_set_size, ":overlay", pos1),
          
          (position_set_x, pos1, 0),
          (position_set_y, pos1, ":y_position"),
          (overlay_set_position, ":overlay", pos1),
          
          (val_sub, ":y_position", 30),
        (try_end),
        
        (try_begin),
          # (neq, "$gk_order", 0),
          # (neq, "$gk_order", gk_order_1),
          # (neq, "$gk_order", gk_order_2),
          # (neq, "$gk_order", gk_order_3),
          (eq, "$gk_order", gk_order_4),
          (create_mesh_overlay, ":overlay", "mesh_white_plane"),
          (overlay_set_color, ":overlay", 0),
          (overlay_set_alpha, ":overlay", 0x10),
          (position_set_x, pos1, 14000),
          (position_set_y, pos1, 4500),
          (overlay_set_size, ":overlay", pos1),
          
          (position_set_x, pos1, 0),
          (position_set_y, pos1, 498),
          (overlay_set_position, ":overlay", pos1),
        (try_end),
        
        (presentation_set_duration, 999999),
    ]),
    
    (ti_on_presentation_run, [
        (store_trigger_param_1, ":cur_time"),
        (gt, ":cur_time", 250), #0.25 Second after Pres. Start
        (set_fixed_point_multiplier, 100),
        (try_begin),
          (this_or_next|game_key_clicked, gk_order_1),
          (this_or_next|game_key_clicked, gk_order_2),
          (this_or_next|game_key_clicked, gk_order_3), #Order Keys not used by Expanded Orders
          (this_or_next|game_key_clicked, gk_view_orders),
          (this_or_next|game_key_clicked, gk_group0_hear),
          (this_or_next|game_key_clicked, gk_group1_hear),
          (this_or_next|game_key_clicked, gk_group2_hear),
          (this_or_next|game_key_clicked, gk_group3_hear),
          (this_or_next|game_key_clicked, gk_group4_hear),
          (this_or_next|game_key_clicked, gk_group5_hear),
          (this_or_next|game_key_clicked, gk_group6_hear),
          (this_or_next|game_key_clicked, gk_group7_hear),
          (this_or_next|game_key_clicked, gk_group8_hear),
          (this_or_next|game_key_clicked, gk_everyone_hear),
          (this_or_next|game_key_clicked, gk_reverse_order_group),
          (game_key_clicked, gk_everyone_around_hear),
          (presentation_set_duration, 0),
        (try_end),
        (try_begin),
          (assign, ":key", -1),
          (try_begin),
            (game_key_clicked, gk_order_4),
            (assign, ":key", 4),
          (else_try),
            (game_key_clicked, gk_order_5),
            (assign, ":key", 5),
          (else_try),
            (game_key_clicked, gk_order_6),
            (assign, ":key", 6),
          (else_try),
            (key_clicked, key_f7),
            (assign, ":key", 7),
          (else_try),
            (key_clicked, key_f8),
            (assign, ":key", 8),
          (try_end),
          (neq, ":key", -1),
          (try_begin),
            (eq, "$menu_by_gk_order", 0),
            (presentation_set_duration, 0),
          (else_try),
            (eq, "$menu_by_gk_order", gk_order_4),
            (assign, ":min_key", 4),
            (assign, ":max_key", 8),
            
            (store_sub, ":num_orders", ":max_key", ":min_key"),
            (val_add, ":num_orders", 1),
            (store_sub, ":key_pressed", ":key", ":min_key"),
            (is_between, ":key_pressed", 0, ":num_orders"),
            (try_for_range, ":i", 0, ":num_orders"),
              (troop_get_slot, ":overlay", "trp_multiplayer_profile_troop_male", ":i"),
              (try_begin),
                (neq, ":i", ":key_pressed"),
                (overlay_animate_to_alpha, ":overlay", 400, 0x00),
                (val_add, ":overlay", ":num_orders"),
                (overlay_animate_to_alpha, ":overlay", 400, 0x00),
              (else_try),
                (overlay_animate_to_alpha, ":overlay", 1100, 0x00),
                (val_add, ":overlay", ":num_orders"),
                (overlay_animate_to_alpha, ":overlay", 1100, 0x00),
              (try_end),
            (try_end),
            (presentation_set_duration, 200),
            (close_order_menu),
            (assign, "$native_opening_menu", 0),
          (try_end),
        (try_end),
    ]),
]),

("formation_mod_option", 0, mesh_load_window, [
    (ti_on_presentation_load, [
        (presentation_set_duration, 999999),
        (set_fixed_point_multiplier, 1000),
        
        (create_text_overlay, reg1, "@Extended Formations and AI Options", tf_center_justify),
        (position_set_x, pos0, Screen_Width/2),
        #  (position_set_y, pos0, Screen_Title_Height),
        (position_set_y, pos0, 600),
        (overlay_set_position, reg1, pos0),
        
        #  (assign, ":y_pos", Screen_Title_Height-Screen_Text_Height-Screen_Text_Height),
        (assign, ":y_pos", 450),
        
        #Player division assignment
        (create_text_overlay, reg1, "@Put player in division: ", tf_right_align),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        
        (create_number_box_overlay, "$form_options_overlay_2", 0, 10),
        (copy_position, pos1, pos0),
        (overlay_set_position, "$form_options_overlay_2", pos0),
        
        (overlay_set_val, "$form_options_overlay_2", "$FormAI_player_in_division"),
        
        (store_sub, reg2, "$FormAI_player_in_division", 1),
        (try_begin),
          (lt, reg2, 0),
          (str_store_string, s1, "@None"),
        (else_try),
          (str_store_class_name, s1, reg2),
        (try_end),
        (create_text_overlay, reg1, "@{!}{s1}", tf_left_align),
        (copy_position, pos1, pos0),
        (store_add, reg2, Screen_Width/2, Screen_Numberbox_Width+5),
        (position_set_x, pos1, reg2),
        (overlay_set_position, reg1, pos1),
        
        (val_sub, ":y_pos", Screen_Text_Height),
        
        #Autorotate formations option
        (create_text_overlay, reg1, "@Army rotates to face enemy center: ", tf_right_align),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        
        (create_check_box_overlay, "$form_options_overlay_3", "mesh_checkbox_off", "mesh_checkbox_on"),
        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", Screen_Checkbox_Height_Adj),
        (position_set_y, pos1, reg2),
        (overlay_set_position, "$form_options_overlay_3", pos1),
        
        (overlay_set_val, "$form_options_overlay_3", "$FormAI_autorotate"),
        
        (val_sub, ":y_pos", Screen_Text_Height),
        
        #Prevent AI from taking defensive
        (create_text_overlay, reg1, "@Prevent AI from taking defensive: ", tf_right_align),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        
        (create_check_box_overlay, "$form_options_overlay_4", "mesh_checkbox_off", "mesh_checkbox_on"),
        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", Screen_Checkbox_Height_Adj),
        (position_set_y, pos1, reg2),
        (overlay_set_position, "$form_options_overlay_4", pos1),
        
        (overlay_set_val, "$form_options_overlay_4", "$FormAI_AI_no_defense"),
        
        (val_sub, ":y_pos", Screen_Text_Height),

        #Have AI control troops when Player is KO'd
        (create_text_overlay, reg1, "@AI Controls Troops When Player is KO'd: ", tf_right_align),
        (position_set_y, pos0, ":y_pos"),
        (overlay_set_position, reg1, pos0),
        
        (create_check_box_overlay, "$form_options_overlay_1", "mesh_checkbox_off", "mesh_checkbox_on"),
        (copy_position, pos1, pos0),
        (store_add, reg2, ":y_pos", Screen_Checkbox_Height_Adj),
        (position_set_y, pos1, reg2),
        (overlay_set_position, "$form_options_overlay_1", pos1),
        
        (overlay_set_val, "$form_options_overlay_1", "$FormAI_AI_Control_Troops"),
        
        (val_sub, ":y_pos", Screen_Text_Height),
        
        # This is for Done button
        (assign, "$form_options_overlay_exit", 0), # forced initialization
        (create_game_button_overlay, "$form_options_overlay_exit", "str_done"),
        (position_set_x, pos1, 2*Screen_Width/3),
        (position_set_y, pos1, Screen_Border_Width),
        (overlay_set_position, "$form_options_overlay_exit", pos1),
    ]),
    
    (ti_on_presentation_run, [
        (try_begin),
          (this_or_next|key_clicked, key_escape),
          (key_clicked, key_xbox_start),
          (presentation_set_duration, 0),
        (try_end),
    ]),
    
    (ti_on_presentation_event_state_change, [
        (store_trigger_param_1, ":object"),
        (store_trigger_param_2, ":value"),
        
        (try_begin),
          (eq, ":object", "$form_options_overlay_2"),
          (assign, "$FormAI_player_in_division", ":value"),
          (start_presentation, "prsnt_formation_mod_option"),
        (else_try),
          (eq, ":object", "$form_options_overlay_3"),
          (assign, "$FormAI_autorotate", ":value"),
        (else_try),
          (eq, ":object", "$form_options_overlay_4"),
          (assign, "$FormAI_AI_no_defense", ":value"),
        (else_try),
          (eq, ":object", "$form_options_overlay_1"),
          (assign, "$FormAI_AI_Control_Troops", ":value"),
        (else_try),
          (eq, ":object", "$form_options_overlay_exit"),
          (start_presentation, "prsnt_tld_mod_options"),
        (try_end),
    ]),
]),

  ]
